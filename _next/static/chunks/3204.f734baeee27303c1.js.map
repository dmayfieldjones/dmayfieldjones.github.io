{"version":3,"file":"static/chunks/3204.f734baeee27303c1.js","mappings":"0OAKe,iBAA6C,YAAgB,EAC5E,SAAkC,cAAQ,KAC1C,WAAoC,sBAAgB,wBACpD,gBAA0B,UAAK,QAAU,UAAW,SAAI,CAAC,GAAgB,EAAI,QAAS,SAAI,CAAC,GAAQ,EAAI,uBACvG,mBACA,EAAuB,QAAU,SAAI,CAAC,GAAU,EAAI,wCAA4C,EAAG,EAAG,SAAI,CAAC,GAAQ,EAAI,2CACvH,KACA,WACA,CAAiB,SACjB,UAAuC,GAAW,KAClD,EAAmB,GAAI,MACvB,CCbe,iBAAsC,mBAAsB,EAC3E,gBAA0B,SAAI,CAAC,IAAQ,CAAI,cAAJ,GAA4B,SAAI,CAAC,EAAiC,CAAI,oBAC7G,KACA,KAFyG,KAEzG,+CACA,CAAa,qBAAgC,SAAU,EAAI,EAAG,MAC9D","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantConsequenceDataGridWrapper.js","webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/VariantConsequenceDataGrid.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { measureGridWidth } from '@jbrowse/core/util';\nimport { Checkbox, FormControlLabel, Typography } from '@mui/material';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nexport default function VariantConsequenceDataGridWrapper({ rows, columns, }) {\n    const [checked, setChecked] = useState(false);\n    const widths = columns.map(e => measureGridWidth(rows.map(r => r[e.field])));\n    return rows.length ? (_jsxs(\"div\", { children: [_jsx(FormControlLabel, { control: _jsx(Checkbox, { checked: checked, onChange: event => {\n                        setChecked(event.target.checked);\n                    } }), label: _jsx(Typography, { variant: \"body2\", children: \"Show options\" }) }), _jsx(DataGrid, { rowHeight: 25, rows: rows, columns: columns.map((c, i) => ({\n                    ...c,\n                    width: widths[i],\n                })), slots: {\n                    toolbar: checked ? GridToolbar : null,\n                } })] })) : null;\n}\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport VariantConsequenceDataGridWrapper from './VariantConsequenceDataGridWrapper';\nexport default function VariantConsequenceDataGrid({ data, fields, title, }) {\n    return data.length ? (_jsx(BaseCard, { title: title, children: _jsx(VariantConsequenceDataGridWrapper, { rows: data.map((elt, id) => ({\n                id,\n                ...Object.fromEntries(elt.split('|').map((e, i) => [fields[i], e])),\n            })), columns: fields.map(c => ({ field: c })) }) })) : null;\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0,1]}
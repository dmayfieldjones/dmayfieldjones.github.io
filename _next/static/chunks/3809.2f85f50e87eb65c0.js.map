{"version":3,"file":"static/chunks/3809.2f85f50e87eb65c0.js","mappings":"iLAKO,wBACP,MAAU,UAAI,qCACd,aAAY,GAAW,CAAE,sBAAiB,IAC1C,OAAY,eAAmB,CAAC,UAAc,MACtC,eAAmB,MAAQ,uBAAwB,eAAuB,GAAI,CAC1E,eAAmB,CAAC,GAAsC,EAAI,qBAA+B,EAC7F,eAAmB,MAAQ,yBAA0B,iBAAqB,GAAI,CAC1E,eAAmB,sBACnB,eAAmB,CAAC,GAAS,EAAI,wCAAoD,IACrG","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/MultiLinearVariantMatrixDisplay/renderSvg.js"],"sourcesContent":["import React from 'react';\nimport { getContainingView } from '@jbrowse/core/util';\nimport { when } from 'mobx';\nimport LegendBar from '../shared/LegendBar';\nimport LinesConnectingMatrixToGenomicPosition from './components/LinesConnectingMatrixToGenomicPosition';\nexport async function renderSvg(model, opts, superRenderSvg) {\n    await when(() => !!model.regionCannotBeRenderedText);\n    const { offsetPx } = getContainingView(model);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"g\", { transform: `translate(${Math.max(-offsetPx, 0)})` },\n            React.createElement(LinesConnectingMatrixToGenomicPosition, { exportSVG: true, model: model }),\n            React.createElement(\"g\", { transform: `translate(0,${model.lineZoneHeight})` },\n                React.createElement(\"g\", null, await superRenderSvg(opts)),\n                React.createElement(LegendBar, { model: model, orientation: \"left\", exportSVG: true })))));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
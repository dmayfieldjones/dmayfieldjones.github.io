{"version":3,"file":"static/chunks/5432.55930ade422acd48.js","mappings":"2MAuBA,MAnByB,qBAAQ,OAmBlB,GAnBkB,OAAa,MAmBf,EAAC,MAnBc,EAAqB,EACnE,SAA0B,cAAQ,KAClC,kCACA,OAAY,eAAmB,CAAC,QAAM,EAAI,uCAAyD,CAC3F,eAAmB,CAAC,GAAa,EAAI,OAAS,oBAAuB,CACjE,eAAmB,CAAC,GAAU,iCAC9B,eAAmB,CAAC,GAAU,EAAI,sBAAwB,6IAC1D,eAAmB,CAAC,GAAS,EAAI,qBAC7C,iBACA,CAAiB,mIACjB,WAAiC,YAAc,CAC/C,CAAmB,EACP,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAM,EAAI,iDAC9C,kBAA+C,iBAAkB,EACjE,GACA,CAAqB,aAAuB,WAC5B,eAAmB,CAAC,GAAM,EAAI,gDAAgE,aAC9G,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/ColorByTagDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst ColorByTagDialog = observer(function ({ model, handleClose, }) {\n    const [tag, setTag] = useState('');\n    const validTag = /^[A-Za-z][A-Za-z0-9]$/.exec(tag);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Color by tag\" },\n        React.createElement(DialogContent, { style: { overflowX: 'hidden' } },\n            React.createElement(Typography, null, \"Enter tag to color by: \"),\n            React.createElement(Typography, { color: \"textSecondary\" }, \"Examples: XS or TS for RNA-seq inferred read strand, ts (lower-case) for minimap2 read strand, HP for haplotype, RG for read group, etc.\"),\n            React.createElement(TextField, { value: tag, onChange: event => {\n                    setTag(event.target.value);\n                }, placeholder: \"Enter tag name\", error: tag.length === 2 && !validTag, helperText: tag.length === 2 && !validTag ? 'Not a valid tag' : '', autoComplete: \"off\", slotProps: {\n                    htmlInput: { maxLength: 2 },\n                } }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", onClick: () => {\n                        model.setColorScheme({ type: 'tag', tag });\n                        handleClose();\n                    }, disabled: !validTag }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: handleClose }, \"Cancel\")))));\n});\nexport default ColorByTagDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
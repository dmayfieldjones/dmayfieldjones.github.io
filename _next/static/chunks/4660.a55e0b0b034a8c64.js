"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4660],{14660:(e,t,i)=>{i.r(t),i.d(t,{default:()=>h});var l=i(95155),o=i(12115),a=i(54262),s=i(23806),r=i(20109),n=i(19293),c=i(78443),u=i(67072);let d=(0,i(97771).makeStyles)()(e=>({paper:{margin:e.spacing(),padding:e.spacing()},submit:{marginTop:25,marginBottom:100,display:"block"}})),h=(0,u.observer)(function({model:e}){let{classes:t}=d(),[i,u]=(0,o.useState)(""),[h,p]=(0,o.useState)(`MultiWiggle${+Date.now()}`);return(0,l.jsxs)(r.A,{className:t.paper,children:[(0,l.jsxs)("ul",{children:[(0,l.jsx)("li",{children:"Enter list of URLs for bigwig files in the textbox"}),(0,l.jsx)("li",{children:"Or, use the button below the text box to select files from your computer"})]}),(0,l.jsx)(n.A,{multiline:!0,fullWidth:!0,rows:10,value:i,placeholder:"Paste list of URLs here, or use file selector below",variant:"outlined",onChange:e=>{u(e.target.value)}}),(0,l.jsxs)(c.A,{variant:"outlined",component:"label",children:["Choose Files from your computer",(0,l.jsx)("input",{type:"file",hidden:!0,multiple:!0,onChange:({target:e})=>{u(JSON.stringify([...e.files||[]].map(e=>({type:"BigWigAdapter",bigWigLocation:function(e){let{webUtils:t}=window.require("electron");return a.isElectron?{localPath:t.getPathForFile(e),locationType:"LocalPathLocation"}:(0,s.storeBlobLocation)({blob:e})}(e),source:e.name})),null,2))}})]}),(0,l.jsx)(n.A,{value:h,helperText:"Track name",onChange:e=>{p(e.target.value)}}),(0,l.jsx)(c.A,{variant:"contained",className:t.submit,onClick:()=>{!function({trackName:e,val:t,model:i}){var l;let o=(0,a.getSession)(i);try{let s;let r=[`${e.toLowerCase().replaceAll(" ","_")}-${Date.now()}`,o.adminMode?"":"-sessionTrack"].join("");try{s=JSON.parse(t)}catch(e){s=t.split(/\n|\r\n|\r/).map(e=>e.trim()).filter(e=>!!e)}let n="string"==typeof s[0]?{bigWigs:s}:{subadapters:s};(0,a.isSessionWithAddTracks)(o)&&(o.addTrackConf({trackId:r,type:"MultiQuantitativeTrack",name:e,assemblyNames:[i.assembly],adapter:{type:"MultiWiggleAdapter",...n}}),null===(l=i.view)||void 0===l||l.showTrack(r)),i.clearData(),(0,a.isSessionModelWithWidgets)(o)&&o.hideWidget(i)}catch(e){console.error(e),o.notifyError(`${e}`,e)}}({trackName:h,val:i,model:e})},children:"Submit"}),(0,l.jsx)("p",{children:"Additional notes: "}),(0,l.jsxs)("ul",{children:[(0,l.jsxs)("li",{children:["The list of bigwig files in the text box can be a list of URLs, or a list of elements like"," ",(0,l.jsx)("code",{children:'[{"type":"BigWigAdapter","bigWigLocation":{"uri":"http://host/file.bw"}, "color":"green","source":"name for subtrack"}]'})," ","to apply e.g. the color attribute to the view"]}),(0,l.jsx)("li",{children:'Adding local files will update the textbox with JSON contents that are ready to submit with the "Submit" button'})]})]})})}}]);
//# sourceMappingURL=4660.a55e0b0b034a8c64.js.map
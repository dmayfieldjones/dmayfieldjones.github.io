{"version":3,"file":"static/chunks/7548.67c835bd64fc2394.js","mappings":"gKAIA,MAAkB,uBAAU,QAC5B,qBACA,yBACA,cACA,SACA,oBACA,cAAuB,yBAA6B,QACpD,iBACA,oBACA,oBACA,CAAK,CACL,gBACA,oBACA,qBACA,oBACA,iBACA,CAAK,CACL,CAAC,EAcD,EAbmB,cAAQ,cAaZ,GAbyB,EAAO,EAC/C,KAY0B,OAZd,oDAAuD,EACnE,EAAgB,YAAM,OACtB,SAAY,GAAU,IAEtB,gBAA4B,SAAI,QAAU,sGAC1C,QAAqB,EAFrB,EAEsC,IACtC,qBACA,CAAS,aAA+B,UAAK,QAAU,sFACvD,uBACA,KACA,CAAa,iEAAoG,EAAI,MACrH,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearGenomeView/components/CenterLine.js"],"sourcesContent":["import { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRef } from 'react';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    centerLineContainer: {\n        background: 'transparent',\n        height: '100%',\n        zIndex: 4,\n        position: 'absolute',\n        border: `1px ${theme.palette.action.active} dashed`,\n        borderTop: 'none',\n        borderBottom: 'none',\n        pointerEvents: 'none',\n    },\n    centerLineText: {\n        position: 'absolute',\n        pointerEvents: 'none',\n        whiteSpace: 'nowrap',\n        fontWeight: 'bold',\n    },\n}));\nconst CenterLine = observer(function ({ model }) {\n    const { bpPerPx, centerLineInfo, trackHeights, tracks, width } = model;\n    const ref = useRef(null);\n    const { classes } = useStyles();\n    const startingPosition = width / 2;\n    return tracks.length ? (_jsx(\"div\", { \"data-testid\": \"centerline_container\", className: classes.centerLineContainer, role: \"presentation\", ref: ref, style: {\n            left: `${startingPosition}px`,\n            width: Math.max(1 / bpPerPx, 1),\n        }, children: centerLineInfo && (_jsxs(\"div\", { \"data-testid\": \"centerline_text\", className: classes.centerLineText, role: \"presentation\", style: {\n                left: Math.max(1 / bpPerPx, 1) + 5,\n                top: trackHeights,\n            }, children: [centerLineInfo.refName, \":\", ' ', Math.max(Math.round(centerLineInfo.offset) + 1, 0)] })) })) : null;\n});\nexport default CenterLine;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
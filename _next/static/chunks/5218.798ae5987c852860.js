"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5218],{25218:(e,t,n)=>{n.r(t),n.d(t,{default:()=>M});var i=n(95155),s=n(12115),r=n(94029),l=n(9670),o=n(83636),a=n(54102),c=n(81852),d=n(19468),u=n(15715),p=n(64294),h=n(70473),x=n(64150),j=n(66292),g=n(96358),v=n(51539);let y=(0,d.observer)(function({model:e,children:t,handleClose:n}){let[l,o]=(0,s.useState)(""),[a,c]=(0,s.useState)(),[d,y]=(0,s.useState)("");return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(x.A,{children:[t,(0,i.jsxs)("div",{children:[l?(0,i.jsxs)("div",{style:{padding:50},children:[(0,i.jsxs)("span",{style:{width:400},children:["Progress: ",l]}),(0,i.jsx)(j.A,{onClick:()=>{(0,p.stopStopToken)(d)},children:"Stop"})]}):null,a?(0,i.jsx)(r.ErrorMessage,{error:a}):null]})]}),(0,i.jsxs)(g.A,{children:[(0,i.jsx)(j.A,{variant:"contained",onClick:async()=>{try{c(void 0);let t=(0,u.getContainingView)(e);if(!t.initialized)return;let{rpcManager:i}=(0,u.getSession)(e),{sourcesWithoutLayout:s,minorAlleleFrequencyFilter:r,adapterConfig:l}=e;if(s){let n=(0,h.getRpcSessionId)(e),a=(0,p.createStopToken)();y(a);let c=await i.call(n,"MultiVariantClusterGenotypeMatrix",{regions:t.dynamicBlocks.contentBlocks,sources:s,minorAlleleFrequencyFilter:r,sessionId:n,adapterConfig:l,stopToken:a,statusCallback:e=>{o(e)}});e.setLayout(c.order.map(e=>{let t=s[e];if(!t)throw Error(`out of bounds at ${e}`);return t}))}n()}catch(t){!(0,u.isAbortException)(t)&&(0,v.isAlive)(e)&&(console.error(t),c(t))}finally{o(""),y("")}},children:"Run clustering"}),(0,i.jsx)(j.A,{variant:"contained",color:"secondary",onClick:()=>{n(),d&&(0,p.stopStopToken)(d)},children:"Cancel"})]})]})});var m=n(84762),A=n(95946),f=n(69068),C=n.n(f),b=n(91540);let k=(0,n(74100).makeStyles)()(e=>({textAreaFont:{fontFamily:"Courier New"},mgap:{display:"flex",flexDirection:"column",gap:e.spacing(4)}})),w=(0,d.observer)(function({model:e,handleClose:t,children:n}){let{classes:d}=k(),[p,y]=(0,s.useState)(""),[f,w]=(0,s.useState)(),[S,M]=(0,s.useState)(),[E,R]=(0,s.useState)(!1),[B,$]=(0,s.useState)(!1),[T,O]=(0,u.useLocalStorage)("cluster-clusterMethod","single");(0,s.useEffect)(()=>{(async()=>{try{M(void 0),w(void 0),R(!0);let t=(0,u.getContainingView)(e);if(!t.initialized)return;let{rpcManager:n}=(0,u.getSession)(e),{sourcesWithoutLayout:i,minorAlleleFrequencyFilter:s,adapterConfig:r}=e,l=(0,h.getRpcSessionId)(e),o=await n.call(l,"MultiVariantGetGenotypeMatrix",{regions:t.dynamicBlocks.contentBlocks,sources:i,minorAlleleFrequencyFilter:s,sessionId:l,adapterConfig:r});w(o)}catch(t){!(0,u.isAbortException)(t)&&(0,v.isAlive)(e)&&(console.error(t),M(t))}finally{R(!1)}})()},[e]);let D=f?`inputMatrix<-matrix(c(${Object.values(f).map(e=>e.join(",")).join(",\n")}
),nrow=${Object.values(f).length},byrow=TRUE)
rownames(inputMatrix)<-c(${Object.keys(f).map(e=>`'${e}'`).join(",")})
resultClusters<-hclust(dist(inputMatrix), method='${T}')
cat(resultClusters$order,sep='\\n')`:void 0,F=f?Object.entries(f).map(([e,t])=>[e,...t].join("	")).join("\n"):void 0;return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(x.A,{children:[n,(0,i.jsxs)(m.A,{style:{padding:16},children:[(0,i.jsxs)("div",{style:{display:"flex",gap:"8px",flexWrap:"wrap",marginBottom:"16px"},children:[(0,i.jsx)(j.A,{variant:"contained",onClick:()=>{(0,b.saveAs)(new Blob([D||""],{type:"text/plain;charset=utf-8"}),"cluster.R")},children:"Download Rscript"})," ","or"," ",(0,i.jsx)(j.A,{variant:"contained",onClick:()=>{C()(D||"")},children:"Copy Rscript to clipboard"})," ","or"," ",(0,i.jsx)(j.A,{variant:"contained",onClick:()=>{(0,b.saveAs)(new Blob([F||""],{type:"text/plain;charset=utf-8"}),"genotypes.tsv")},children:"Download TSV"}),(0,i.jsxs)("div",{children:[(0,i.jsx)(j.A,{variant:"contained",onClick:()=>{$(!B)},children:B?"Hide advanced options":"Show advanced options"}),B?(0,i.jsxs)("div",{children:[(0,i.jsx)(l.A,{variant:"h6",children:"Advanced options"}),(0,i.jsx)(o.A,{children:Object.entries({single:"Single",complete:"Complete"}).map(([e,t])=>(0,i.jsx)(a.A,{control:(0,i.jsx)(c.A,{checked:T===e,onChange:()=>{O(e)}}),label:t},e))})]}):null]}),D?(0,i.jsx)("div",{}):E?(0,i.jsx)(r.LoadingEllipses,{variant:"h6",title:"Generating genotype matrix"}):S?(0,i.jsx)(r.ErrorMessage,{error:S}):null]}),(0,i.jsxs)("div",{children:[(0,i.jsx)(l.A,{variant:"subtitle2",gutterBottom:!0,style:{marginTop:"16px"},children:"Clustering Results:"}),(0,i.jsx)(A.A,{multiline:!0,fullWidth:!0,variant:"outlined",placeholder:"Paste results from Rscript here (sequence of numbers, one per line, specifying the new ordering)",rows:10,value:p,onChange:e=>{y(e.target.value)},slotProps:{input:{classes:{input:d.textAreaFont}}}})]})]})]}),(0,i.jsxs)(g.A,{children:[(0,i.jsx)(j.A,{variant:"contained",onClick:()=>{let{sourcesWithoutLayout:n}=e;if(n)try{e.setLayout(p.split("\n").map(e=>e.trim()).filter(e=>!!e).map(e=>+e).map(e=>{let t=n[e-1];if(!t)throw Error(`out of bounds at ${e}`);return t}))}catch(t){console.error(t),(0,u.getSession)(e).notifyError(`${t}`,t)}t()},children:"Apply clustering"}),(0,i.jsx)(j.A,{variant:"contained",color:"secondary",onClick:()=>{t()},children:"Cancel"})]})]})});function S({activeMode:e,setActiveMode:t}){return(0,i.jsxs)("div",{children:[(0,i.jsx)(l.A,{style:{marginBottom:30},children:"This procedure will cluster the visible genotype data using hierarchical clustering"}),(0,i.jsx)(o.A,{children:Object.entries({auto:(0,i.jsx)("div",{children:"Run in-app clustering (slow for large data, built in JS clustering)"}),manual:(0,i.jsx)("div",{children:"Download R script to run clustering (faster for large data, uses hclust, may be more accurate)"})}).map(([n,s])=>(0,i.jsx)(a.A,{control:(0,i.jsx)(c.A,{checked:e===n,onChange:()=>{t(n)}}),label:s},n))})]})}let M=(0,d.observer)(function({model:e,handleClose:t}){let[n,l]=(0,s.useState)("auto");return(0,i.jsx)(r.Dialog,{open:!0,title:"Cluster by genotype",onClose:(e,n)=>{"backdropClick"!==n&&t()},children:"auto"===n?(0,i.jsx)(y,{model:e,handleClose:t,children:(0,i.jsx)(S,{activeMode:n,setActiveMode:l})}):(0,i.jsx)(w,{model:e,handleClose:t,children:(0,i.jsx)(S,{activeMode:n,setActiveMode:l})})})})}}]);
//# sourceMappingURL=5218.798ae5987c852860.js.map
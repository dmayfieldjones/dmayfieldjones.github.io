{"version":3,"file":"static/chunks/1914.3a112913db8ede9a.js","mappings":"oJAEe,iBAAgC,aAAW,CAC1D,iBACA,yBACA,EAAqB,kBAAY,uCAEjC,0BADA,2BAEA,oBACA,iBACA,eACA,QACA,sBACA,aACS,EACT,CACA,cAOA,OANA,aACA,uCAEA,MADA,mBACA,CACA,EAAa,EAEb,YAEA,mBACA,yBACA,+BACA,UACA,QACA,SACA,CAAS,CACT,CACA,YACA,QACA,CACA,iBACA","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-sequence/esm/ChromSizesAdapter/ChromSizesAdapter.js"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nexport default class ChromSizesAdapter extends BaseAdapter {\n    async setupPre() {\n        const pm = this.pluginManager;\n        const file = openLocation(this.getConf('chromSizesLocation'), pm);\n        const data = await file.readFile('utf8');\n        return Object.fromEntries(data\n            .split(/\\n|\\r\\n|\\r/)\n            .map(f => f.trim())\n            .filter(f => !!f)\n            .map(line => {\n            const [name, length] = line.split('\\t');\n            return [name, +length];\n        }));\n    }\n    async setup() {\n        if (!this.setupP) {\n            this.setupP = this.setupPre().catch((e) => {\n                this.setupP = undefined;\n                throw e;\n            });\n        }\n        return this.setupP;\n    }\n    async getRegions() {\n        const refSeqs = await this.setup();\n        return Object.keys(refSeqs).map(refName => ({\n            refName,\n            start: 0,\n            end: refSeqs[refName],\n        }));\n    }\n    getHeader() {\n        return {};\n    }\n    freeResources() { }\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
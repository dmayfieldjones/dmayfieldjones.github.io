{"version":3,"file":"static/chunks/1534.f98cd853fe6f8cf7.js","mappings":"wKAMO,gBACP,IAAY,0EAAmE,EAC/E,OACA,EAAkB,oBAAc,mBAChC,EAAuB,oBAAc,wBACrC,EAAqB,oBAAc,eACnC,EAAqB,oBAAc,eACnC,EAAkB,oBAAc,YAChC,EAAsB,oBAAc,gBACpC,kCACA,EAAkB,cAAQ,EAC1B,KACA,sBACA,gCACK,EACL,EAAmB,cAAQ,EAAG,iBAAkC,EAChE,aACA,YACA,OAA8B,oBAAc,oBAAoB,UAAgB,EAChF,aACA,OACA,OACA,2BACA,KACA,KACA,oBACA,yBACA,0BACY,oBAAc,IAC1B,qBAEA,SAAkC,mBAAa,QAC/C,gCACA,UACA,KAEA,qBACA,cACA,UAxCA,EAyCA,oBACA,mBACA,CAEA,GADA,SACA,EAEA,aADA,cACA,aACA,0BACgB,oBAAc,IAC9B,qBAEA,SAAsC,mBAAa,QACnD,MArDA,GAsDA,gBACA,KACgB,iBAAW,OAvD3B,EAuD2B,GAE3B,0BACgB,iBAAW,OA1D3B,EA0D2B,EAE3B,CAGA,OADA,YACA,iBAAa,EACb","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/drawDensity.js"],"sourcesContent":["import { readConfObject } from '@jbrowse/core/configuration';\nimport { featureSpanPx } from '@jbrowse/core/util';\nimport { checkStopToken } from '@jbrowse/core/util/stopToken';\nimport { fillRectCtx, getScale } from './util';\nconst fudgeFactor = 0.3;\nconst clipHeight = 2;\nexport function drawDensity(ctx, props) {\n    const { stopToken, features, regions, bpPerPx, scaleOpts, height, config } = props;\n    const region = regions[0];\n    const pivot = readConfObject(config, 'bicolorPivot');\n    const pivotValue = readConfObject(config, 'bicolorPivotValue');\n    const negColor = readConfObject(config, 'negColor');\n    const posColor = readConfObject(config, 'posColor');\n    const color = readConfObject(config, 'color');\n    const clipColor = readConfObject(config, 'clipColor');\n    const crossing = pivot !== 'none' && scaleOpts.scaleType !== 'log';\n    const scale = getScale({\n        ...scaleOpts,\n        pivotValue: crossing ? pivotValue : undefined,\n        range: crossing ? [negColor, '#eee', posColor] : ['#eee', posColor],\n    });\n    const scale2 = getScale({ ...scaleOpts, range: [0, height] });\n    const cb = color === '#f0f'\n        ? (_, score) => scale(score)\n        : (feature, score) => readConfObject(config, 'color', { feature, score });\n    const domain = scale2.domain();\n    const niceMin = domain[0];\n    const niceMax = domain[1];\n    let prevLeftPx = Number.NEGATIVE_INFINITY;\n    let hasClipping = false;\n    const reducedFeatures = [];\n    let start = performance.now();\n    for (const feature of features.values()) {\n        if (performance.now() - start > 400) {\n            checkStopToken(stopToken);\n            start = performance.now();\n        }\n        const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx);\n        if (Math.floor(leftPx) !== Math.floor(prevLeftPx)) {\n            reducedFeatures.push(feature);\n            prevLeftPx = leftPx;\n        }\n        const score = feature.get('score');\n        hasClipping = hasClipping || score > niceMax || score < niceMin;\n        const w = rightPx - leftPx + fudgeFactor;\n        ctx.fillStyle = cb(feature, score);\n        ctx.fillRect(leftPx, 0, w, height);\n    }\n    ctx.save();\n    if (hasClipping) {\n        ctx.fillStyle = clipColor;\n        for (const feature of features.values()) {\n            if (performance.now() - start > 400) {\n                checkStopToken(stopToken);\n                start = performance.now();\n            }\n            const [leftPx, rightPx] = featureSpanPx(feature, region, bpPerPx);\n            const w = rightPx - leftPx + fudgeFactor;\n            const score = feature.get('score');\n            if (score > niceMax) {\n                fillRectCtx(leftPx, 0, w, clipHeight, ctx);\n            }\n            else if (score < niceMin && scaleOpts.scaleType !== 'log') {\n                fillRectCtx(leftPx, 0, w, clipHeight, ctx);\n            }\n        }\n    }\n    ctx.restore();\n    return { reducedFeatures };\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
{"version":3,"file":"static/chunks/3326.e64faa107f941436.js","mappings":"2KAIA,MAAc,cAAQ,iBAAa,EAAQ,EAE3C,iBADiB,uBAAiB,IAClC,4BACA,WACA,EAAe,iBAAW,KAC1B,WACA,CAAK,UACL,OAAY,eAAmB,WAAa,gDAAiD,+BAAqC,sBAAwC,CAC1K,CAAC,EAKD,EAJsC,cAAQ,cAI/B,GAJ4C,EAAQ,EACnE,OAAY,eAAmB,CAAC,CAGa,CAHb,CAAoB,EAAI,QAAc,CAC9D,eAAmB,IAAU,QAAc,EACnD,CAAC,qHCTD,MAAkB,uBAAU,QAC5B,SACA,6CACA,kFAA2F,qCAAyC,OAAO,qCAAyC,OACpL,oBACA,SACA,UACA,UACA,QACA,qBACA,kBACA,CAAK,CACJ,GACD,EAAmB,cAAQ,iBAAa,EAAQ,EAChD,UAAY,GAAQ,EACpB,OAAY,eAAmB,CAAC,IAAQ,EAAI,WAAY,EAAM,0BAA8B,eAAmB,CAAC,GAAO,EAAI,eAAiB,CAChI,eAAmB,CAAC,GAAM,EAAI,2CAC1C,UACA,EAAmB,YAAc,CACjC,CAAC,EACD,EAA6B,cAAQ,iBAAa,aAAkB,EACpE,UAAY,oBAAwB,EACpC,SAAoB,eAAmB,IAAe,QAAc,+BAA0D,eAAmB,IAAgB,QAAc,GAC/K,CAAC,EACD,EAAoB,cAAQ,iBAAa,aAAkB,EAC3D,UAAY,aAAiB,EAC7B,EAAiB,uBAAiB,IAClC,sCACA,OAAY,eAAmB,QAAU,uBAAwB,EAAM,EAAG,CAClE,eAAmB,QAAU,OAAS,4BAA8B,IAC5E,SAAgC,eAAmB,IAAe,QAAc,OAChF,CAAC,EACD,EAAmB,cAAQ,iBAAa,EAAQ,EAChD,YAAY,GAAU,IACtB,SAAY,GAAU,EACtB,OAAY,eAAmB,QAAU,oBAA4B,CAC7D,eAAmB,CAAC,iBAAe,EAAI,UAAkB,EACjE,CAAC,EACD,EAAe","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/LinearReadCloudDisplay/components/ReactComponent.js","webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/shared/components/BaseDisplayComponent.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { getContainingView } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport BaseDisplayComponent from '../../shared/components/BaseDisplayComponent';\nconst Cloud = observer(function ({ model, }) {\n    const view = getContainingView(model);\n    const width = Math.round(view.dynamicBlocks.totalWidthPx);\n    const height = model.height;\n    const cb = useCallback((ref) => {\n        model.setRef(ref);\n    }, [model, width, height]);\n    return (React.createElement(\"canvas\", { \"data-testid\": \"cloud-canvas\", ref: cb, style: { width, height, position: 'absolute' }, width: width * 2, height: height * 2 }));\n});\nconst LinearReadCloudReactComponent = observer(function ({ model, }) {\n    return (React.createElement(BaseDisplayComponent, { model: model },\n        React.createElement(Cloud, { model: model })));\n});\nexport default LinearReadCloudReactComponent;\n","import React from 'react';\nimport { LoadingEllipses } from '@jbrowse/core/ui';\nimport { getContainingView } from '@jbrowse/core/util';\nimport { BlockMsg } from '@jbrowse/plugin-linear-genome-view';\nimport { Button, Tooltip } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    loading: {\n        backgroundColor: theme.palette.background.default,\n        backgroundImage: `repeating-linear-gradient(45deg, transparent, transparent 5px, ${theme.palette.action.disabledBackground} 5px, ${theme.palette.action.disabledBackground} 10px)`,\n        position: 'absolute',\n        bottom: 0,\n        height: 50,\n        width: 300,\n        right: 0,\n        pointerEvents: 'none',\n        textAlign: 'center',\n    },\n}));\nconst BlockError = observer(function ({ model, }) {\n    const { error } = model;\n    return (React.createElement(BlockMsg, { message: `${error}`, severity: \"error\", action: React.createElement(Tooltip, { title: \"Reload\" },\n            React.createElement(Button, { \"data-testid\": \"reload_button\", onClick: () => {\n                    model.reload();\n                } }, \"Reload\")) }));\n});\nconst BaseDisplayComponent = observer(function ({ model, children, }) {\n    const { error, regionTooLarge } = model;\n    return error ? (React.createElement(BlockError, { model: model })) : regionTooLarge ? (model.regionCannotBeRendered()) : (React.createElement(DataDisplay, { model: model }, children));\n});\nconst DataDisplay = observer(function ({ model, children, }) {\n    const { drawn, loading } = model;\n    const view = getContainingView(model);\n    const left = (model.lastDrawnOffsetPx || 0) - view.offsetPx;\n    return (React.createElement(\"div\", { \"data-testid\": `drawn-${drawn}` },\n        React.createElement(\"div\", { style: { position: 'absolute', left } }, children),\n        left !== 0 || loading ? React.createElement(LoadingBar, { model: model }) : null));\n});\nconst LoadingBar = observer(function ({ model, }) {\n    const { classes } = useStyles();\n    const { message } = model;\n    return (React.createElement(\"div\", { className: classes.loading },\n        React.createElement(LoadingEllipses, { message: message })));\n});\nexport default BaseDisplayComponent;\n"],"names":[],"sourceRoot":"","ignoreList":[0,1]}
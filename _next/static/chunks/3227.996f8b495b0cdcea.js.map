{"version":3,"file":"static/chunks/3227.996f8b495b0cdcea.js","mappings":"2KAKA,MAAkB,uBAAU,SAC5B,IACA,mBACA,CAAK,CACL,CAAC,EACD,0BACA,cAAiC,gBAA8B,GAC/D,EAAwB,YAAgB,eACxC,YAAY,WAAiB,EAC7B,SAAY,GAAU,IACtB,mBACA,eACA,mBACA,SAAY,qCAA6C,iBACzD,GACA,EACA,MAAwB,cAAQ,OAAa,cAAQ,IAAQ,IAAI,cAAQ,IAAM,EAC/E,CACA,eACA,UACA,OAAY,eAAmB,QAAU,MAAe,CAChD,eAAmB,cACf,eAAmB,mBACnB,eAAmB,cACf,eAAmB,WACf,eAAmB,YACnB,eAAmB,mBACnB,eAAmB,oBACnB,eAAmB,yBACnB,eAAmB,wBAC3B,eAAmB,cACf,eAAmB,WACf,eAAmB,YACnB,eAAmB,oBACnB,eAAmB,cACnB,eAAmB,gBACnB,eAAmB,iBACvB,eAAmB,WACf,eAAmB,YACnB,eAAmB,WACvC,OACA,MAAsC,gBAAsB,OACxC,eAAmB,yBACnB,eAAmB,8BACnB,eAAmB,WACvC,WAAuC,QAAU,QACjD,UAAsC,OAAS,UAC/C,8DAAyG,eAAmB,OAAS,OAAQ,EAAI,GAAG,EAAK,EAAG,CACxI,eAAmB,WACf,eAAmB,IAAgB,eAA0B,GACjE,eAAmB,WACvC,gBACA,KACoB,eAAmB,OAAS,eAAuB,EACvE,aACA,0BACA,SAAuC,qBAA2B,QAClE,GACA,CACA,eACA,WACoB,eAAmB,mCACvC,MACA,mBACoB,eAAmB,WACvC,WAAyC,QAAY,QACrD,UAAwC,OAAW,cACnD,CAAC,EACD,iBAAuB,UAAc,EACrC,MACA,yBAAY,GAAuB,EACnC,4BAAsC,eAAmB,QAAU,OACnE,SACA,UACA,6EACA,CAAW,MACX,CAMA,MAL2B,cAAQ,aACnC,CAIe,EAJf,OAAY,GAAQ,EACpB,CAAY,GAGqB,EAAC,aAHtB,GAA0B,EACtC,sCAAyD,eAAmB,CAAC,IAAO,EAAI,uBAA4C,CACpI,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/LinearSNPCoverageDisplay/components/Tooltip.js"],"sourcesContent":["import React from 'react';\nimport { toLocale } from '@jbrowse/core/util';\nimport { Tooltip } from '@jbrowse/plugin-wiggle';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(() => ({\n    td: {\n        whiteSpace: 'nowrap',\n    },\n}));\nconst toP = (s = 0) => +(+s).toFixed(1);\nconst pct = (n, total = 1) => `${toP((n / (total || 1)) * 100)}%`;\nconst TooltipContents = React.forwardRef(function TooltipContents2(props, reactRef) {\n    const { feature, model } = props;\n    const { classes } = useStyles();\n    const start = feature.get('start') + 1;\n    const end = feature.get('end');\n    const name = feature.get('refName');\n    const { refbase, readsCounted, depth, ref, ...info } = feature.get('snpinfo');\n    const loc = [\n        name,\n        start === end ? toLocale(start) : `${toLocale(start)}..${toLocale(end)}`,\n    ]\n        .filter(f => !!f)\n        .join(':');\n    return (React.createElement(\"div\", { ref: reactRef },\n        React.createElement(\"table\", null,\n            React.createElement(\"caption\", null, loc),\n            React.createElement(\"thead\", null,\n                React.createElement(\"tr\", null,\n                    React.createElement(\"th\", null),\n                    React.createElement(\"th\", null, \"Base\"),\n                    React.createElement(\"th\", null, \"Count\"),\n                    React.createElement(\"th\", null, \"% of Total\"),\n                    React.createElement(\"th\", null, \"Strands\"))),\n            React.createElement(\"tbody\", null,\n                React.createElement(\"tr\", null,\n                    React.createElement(\"td\", null),\n                    React.createElement(\"td\", null, \"Total\"),\n                    React.createElement(\"td\", null, readsCounted),\n                    React.createElement(\"td\", null, \" \"),\n                    React.createElement(\"td\", null, \" \")),\n                React.createElement(\"tr\", null,\n                    React.createElement(\"td\", null),\n                    React.createElement(\"td\", null,\n                        \"REF \",\n                        refbase ? `(${refbase.toUpperCase()})` : ''),\n                    React.createElement(\"td\", null, ref.entryDepth),\n                    React.createElement(\"td\", null, pct(ref.entryDepth, readsCounted)),\n                    React.createElement(\"td\", null,\n                        ref['-1'] ? `${ref['-1']}(-)` : '',\n                        ref['1'] ? `${ref['1']}(+)` : '')),\n                Object.entries(info).map(([key, entry]) => Object.entries(entry).map(([base, score]) => (React.createElement(\"tr\", { key: `${key}_${base}` },\n                    React.createElement(\"td\", null,\n                        React.createElement(ColorSquare, { model: model, base: base })),\n                    React.createElement(\"td\", null,\n                        base.toUpperCase(),\n                        \" \"),\n                    React.createElement(\"td\", { className: classes.td }, [\n                        score.entryDepth,\n                        score.avgProbability !== undefined\n                            ? `(avg. ${pct(score.avgProbability)} prob.)`\n                            : '',\n                    ]\n                        .filter(f => !!f)\n                        .join(' ')),\n                    React.createElement(\"td\", null, base === 'depth' || base === 'skip'\n                        ? '---'\n                        : pct(score.entryDepth, readsCounted)),\n                    React.createElement(\"td\", null,\n                        score['-1'] ? `${score['-1']}(-)` : '',\n                        score['1'] ? `${score['1']}(+)` : '')))))))));\n});\nfunction ColorSquare({ base, model, }) {\n    var _a;\n    const { visibleModifications } = model;\n    return base.startsWith('mod_') ? (React.createElement(\"div\", { style: {\n            width: 10,\n            height: 10,\n            background: (_a = visibleModifications.get(base.replace('mod_', ''))) === null || _a === void 0 ? void 0 : _a.color,\n        } })) : null;\n}\nconst SNPCoverageTooltip = observer(function (props) {\n    const { model } = props;\n    const { featureUnderMouse: feat } = model;\n    return feat && feat.get('type') === 'skip' ? null : (React.createElement(Tooltip, { TooltipContents: TooltipContents, ...props }));\n});\nexport default SNPCoverageTooltip;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
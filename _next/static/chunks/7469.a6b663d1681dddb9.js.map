{"version":3,"file":"static/chunks/7469.a6b663d1681dddb9.js","mappings":"sNAuBA,MAlBwB,qBAAQ,OAkBjB,GAlBiB,GAChC,SAiB8B,CAjBlB,iBAAqB,EACjC,MAA0B,cAAQ,KAClC,kCACA,MAAY,SAAI,CAAC,QAAM,EAAI,+CAAkE,UAAK,CAAC,GAAa,EAAI,UAAW,SAAI,CAAC,GAAU,EAAI,kCAAoC,EAAG,SAAI,CAAC,GAAU,EAAI,qFAAyF,EAAG,SAAI,CAAC,GAAS,EAAI,qBAC1T,iBACA,CAAqB,iKACrB,WACA,YACA,mCACA,CAAyB,CACzB,CAAuB,EAAG,UAAK,CAAC,GAAa,EAAI,UAAW,SAAI,CAAC,GAAM,EAAI,4EAC3E,uBACA,GACA,CAA6B,mBAAsB,EAAG,SAAI,CAAC,GAAM,EAAI,mDACrE,GACA,CAA6B,mBAAsB,GAAI,GAAI,EAAG,CAC9D,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SortByTagDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst SortByTagDialog = observer(function (props) {\n    const { model, handleClose } = props;\n    const [tag, setTag] = useState('');\n    const validTag = /^[A-Za-z][A-Za-z0-9]$/.exec(tag);\n    return (_jsx(Dialog, { open: true, onClose: handleClose, title: \"Sort by tag\", children: _jsxs(DialogContent, { children: [_jsx(Typography, { children: \"Set the tag to sort by\" }), _jsx(Typography, { color: \"textSecondary\", children: \"Examples: HP for haplotype, RG for read group, etc.\" }), _jsx(TextField, { value: tag, onChange: event => {\n                        setTag(event.target.value);\n                    }, placeholder: \"Enter tag name\", error: tag.length === 2 && !validTag, helperText: tag.length === 2 && !validTag ? 'Not a valid tag' : '', autoComplete: \"off\", \"data-testid\": \"sort-tag-name\", slotProps: {\n                        htmlInput: {\n                            maxLength: 2,\n                            'data-testid': 'sort-tag-name-input',\n                        },\n                    } }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, onClick: () => {\n                                model.setSortedBy('tag', tag);\n                                handleClose();\n                            }, children: \"Submit\" }), _jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                                handleClose();\n                            }, children: \"Cancel\" })] })] }) }));\n});\nexport default SortByTagDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
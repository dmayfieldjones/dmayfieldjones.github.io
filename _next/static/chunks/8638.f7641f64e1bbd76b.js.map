{"version":3,"file":"static/chunks/8638.f7641f64e1bbd76b.js","mappings":"2OAKA,MAAkB,uBAAU,QAC5B,OACA,qBACA,mBACA,CAAK,CACL,OACA,mBACA,CAAK,CACL,CAAC,EACD,GACA,cACA,6BACA,gBACA,gBACA,sBACA,sBACA,gBACA,iBACA,wBACA,4CACA,mCACA,0BACA,CACA,cACA,SAAY,eAAoB,EAChC,OAAY,eAAmB,CAAC,UAAc,MACtC,eAAmB,CAAC,GAAS,EAAI,mCACzC,kBACA,EAAe,EACf,cACA,aACA,KAA2B,EAAK,GAAG,EAAI,EACvC,OAAoB,eAAmB,QAAU,MAAU,CAC3C,eAAmB,UAAY,yCAC/C,iBACA,UAGA,YAEA,EAAuB,EACP,eAAmB,UAAY,UAAc,IAC7D,CAAS,EACT,CAgEA,MA/D0B,cAAQ,aAClC,CA8De,GA9Df,IACA,UAAY,iBAAqB,EACjC,SAAY,GAAU,IACtB,UAAY,GAAW,EACvB,MAA0C,cAAQ,gBAClD,MAA0C,cAAQ,gBAClD,MAA0B,cAAQ,wDAClC,MAAoC,cAAQ,0DAC5C,MAAoC,cAAQ,iBAC5C,kCACA,+DACA,OAAY,eAAmB,CAAC,QAAM,EAAI,yCAA2D,CAC7F,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAU,MAC1C,wCACgB,eAAmB,CAAC,GAAI,EAAI,OAAY,IACxD,IACA,eACY,eAAmB,CAAC,GAAK,EAAI,qCAA+C,CACxE,eAAmB,QAAU,OAAS,gBAAmB,CACrD,eAAmB,YACf,eAAmB,CAAC,GAAU,wCAC9B,eAAmB,IAAY,iBAA4C,GAC/E,eAAmB,YACf,eAAmB,CAAC,GAAU,4CAC9B,eAAmB,IAAY,iBAA4C,KACvF,eAAmB,CAAC,GAAK,EAAI,qCAA+C,CACxE,eAAmB,CAAC,GAAU,iQAC9B,eAAmB,CAAC,GAAS,EAAI,uCACjD,iBACA,CAAqB,gHACrB,WACA,WACA,CAAyB,CACzB,CAAuB,EACP,eAAmB,CAAC,GAAS,EAAI,uCACjD,iBACA,CAAqB,+BAAkC,GAC3C,eAAmB,CAAC,GAAK,EAAI,qCAA+C,CACxE,eAAmB,CAAC,GAAU,6BAC9B,eAAmB,CAAC,GAAS,EAAI,uCACjD,iBACA,CAAqB,+BAAkC,GAC3C,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAM,EAAI,4EAC9C,eACA,cACA,cACA,WACA,iBACA,CACA,MACA,OACA,EACA,MACA,CAAyB,EACzB,GACA,EAAuB,WACP,eAAmB,CAAC,GAAM,EAAI,mDAC9C,GACA,EAAuB,aACvB,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/shared/components/FilterByTagDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, Link, Paper, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2),\n    },\n    field: {\n        margin: theme.spacing(2),\n    },\n}));\nconst flagNames = [\n    'read paired',\n    'read mapped in proper pair',\n    'read unmapped',\n    'mate unmapped',\n    'read reverse strand',\n    'mate reverse strand',\n    'first in pair',\n    'second in pair',\n    'not primary alignment',\n    'read fails platform/vendor quality checks',\n    'read is PCR or optical duplicate',\n    'supplementary alignment',\n];\nfunction Bitmask(props) {\n    const { flag = 0, setFlag } = props;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TextField, { type: \"number\", value: flag, onChange: event => {\n                setFlag(+event.target.value);\n            } }),\n        flagNames.map((name, index) => {\n            const val = flag & (1 << index);\n            const key = `${name}_${val}`;\n            return (React.createElement(\"div\", { key: key },\n                React.createElement(\"input\", { type: \"checkbox\", checked: Boolean(val), onChange: event => {\n                        if (event.target.checked) {\n                            setFlag(flag | (1 << index));\n                        }\n                        else {\n                            setFlag(flag & ~(1 << index));\n                        }\n                    } }),\n                React.createElement(\"label\", { htmlFor: key }, name)));\n        })));\n}\nconst FilterByTagDialog = observer(function (props) {\n    var _a, _b;\n    const { model, handleClose } = props;\n    const { classes } = useStyles();\n    const { filterBy } = model;\n    const [flagInclude, setFlagInclude] = useState(filterBy.flagInclude);\n    const [flagExclude, setFlagExclude] = useState(filterBy.flagExclude);\n    const [tag, setTag] = useState(((_a = filterBy.tagFilter) === null || _a === void 0 ? void 0 : _a.tag) || '');\n    const [tagValue, setTagValue] = useState(((_b = filterBy.tagFilter) === null || _b === void 0 ? void 0 : _b.value) || '');\n    const [readName, setReadName] = useState(filterBy.readName || '');\n    const validTag = /^[A-Za-z][A-Za-z0-9]$/.exec(tag);\n    const site = 'https://broadinstitute.github.io/picard/explain-flags.html';\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Filter options\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null,\n                \"Set filter bitmask options. Refer to \",\n                React.createElement(Link, { href: site }, site),\n                ' ',\n                \"for details\"),\n            React.createElement(Paper, { className: classes.paper, variant: \"outlined\" },\n                React.createElement(\"div\", { style: { display: 'flex' } },\n                    React.createElement(\"div\", null,\n                        React.createElement(Typography, null, \"Read must have ALL these flags\"),\n                        React.createElement(Bitmask, { flag: flagInclude, setFlag: setFlagInclude })),\n                    React.createElement(\"div\", null,\n                        React.createElement(Typography, null, \"Read must have NONE of these flags\"),\n                        React.createElement(Bitmask, { flag: flagExclude, setFlag: setFlagExclude })))),\n            React.createElement(Paper, { className: classes.paper, variant: \"outlined\" },\n                React.createElement(Typography, null, \"Filter by tag name and value. Use * in the value field to get all reads containing any value for that tag. Example: filter tag name SA with value * to get all split/supplementary reads. Other examples include HP for haplotype, or RG for read group\"),\n                React.createElement(TextField, { className: classes.field, value: tag, onChange: event => {\n                        setTag(event.target.value);\n                    }, placeholder: \"Enter tag name\", error: tag.length === 2 && !validTag, helperText: tag.length === 2 && !validTag ? 'Not a valid tag' : '', slotProps: {\n                        htmlInput: {\n                            maxLength: 2,\n                        },\n                    } }),\n                React.createElement(TextField, { className: classes.field, value: tagValue, onChange: event => {\n                        setTagValue(event.target.value);\n                    }, placeholder: \"Enter tag value\" })),\n            React.createElement(Paper, { className: classes.paper, variant: \"outlined\" },\n                React.createElement(Typography, null, \"Filter by read name\"),\n                React.createElement(TextField, { className: classes.field, value: readName, onChange: event => {\n                        setReadName(event.target.value);\n                    }, placeholder: \"Enter read name\" })),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", autoFocus: true, type: \"submit\", onClick: () => {\n                        model.setFilterBy({\n                            flagInclude,\n                            flagExclude,\n                            readName,\n                            tagFilter: tag !== ''\n                                ? {\n                                    tag,\n                                    value: tagValue,\n                                }\n                                : undefined,\n                        });\n                        handleClose();\n                    } }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                        handleClose();\n                    } }, \"Cancel\")))));\n});\nexport default FilterByTagDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
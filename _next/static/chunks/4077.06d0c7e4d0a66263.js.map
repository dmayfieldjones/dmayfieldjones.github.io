{"version":3,"file":"static/chunks/4077.06d0c7e4d0a66263.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetFilter.js","webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetFilters.js","webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetedHeader.js","webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetedSelector.js","webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/faceted/FacetedDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { coarseStripHTML } from '@jbrowse/core/util';\nimport AddIcon from '@mui/icons-material/Add';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport MinimizeIcon from '@mui/icons-material/Minimize';\nimport { FormControl, IconButton, Select, Tooltip, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    facet: {\n        margin: 0,\n        marginLeft: theme.spacing(2),\n    },\n    select: {\n        marginBottom: theme.spacing(2),\n    },\n}));\nfunction ClearButton({ onClick }) {\n    return (React.createElement(Tooltip, { title: \"Clear selection on this facet filter\" },\n        React.createElement(IconButton, { onClick: () => {\n                onClick();\n            }, size: \"small\" },\n            React.createElement(ClearIcon, null))));\n}\nfunction ExpandButton({ visible, onClick, }) {\n    return (React.createElement(Tooltip, { title: \"Minimize/expand this facet filter\" },\n        React.createElement(IconButton, { onClick: () => {\n                onClick();\n            }, size: \"small\" }, visible ? React.createElement(MinimizeIcon, null) : React.createElement(AddIcon, null))));\n}\nconst FacetFilter = observer(function ({ column, vals, model, }) {\n    const { classes } = useStyles();\n    const [visible, setVisible] = useState(true);\n    const { faceted } = model;\n    const { filters } = faceted;\n    const { field } = column;\n    return (React.createElement(FormControl, { className: classes.facet, fullWidth: true },\n        React.createElement(\"div\", null,\n            React.createElement(Typography, { component: \"span\" }, field),\n            React.createElement(ClearButton, { onClick: () => {\n                    faceted.setFilter(field, []);\n                } }),\n            React.createElement(ExpandButton, { visible: visible, onClick: () => {\n                    setVisible(!visible);\n                } })),\n        visible ? (React.createElement(Select, { multiple: true, native: true, className: classes.select, value: filters.get(column.field) || [], onChange: event => {\n                faceted.setFilter(column.field, [...event.target.options]\n                    .filter(opt => opt.selected)\n                    .map(opt => opt.value));\n            } }, vals\n            .sort((a, b) => a[0].localeCompare(b[0]))\n            .map(([name, count]) => (React.createElement(\"option\", { key: name, value: name },\n            coarseStripHTML(name),\n            \" (\",\n            count,\n            \")\"))))) : null));\n});\nexport default FacetFilter;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport FacetFilter from './FacetFilter';\nimport { getRowStr } from './util';\nconst FacetFilters = observer(function ({ rows, columns, model, }) {\n    var _a, _b;\n    const { faceted } = model;\n    const { filters } = faceted;\n    const facets = columns.slice(1);\n    const uniqs = new Map(facets.map(f => [f.field, new Map()]));\n    const filterKeys = faceted.filters.keys();\n    const facetKeys = facets.map(f => f.field);\n    const ret = new Set();\n    for (const entry of filterKeys) {\n        if ((_a = filters.get(entry)) === null || _a === void 0 ? void 0 : _a.length) {\n            ret.add(entry);\n        }\n    }\n    for (const entry of facetKeys) {\n        ret.add(entry);\n    }\n    let currentRows = rows;\n    for (const facet of ret) {\n        const elt = uniqs.get(facet);\n        for (const row of currentRows) {\n            const key = getRowStr(facet, row);\n            const val = elt.get(key);\n            if (key) {\n                if (val === undefined) {\n                    elt.set(key, 1);\n                }\n                else {\n                    elt.set(key, val + 1);\n                }\n            }\n        }\n        const filter = ((_b = filters.get(facet)) === null || _b === void 0 ? void 0 : _b.length)\n            ? new Set(filters.get(facet))\n            : undefined;\n        currentRows = currentRows.filter(row => filter !== undefined ? filter.has(getRowStr(facet, row)) : true);\n    }\n    return (React.createElement(\"div\", null, facets.map(c => (React.createElement(FacetFilter, { key: c.field, vals: [...uniqs.get(c.field)], column: c, model: model })))));\n});\nexport default FacetFilters;\n","import React, { useState } from 'react';\nimport { Menu } from '@jbrowse/core/ui';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport MoreVert from '@mui/icons-material/MoreVert';\nimport { Grid, IconButton, InputAdornment, TextField } from '@mui/material';\nimport ShoppingCart from '../ShoppingCart';\nexport default function FacetedHeader({ model, }) {\n    const { faceted } = model;\n    const [anchorEl, setAnchorEl] = useState(null);\n    const { showOptions, showFilters, showSparse, useShoppingCart } = faceted;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Grid, { container: true, spacing: 4, alignItems: \"center\" },\n            React.createElement(Grid, { item: true },\n                React.createElement(TextField, { label: \"Search...\", value: faceted.filterText, onChange: event => {\n                        faceted.setFilterText(event.target.value);\n                    }, slotProps: {\n                        input: {\n                            endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                                React.createElement(IconButton, { onClick: () => {\n                                        faceted.setFilterText('');\n                                    } },\n                                    React.createElement(ClearIcon, null)))),\n                        },\n                    } })),\n            React.createElement(Grid, { item: true },\n                React.createElement(IconButton, { onClick: event => {\n                        setAnchorEl(event.currentTarget);\n                    } },\n                    React.createElement(MoreVert, null))),\n            React.createElement(Grid, { item: true },\n                React.createElement(ShoppingCart, { model: model }))),\n        React.createElement(Menu, { anchorEl: anchorEl, open: !!anchorEl, onClose: () => {\n                setAnchorEl(null);\n            }, onMenuItemClick: (_event, callback) => {\n                callback();\n                setAnchorEl(null);\n            }, menuItems: [\n                {\n                    label: 'Add tracks to selection instead of turning them on/off',\n                    onClick: () => {\n                        faceted.setUseShoppingCart(!useShoppingCart);\n                    },\n                    type: 'checkbox',\n                    checked: useShoppingCart,\n                },\n                {\n                    label: 'Show sparse metadata columns',\n                    onClick: () => {\n                        faceted.setShowSparse(!showSparse);\n                    },\n                    checked: showSparse,\n                    type: 'checkbox',\n                },\n                {\n                    label: 'Show facet filters',\n                    onClick: () => {\n                        faceted.setShowFilters(!showFilters);\n                    },\n                    checked: showFilters,\n                    type: 'checkbox',\n                },\n                {\n                    label: 'Show extra table options',\n                    onClick: () => {\n                        faceted.setShowOptions(!showOptions);\n                    },\n                    checked: showOptions,\n                    type: 'checkbox',\n                },\n            ] })));\n}\n","import React, { useState } from 'react';\nimport { ResizeHandle } from '@jbrowse/core/ui';\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML';\nimport { getEnv, measureGridWidth } from '@jbrowse/core/util';\nimport { DataGrid, GridToolbar } from '@mui/x-data-grid';\nimport { transaction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport { getRoot, resolveIdentifier } from 'mobx-state-tree';\nimport { makeStyles } from 'tss-react/mui';\nimport FacetFilters from './FacetFilters';\nimport FacetedHeader from './FacetedHeader';\nimport TrackLabelMenu from '../tree/TrackLabelMenu';\nconst useStyles = makeStyles()({\n    cell: {\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n    resizeHandle: {\n        marginLeft: 5,\n        background: 'grey',\n        width: 5,\n    },\n});\nconst frac = 0.75;\nconst FacetedSelector = observer(function FacetedSelector({ model, }) {\n    var _a;\n    const { classes } = useStyles();\n    const { view, selection, shownTrackIds, faceted } = model;\n    const { rows, panelWidth, showFilters, useShoppingCart, showOptions, filteredRows, filteredNonMetadataKeys, filteredMetadataKeys, visible, } = faceted;\n    const { pluginManager } = getEnv(model);\n    const [widths, setWidths] = useState({\n        name: measureGridWidth(rows.map(r => r.name), { maxWidth: 500, stripHTML: true }) + 15,\n        ...Object.fromEntries(filteredNonMetadataKeys\n            .filter(f => visible[f])\n            .map(e => [\n            e,\n            measureGridWidth(rows.map(r => r[e]), { maxWidth: 400, stripHTML: true }),\n        ])),\n        ...Object.fromEntries(filteredMetadataKeys\n            .filter(f => visible[`metadata.${f}`])\n            .map(e => {\n            return [\n                `metadata.${e}`,\n                measureGridWidth(rows.map(r => r.metadata[e]), { maxWidth: 400, stripHTML: true }),\n            ];\n        })),\n    });\n    const columns = [\n        {\n            field: 'name',\n            hideable: false,\n            renderCell: params => {\n                const { value, row } = params;\n                const { id, conf } = row;\n                return (React.createElement(\"div\", { className: classes.cell },\n                    React.createElement(SanitizedHTML, { html: value }),\n                    React.createElement(TrackLabelMenu, { id: id, conf: conf, trackId: id, model: model })));\n            },\n            width: (_a = widths.name) !== null && _a !== void 0 ? _a : 100,\n        },\n        ...filteredNonMetadataKeys.map(e => {\n            var _a;\n            return {\n                field: e,\n                width: (_a = widths[e]) !== null && _a !== void 0 ? _a : 100,\n                renderCell: params => {\n                    const val = params.value;\n                    return val ? (React.createElement(SanitizedHTML, { className: classes.cell, html: val })) : ('');\n                },\n            };\n        }),\n        ...filteredMetadataKeys.map(e => {\n            var _a;\n            return {\n                field: `metadata.${e}`,\n                headerName: ['name', ...filteredNonMetadataKeys].includes(e)\n                    ? `${e} (from metadata)`\n                    : e,\n                width: (_a = widths[`metadata.${e}`]) !== null && _a !== void 0 ? _a : 100,\n                valueGetter: (_, row) => { var _a; return `${(_a = row.metadata[e]) !== null && _a !== void 0 ? _a : ''}`; },\n                renderCell: params => {\n                    const val = params.value;\n                    return val ? (React.createElement(SanitizedHTML, { className: classes.cell, html: val })) : ('');\n                },\n            };\n        }),\n    ];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(FacetedHeader, { model: model }),\n        React.createElement(\"div\", { style: {\n                display: 'flex',\n                overflow: 'hidden',\n                height: window.innerHeight * frac,\n                width: window.innerWidth * frac,\n            } },\n            React.createElement(\"div\", { style: {\n                    height: window.innerHeight * frac,\n                    width: window.innerWidth * frac - (showFilters ? panelWidth : 0),\n                } },\n                React.createElement(DataGrid, { rows: filteredRows, onColumnWidthChange: arg => {\n                        setWidths({ ...widths, [arg.colDef.field]: arg.width });\n                    }, columnVisibilityModel: visible, onColumnVisibilityModelChange: n => {\n                        faceted.setVisible(n);\n                    }, columnHeaderHeight: 35, checkboxSelection: true, disableRowSelectionOnClick: true, keepNonExistentRowsSelected: true, onRowSelectionModelChange: userSelectedIds => {\n                        if (!useShoppingCart) {\n                            const a1 = shownTrackIds;\n                            const a2 = new Set(userSelectedIds);\n                            transaction(() => {\n                                ;\n                                [...a1].filter(x => !a2.has(x)).map(t => view.hideTrack(t));\n                                [...a2]\n                                    .filter(x => !a1.has(x))\n                                    .map(t => {\n                                    view.showTrack(t);\n                                    model.addToRecentlyUsed(t);\n                                });\n                            });\n                        }\n                        else {\n                            const root = getRoot(model);\n                            const schema = pluginManager.pluggableConfigSchemaType('track');\n                            model.setSelection(userSelectedIds.map(id => resolveIdentifier(schema, root, id)));\n                        }\n                    }, rowSelectionModel: useShoppingCart\n                        ? selection.map(s => s.trackId)\n                        : [...shownTrackIds], slots: { toolbar: showOptions ? GridToolbar : null }, slotProps: {\n                        toolbar: {\n                            printOptions: {\n                                disableToolbarButton: true,\n                            },\n                        },\n                    }, columns: columns, rowHeight: 25 })),\n            showFilters ? (React.createElement(React.Fragment, null,\n                React.createElement(ResizeHandle, { vertical: true, onDrag: dist => faceted.setPanelWidth(panelWidth - dist), className: classes.resizeHandle }),\n                React.createElement(\"div\", { style: { width: panelWidth, overflow: 'auto' } },\n                    React.createElement(FacetFilters, { model: model, rows: rows, columns: columns })))) : null)));\n});\nexport default FacetedSelector;\n","import React from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { DialogContent } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport FacetedSelector from './FacetedSelector';\nconst FacetedTrackSelectorDialog = observer(function (props) {\n    const { handleClose } = props;\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, maxWidth: \"xl\", title: \"Faceted track selector\" },\n        React.createElement(DialogContent, null,\n            React.createElement(FacetedSelector, { ...props }))));\n});\nexport default FacetedTrackSelectorDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0,1,2,3,4]}
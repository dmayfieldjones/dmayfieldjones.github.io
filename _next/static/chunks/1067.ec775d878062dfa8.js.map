{"version":3,"file":"static/chunks/1067.ec775d878062dfa8.js","mappings":"2MAGe,cACf,UAAY,iBAAqB,EACjC,UAAY,0BAAgC,EAC5C,MAA0B,cAAQ,IAAI,0BAA8C,GACpF,MAA0B,cAAQ,IAAI,0BAA8C,GACpF,0DACA,MAEA,gDACA,OAAY,eAAmB,CAAC,QAAM,EAAI,sDAAwE,CAC1G,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAU,+BAC1C,EAAqE,KAAlD,eAAmB,CAAC,GAAU,EAAI,cAAgB,wCACrE,EAAwE,KAAlD,eAAmB,CAAC,GAAU,EAAI,cAAgB,qDAC5D,eAAmB,CAAC,GAAS,EAAI,qBAC7C,iBACA,CAAiB,+BAAkC,EACvC,eAAmB,CAAC,GAAS,EAAI,qBAC7C,iBACA,CAAiB,+BAAkC,GAC3C,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAM,EAAI,yDAAiE,cAAgB,0BAC3H,kDACA,kDACA,GACA,EAAmB,YACnB","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/shared/SetMinMaxDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nexport default function SetMinMaxDialog(props) {\n    const { model, handleClose } = props;\n    const { minScore, maxScore, scaleType } = model;\n    const [min, setMin] = useState(`${minScore !== Number.MIN_VALUE ? minScore : ''}`);\n    const [max, setMax] = useState(`${maxScore !== Number.MAX_VALUE ? maxScore : ''}`);\n    const ok = min !== '' && max !== '' && !Number.isNaN(+min) && !Number.isNaN(+max)\n        ? +max > +min\n        : true;\n    const logOk = scaleType === 'log' && min !== '' && !Number.isNaN(+min) ? +min > 0 : true;\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Set min/max score for track\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Enter min/max score: \"),\n            !ok ? (React.createElement(Typography, { color: \"error\" }, \"Max is greater than or equal to min\")) : null,\n            !logOk ? (React.createElement(Typography, { color: \"error\" }, \"Min score should be greater than 0 for log scale\")) : null,\n            React.createElement(TextField, { value: min, onChange: event => {\n                    setMin(event.target.value);\n                }, placeholder: \"Enter min score\" }),\n            React.createElement(TextField, { value: max, onChange: event => {\n                    setMax(event.target.value);\n                }, placeholder: \"Enter max score\" })),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", style: { marginLeft: 20 }, disabled: !ok, onClick: () => {\n                    model.setMinScore(min !== '' && !Number.isNaN(+min) ? +min : undefined);\n                    model.setMaxScore(max !== '' && !Number.isNaN(+max) ? +max : undefined);\n                    handleClose();\n                } }, \"Submit\"))));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
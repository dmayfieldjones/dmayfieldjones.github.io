{"version":3,"file":"static/chunks/1775.2b1c401885d6cbb6.js","mappings":"8QASA,MAAkB,uBAAU,QAC5B,eACA,eACA,sBACA,CAAK,CACL,QACA,yBACA,kBACA,6CACA,yCACS,CACT,CAAK,CACL,YACA,0BACA,CAAK,CACL,CAAC,EAmCD,EAlC8B,cAAQ,WAAa,GAkCpC,MAlCoC,SAAiB,EACpE,IAiCoC,EAAC,MAjCzB,QAAc,IAC1B,MAA8C,cAAQ,KACtD,MAA4C,cAAQ,KACpD,MAA4C,cAAQ,KACpD,MAA4C,cAAQ,KACpD,MAA0D,cAAQ,KAClE,SAAY,GAAY,gBAAU,IAClC,iBACA,aACA,KACA,aAAgC,gBAA2C,EAE3E,EACA,aAAgC,SAAsB,EAEtD,GACA,aAAgC,SAAsB,CAEtD,CACA,MAAY,SAAI,CAAC,QAAM,EAAI,qDAAoE,UAAK,SAAW,qBAAmC,UAAK,CAAC,GAAa,EAAI,oCAA6C,SAAI,CAAC,GAAiB,EAAI,kHAAoH,EAAG,SAAI,CAAC,GAAS,EAAI,4DACzX,iBACA,EAA+B,EAAG,SAAI,CAAC,GAAS,EAAI,2DACpD,iBACA,EAA+B,EAAG,UAAK,CAAC,GAAiB,EAAI,aAC7D,KACA,CAA6B,WAAa,SAAI,CAAC,GAAU,EAAI,sBAC7D,gBACA,CAAqC,sDAA8E,SAAI,CAAC,GAAc,GAAI,EAAG,sBAAwB,EAAG,SAAI,CAAC,GAAQ,EAAI,cAAmC,UAAK,QAAU,oCAA6C,SAAI,CAAC,GAAiB,EAAI,qQAAuQ,EAAG,SAAI,CAAC,GAAS,EAAI,8DAC9kB,iBACA,EAA2C,EAAG,SAAI,CAAC,GAAS,EAAI,8DAChE,iBACA,EAA2C,GAAI,EAAG,GAAI,EAAG,UAAK,CAAC,GAAa,EAAI,UAAW,SAAI,CAAC,GAAM,EAAI,gDAA4D,EAAG,SAAI,CAAC,GAAM,EAAI,4EAAqG,GAAI,GAAI,EAAG,CACxS,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/PluginStoreWidget/components/AddCustomPluginDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Button, Collapse, DialogActions, DialogContent, DialogContentText, TextField, } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    dialogContent: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n}));\nconst AddCustomPluginDialog = observer(function ({ onClose, model, }) {\n    const { classes, cx } = useStyles();\n    const [umdPluginName, setUMDPluginName] = useState('');\n    const [umdPluginUrl, setUMDPluginUrl] = useState('');\n    const [esmPluginUrl, setESMPluginUrl] = useState('');\n    const [cjsPluginUrl, setCJSPluginUrl] = useState('');\n    const [advancedOptionsOpen, setAdvancedOptionsOpen] = useState(false);\n    const { jbrowse } = getSession(model);\n    const ready = Boolean((umdPluginName && umdPluginUrl) || esmPluginUrl || cjsPluginUrl);\n    function handleSubmit() {\n        if (umdPluginName && umdPluginUrl) {\n            jbrowse.addPlugin({ name: umdPluginName, umdUrl: umdPluginUrl });\n        }\n        else if (esmPluginUrl) {\n            jbrowse.addPlugin({ esmUrl: esmPluginUrl });\n        }\n        else if (cjsPluginUrl) {\n            jbrowse.addPlugin({ cjsUrl: cjsPluginUrl });\n        }\n    }\n    return (_jsx(Dialog, { open: true, onClose: onClose, title: \"Add custom plugin\", children: _jsxs(\"form\", { onSubmit: handleSubmit, children: [_jsxs(DialogContent, { className: classes.dialogContent, children: [_jsx(DialogContentText, { children: \"Enter the name of the plugin and its URL. The name should match what is defined in the plugin's build.\" }), _jsx(TextField, { label: \"Plugin name\", variant: \"outlined\", value: umdPluginName, onChange: event => {\n                                setUMDPluginName(event.target.value);\n                            } }), _jsx(TextField, { label: \"Plugin URL\", variant: \"outlined\", value: umdPluginUrl, onChange: event => {\n                                setUMDPluginUrl(event.target.value);\n                            } }), _jsxs(DialogContentText, { onClick: () => {\n                                setAdvancedOptionsOpen(!advancedOptionsOpen);\n                            }, children: [_jsx(IconButton, { className: cx(classes.expand, {\n                                        [classes.expandOpen]: advancedOptionsOpen,\n                                    }), \"aria-expanded\": advancedOptionsOpen, \"aria-label\": \"show more\", children: _jsx(ExpandMoreIcon, {}) }), \"Advanced options\"] }), _jsx(Collapse, { in: advancedOptionsOpen, children: _jsxs(\"div\", { className: classes.dialogContent, children: [_jsx(DialogContentText, { children: \"The above fields assume that the plugin is built in UMD format. If your plugin is in another format, or you have additional builds you want to add (such as a CJS build for using NodeJS APIs in desktop), you can enter the URLs for those builds below.\" }), _jsx(TextField, { label: \"ESM build URL\", variant: \"outlined\", value: esmPluginUrl, onChange: event => {\n                                            setESMPluginUrl(event.target.value);\n                                        } }), _jsx(TextField, { label: \"CJS build URL\", variant: \"outlined\", value: cjsPluginUrl, onChange: event => {\n                                            setCJSPluginUrl(event.target.value);\n                                        } })] }) })] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", onClick: onClose, children: \"Cancel\" }), _jsx(Button, { variant: \"contained\", color: \"primary\", onClick: handleSubmit, disabled: !ready, children: \"Submit\" })] })] }) }));\n});\nexport default AddCustomPluginDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
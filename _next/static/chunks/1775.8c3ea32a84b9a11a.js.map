{"version":3,"file":"static/chunks/1775.8c3ea32a84b9a11a.js","mappings":"mQAQA,MAAkB,uBAAU,QAC5B,eACA,eACA,sBACA,CAAK,CACL,QACA,yBACA,kBACA,6CACA,yCACS,CACT,CAAK,CACL,YACA,0BACA,CAAK,CACL,CAAC,EAoDD,EAnD8B,cAAQ,cAmDvB,KAnDoC,UAAiB,EACpE,IAkDoC,EAAC,MAlDzB,QAAc,IAC1B,MAA8C,cAAQ,KACtD,MAA4C,cAAQ,KACpD,MAA4C,cAAQ,KACpD,MAA4C,cAAQ,KACpD,MAA0D,cAAQ,KAClE,SAAY,GAAU,CAAE,eAAU,IAClC,iBACA,aACA,KACA,aAAgC,gBAA2C,EAE3E,EACA,aAAgC,SAAsB,EAEtD,GACA,aAAgC,SAAsB,CAEtD,CACA,OAAY,eAAmB,CAAC,QAAM,EAAI,4CAA0D,CAC5F,eAAmB,SAAW,WAAwB,CAClD,eAAmB,CAAC,GAAa,EAAI,0BAAkC,CACnE,eAAmB,CAAC,GAAiB,gHACrC,eAAmB,CAAC,GAAS,EAAI,4DACjD,iBACA,EAAuB,EACP,eAAmB,CAAC,GAAS,EAAI,2DACjD,iBACA,EAAuB,EACP,eAAmB,CAAC,GAAiB,EAAI,aACzD,KACA,EAAuB,CACH,eAAmB,CAAC,GAAU,EAAI,sBACtD,gBACA,CAAyB,6CAAoE,CACrE,eAAmB,CAAC,GAAc,QAC1D,oBACgB,eAAmB,CAAC,GAAQ,EAAI,KAAyB,CACrD,eAAmB,QAAU,0BAAkC,CAC3D,eAAmB,CAAC,GAAiB,mQACrC,eAAmB,CAAC,GAAS,EAAI,8DACzD,iBACA,EAA+B,EACP,eAAmB,CAAC,GAAS,EAAI,8DACzD,iBACA,EAA+B,KACnB,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAM,EAAI,8BAAwC,WACtE,eAAmB,CAAC,GAAM,EAAI,0DAAiF,aAC/H,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/PluginStoreWidget/components/AddCustomPluginDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Button, Collapse, DialogActions, DialogContent, DialogContentText, TextField, } from '@mui/material';\nimport IconButton from '@mui/material/IconButton';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    dialogContent: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n}));\nconst AddCustomPluginDialog = observer(function ({ onClose, model, }) {\n    const { classes, cx } = useStyles();\n    const [umdPluginName, setUMDPluginName] = useState('');\n    const [umdPluginUrl, setUMDPluginUrl] = useState('');\n    const [esmPluginUrl, setESMPluginUrl] = useState('');\n    const [cjsPluginUrl, setCJSPluginUrl] = useState('');\n    const [advancedOptionsOpen, setAdvancedOptionsOpen] = useState(false);\n    const { jbrowse } = getSession(model);\n    const ready = Boolean((umdPluginName && umdPluginUrl) || esmPluginUrl || cjsPluginUrl);\n    function handleSubmit() {\n        if (umdPluginName && umdPluginUrl) {\n            jbrowse.addPlugin({ name: umdPluginName, umdUrl: umdPluginUrl });\n        }\n        else if (esmPluginUrl) {\n            jbrowse.addPlugin({ esmUrl: esmPluginUrl });\n        }\n        else if (cjsPluginUrl) {\n            jbrowse.addPlugin({ cjsUrl: cjsPluginUrl });\n        }\n    }\n    return (React.createElement(Dialog, { open: true, onClose: onClose, title: \"Add custom plugin\" },\n        React.createElement(\"form\", { onSubmit: handleSubmit },\n            React.createElement(DialogContent, { className: classes.dialogContent },\n                React.createElement(DialogContentText, null, \"Enter the name of the plugin and its URL. The name should match what is defined in the plugin's build.\"),\n                React.createElement(TextField, { label: \"Plugin name\", variant: \"outlined\", value: umdPluginName, onChange: event => {\n                        setUMDPluginName(event.target.value);\n                    } }),\n                React.createElement(TextField, { label: \"Plugin URL\", variant: \"outlined\", value: umdPluginUrl, onChange: event => {\n                        setUMDPluginUrl(event.target.value);\n                    } }),\n                React.createElement(DialogContentText, { onClick: () => {\n                        setAdvancedOptionsOpen(!advancedOptionsOpen);\n                    } },\n                    React.createElement(IconButton, { className: cx(classes.expand, {\n                            [classes.expandOpen]: advancedOptionsOpen,\n                        }), \"aria-expanded\": advancedOptionsOpen, \"aria-label\": \"show more\" },\n                        React.createElement(ExpandMoreIcon, null)),\n                    \"Advanced options\"),\n                React.createElement(Collapse, { in: advancedOptionsOpen },\n                    React.createElement(\"div\", { className: classes.dialogContent },\n                        React.createElement(DialogContentText, null, \"The above fields assume that the plugin is built in UMD format. If your plugin is in another format, or you have additional builds you want to add (such as a CJS build for using NodeJS APIs in desktop), you can enter the URLs for those builds below.\"),\n                        React.createElement(TextField, { label: \"ESM build URL\", variant: \"outlined\", value: esmPluginUrl, onChange: event => {\n                                setESMPluginUrl(event.target.value);\n                            } }),\n                        React.createElement(TextField, { label: \"CJS build URL\", variant: \"outlined\", value: cjsPluginUrl, onChange: event => {\n                                setCJSPluginUrl(event.target.value);\n                            } })))),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", onClick: onClose }, \"Cancel\"),\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", onClick: handleSubmit, disabled: !ready }, \"Submit\")))));\n});\nexport default AddCustomPluginDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
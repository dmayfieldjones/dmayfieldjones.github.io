{"version":3,"file":"static/chunks/5339.34c0874f7e403b4c.js","mappings":"2LAIA,mCACA,EAAwB,YAAgB,iBAA6B,YAAgB,IACrF,qBACA,eACA,mBACA,gBAAiD,KAAU,IAAI,KAAQ,EACvE,mBACA,kBACA,mBACA,mDACA,OAAY,eAAmB,QAAU,MAAU,CACnD,+BACQ,eAAmB,YAC3B,EAAmB,eAAmB,cAC1B,eAAmB,cACf,eAAmB,WACf,eAAmB,oBACnB,eAAmB,qBACnB,eAAmB,sBAC3B,eAAmB,6CAAiE,eAAmB,OAAS,MAAa,CACzH,eAAmB,OAAS,OAAS,uBAAiC,MACtE,eAAmB,cACnB,eAAmB,WAAa,SAAG,eAAuB,eAAmB,aAC7F,EACA,IACA,EACA,OAAyB,SAAG,qBAA2B,MAAM,SAAG,kBAAwB,MAAM,SAAG,oBAA0B,EACzG,SAAG,kBACrB,CAAC,EAID,EAHsB,cAAQ,IACnB,UAEI,KAFe,CAAC,GAAO,EAAI,EAEd,EAAC,OAFa,0BAA8D","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/Tooltip.js"],"sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react';\nimport Tooltip from '../../Tooltip';\nimport { toP } from '../../util';\nconst en = (n) => n.toLocaleString('en-US');\nconst TooltipContents = React.forwardRef(function TooltipContents2({ model, feature }, ref) {\n    const start = feature.get('start');\n    const end = feature.get('end');\n    const refName = feature.get('refName');\n    const coord = start === end ? en(start) : `${en(start)}..${en(end)}`;\n    const sources = feature.get('sources');\n    const source = feature.get('source');\n    const summary = feature.get('summary');\n    const obj = Object.fromEntries(model.sources.map(ent => [ent.name, ent]));\n    return (React.createElement(\"div\", { ref: ref },\n        [refName, coord].filter(f => !!f).join(':'),\n        React.createElement(\"br\", null),\n        sources ? (React.createElement(\"table\", null,\n            React.createElement(\"thead\", null,\n                React.createElement(\"tr\", null,\n                    React.createElement(\"th\", null, \"color\"),\n                    React.createElement(\"th\", null, \"source\"),\n                    React.createElement(\"th\", null, \"score\"))),\n            React.createElement(\"tbody\", null, Object.entries(sources).map(([source, data]) => (React.createElement(\"tr\", { key: source },\n                React.createElement(\"td\", { style: { background: obj[source].color } }, \" \"),\n                React.createElement(\"td\", null, source),\n                React.createElement(\"td\", null, toP(data.score)))))))) : (React.createElement(\"span\", null,\n            source,\n            ' ',\n            summary\n                ? `min:${toP(feature.get('minScore'))} avg:${toP(feature.get('score'))} max:${toP(feature.get('maxScore'))}`\n                : toP(feature.get('score'))))));\n});\nconst WiggleTooltip = observer((props) => {\n    return React.createElement(Tooltip, { useClientY: true, TooltipContents: TooltipContents, ...props });\n});\nexport default WiggleTooltip;\nexport { default as Tooltip } from '../../Tooltip';\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
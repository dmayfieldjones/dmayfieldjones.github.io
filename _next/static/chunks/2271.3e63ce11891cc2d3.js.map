{"version":3,"file":"static/chunks/2271.3e63ce11891cc2d3.js","mappings":"qLASA,iBAAiC,wBAAsB,CACvD,oBACA,yBACA,MACA,0CAEA,kCAWA,MAVA,2BAEA,GADA,wBACA,SACA,qBACA,gBAfA,GACA,oCACA,oCACA,EAYA,GACA,gBACA,KACA,CAAiB,CACjB,CAAa,GAEb,4BACA,mBACA,YACA,OACA,oBACA,KACA,aACA,CACA,CAAS,EACT,CACA,qBACA,+BAEA,kBADA,4DACA,SAEA,wBACA,+BACA,+BAA+D,QAAY,qEAA6G,mBAGxL,OACA,SAHyB,SAAG,uBAI5B,SAHyB,SAAG,sBAI5B,CACA,CACA,kBAAiC,EACjC,MAAe,sBAAgB,WAC/B,+BACY,OAAK,iDAAuE,OAAG,oBAC3F,EACA,IAAsB,eAAa,EACnC,cACA,YAAiC,SAAW,GAAG,OAAO,EACtD,gBACiB,kBACjB,CAAS,aACT,CACA,2CACA,OACA,gBACA,CACA,CACA,oBAEA,MADA,2BACA,kBAA+B,uBAAoC,KACnE,OACA,SACA,KACA,CAAS,CACT,CACA,iBACA,CACA,gBACA,gBACA,gBACA,iBACA,CACA,MAAe","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiWiggleAdapter/MultiWiggleAdapter.js"],"sourcesContent":["import { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { SimpleFeature, max, min } from '@jbrowse/core/util';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport { merge } from 'rxjs';\nimport { map } from 'rxjs/operators';\nfunction getFilename(uri) {\n    const filename = uri.slice(uri.lastIndexOf('/') + 1);\n    return filename.slice(0, filename.lastIndexOf('.'));\n}\nclass MultiWiggleAdapter extends BaseFeatureDataAdapter {\n    async getAdapters() {\n        const getSubAdapter = this.getSubAdapter;\n        if (!getSubAdapter) {\n            throw new Error('no getSubAdapter available');\n        }\n        let subConfs = this.getConf('subadapters');\n        if (!(subConfs === null || subConfs === void 0 ? void 0 : subConfs.length)) {\n            const entries = this.getConf('bigWigs');\n            subConfs = entries.map(entry => ({\n                type: 'BigWigAdapter',\n                source: getFilename(entry),\n                bigWigLocation: {\n                    uri: entry,\n                },\n            }));\n        }\n        return Promise.all(subConfs.map(async (conf) => {\n            const dataAdapter = (await getSubAdapter(conf))\n                .dataAdapter;\n            return {\n                source: conf.name || dataAdapter.id,\n                ...conf,\n                dataAdapter,\n            };\n        }));\n    }\n    async getRefNames(opts) {\n        const adapters = await this.getAdapters();\n        const allNames = await Promise.all(adapters.map(a => a.dataAdapter.getRefNames(opts)));\n        return [...new Set(allNames.flat())];\n    }\n    async getGlobalStats(opts) {\n        const adapters = await this.getAdapters();\n        const stats = (await Promise.all(adapters.map(adp => { var _a, _b; return (_b = (_a = adp.dataAdapter).getGlobalStats) === null || _b === void 0 ? void 0 : _b.call(_a, opts); }))).filter(f => !!f);\n        const scoreMin = min(stats.map(s => s.scoreMin));\n        const scoreMax = max(stats.map(s => s.scoreMax));\n        return {\n            scoreMin,\n            scoreMax,\n        };\n    }\n    getFeatures(region, opts = {}) {\n        return ObservableCreate(async (observer) => {\n            const adapters = await this.getAdapters();\n            merge(...adapters.map(adp => adp.dataAdapter.getFeatures(region, opts).pipe(map(p => p.get('source')\n                ? p\n                : new SimpleFeature({\n                    ...p.toJSON(),\n                    uniqueId: `${adp.source}-${p.id()}`,\n                    source: adp.source,\n                }))))).subscribe(observer);\n        }, opts.stopToken);\n    }\n    async getMultiRegionFeatureDensityStats(_regions) {\n        return {\n            featureDensity: 0,\n        };\n    }\n    async getSources(_regions) {\n        const adapters = await this.getAdapters();\n        return adapters.map(({ dataAdapter, source, name, ...rest }) => ({\n            name: source,\n            __name: name,\n            ...rest,\n        }));\n    }\n    freeResources() { }\n}\nMultiWiggleAdapter.capabilities = [\n    'hasResolution',\n    'hasLocalStats',\n    'hasGlobalStats',\n];\nexport default MultiWiggleAdapter;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2166],{42166:(e,t,n)=>{n.r(t),n.d(t,{default:()=>y});var l=n(12115),r=n(47204),a=n(54262),i=n(23806),o=n(55089),s=n(9561),c=n(78443),u=n(19293),p=n(93929),m=n(21079),d=n.n(m),g=n(38003),h=n(2848);let E=(0,n(97771).makeStyles)()(e=>({textAreaFont:{fontFamily:"Courier New"},mgap:{display:"flex",flexDirection:"column",gap:e.spacing(4)}}));function y({model:e,handleClose:t}){let{classes:n}=E(),[m,y]=(0,l.useState)(),[f,v]=(0,l.useState)(),[w,A]=(0,l.useState)("");return(0,l.useEffect)(()=>{(async()=>{try{v(void 0);let t=(0,a.getContainingView)(e);if(!t.initialized)return;let{rpcManager:n}=(0,a.getSession)(e),{sources:l,mafFilter:r,adapterConfig:o}=e,s=(0,i.getRpcSessionId)(e),c=await n.call(s,"MultiVariantGetGenotypeMatrix",{regions:t.dynamicBlocks.contentBlocks,sources:l,mafFilter:r,sessionId:s,adapterConfig:o}),u=Object.values(c),p=Object.keys(c),m=`try(library(fastcluster), silent=TRUE)
inputMatrix<-matrix(c(${u.map(e=>e.genotypes.join(",")).join(",\n")}
),nrow=${u.length},byrow=TRUE)
rownames(inputMatrix)<-c(${p.map(e=>`'${e}'`).join(",")})
resultClusters<-hclust(dist(inputMatrix), method='single')
cat(resultClusters$order,sep='\\n')`;y(m)}catch(t){!(0,a.isAbortException)(t)&&(0,h.isAlive)(e)&&(console.error(t),v(t))}})()},[e]),l.createElement(r.Dialog,{open:!0,title:"Cluster by genotype",onClose:t},l.createElement(o.A,null,l.createElement("div",{className:n.mgap},l.createElement(s.A,null,"This page will produce an R script that will perform hierarchical clustering on the visible genotype data using `hclust`."),l.createElement(s.A,null,"You can then paste the results in this form to specify the row ordering."),m?l.createElement("div",null,l.createElement("div",null,"Step 1:"," ",l.createElement(c.A,{variant:"contained",onClick:()=>{(0,g.saveAs)(new Blob([m||""],{type:"text/plain;charset=utf-8"}),"cluster.R")}},"Download Rscript")," ","or"," ",l.createElement(c.A,{variant:"contained",onClick:()=>{d()(m||"")}},"Copy Rscript to clipboard"),l.createElement("div",null,l.createElement(u.A,{multiline:!0,fullWidth:!0,variant:"outlined",placeholder:"Step 2. Paste results from Rscript here (sequence of numbers, one per line, specifying the new ordering)",rows:10,value:w,onChange:e=>{A(e.target.value)},slotProps:{input:{classes:{input:n.textAreaFont}}}})))):l.createElement(r.LoadingEllipses,{variant:"h6",title:"Generating genotype matrix"}),f?l.createElement(r.ErrorMessage,{error:f}):null)),l.createElement(p.A,null,l.createElement(c.A,{disabled:!m,variant:"contained",onClick:()=>{let{sources:n}=e;if(n)try{e.setLayout(w.split("\n").map(e=>e.trim()).filter(e=>!!e).map(e=>+e).map(e=>{let t=n[e-1];if(!t)throw Error(`out of bounds at ${e}`);return t}))}catch(e){console.error(e),v(e)}t()}},"Apply clustering"),l.createElement(c.A,{variant:"contained",color:"secondary",onClick:()=>{t()}},"Cancel")))}}}]);
//# sourceMappingURL=2166.e621b2ec3723bf28.js.map
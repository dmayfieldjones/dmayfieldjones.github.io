"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1502],{91502:(e,t,a)=>{a.r(t),a.d(t,{default:()=>f});var r=a(79522),s=a(13452),n=a(92766),i=a(54262),u=a(31177),o=a(72471),d=a(90287),l=a(18998),c=a(77419);class f extends n.BaseFeatureDataAdapter{async configurePre(e){let t=this.pluginManager,a=new r.C({filehandle:(0,u.openLocation)(this.getConf("bigBedLocation"),t)}),n=await a.getHeader(e),i=new s.A({autoSql:n.autoSql});return{bigbed:a,header:n,parser:i}}async configure(e){return this.cachedP||(this.cachedP=this.configurePre(e).catch(e=>{throw this.cachedP=void 0,e})),this.cachedP}async getRefNames(e){let{header:t}=await this.configure(e);return Object.keys(t.refsByName)}async getData(){let e=await this.getRefNames(),t=[];for(let a of e){let e=await (0,d._)(this.getFeatures({assemblyName:"unknown",refName:a,start:0,end:Number.MAX_SAFE_INTEGER}).pipe((0,l.$)()));t.push(e)}return t.flat()}async getHeader(e){let{parser:t,header:a}=await this.configure(e),{version:r,fileType:s}=a,{fields:n,...i}=t.autoSql;return{version:r,fileType:s,autoSql:{...i},fields:Object.fromEntries(n.map(({name:e,comment:t})=>[e,t]))}}async getFeaturesHelper({query:e,opts:t,observer:a,allowRedispatch:r,originalQuery:s=e}){var n;let{stopToken:u}=t,o=this.getConf("scoreColumn"),d=this.getConf("aggregateField"),{parser:l,bigbed:f}=await this.configure(t),h=await f.getFeatures(e.refName,e.start,e.end,{stopToken:u,basesPerSpan:e.end-e.start});if(r&&h.length){let r=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY;for(let e of h)e.start<r&&(r=e.start),e.end>s&&(s=e.end);if(s>e.end||r<e.start){await this.getFeaturesHelper({query:{...e,start:r,end:s},opts:t,observer:a,allowRedispatch:!1,originalQuery:e});return}}let g={};if(h.some(e=>void 0===e.uniqueId))throw Error("found uniqueId undefined");for(let t of h){let r=[e.refName,`${t.start}`,`${t.end}`,...(null===(n=t.rest)||void 0===n?void 0:n.split("	"))||[]],u=l.parseLine(r,{uniqueId:t.uniqueId}),f=u[d];g[f]||(g[f]=[]);let{uniqueId:h,type:p,chrom:m,chromStart:N,chromEnd:w,description:I,chromStarts:b,blockStarts:y,blockSizes:F,score:S,blockCount:E,thickStart:k,thickEnd:q,strand:_,...C}=u,P=(0,c.np)({...C,scoreColumn:o,splitLine:r,parser:l,uniqueId:h,start:t.start,end:t.end,refName:e.refName});f?g[f].push(P):(0,i.doesIntersect2)(P.start,P.end,s.start,s.end)&&a.next(new i.SimpleFeature({id:`${this.id}-${h}`,data:P}))}Object.entries(g).map(([t,r])=>{let n=(0,i.min)(r.map(e=>e.start)),u=(0,i.max)(r.map(e=>e.end));if((0,i.doesIntersect2)(n,u,s.start,s.end)){let{uniqueId:s,strand:o}=r[0];a.next(new i.SimpleFeature({id:`${this.id}-${s}-parent`,data:{type:"gene",subfeatures:r,strand:o,name:t,start:n,end:u,refName:e.refName}}))}}),a.complete()}getFeatures(e,t={}){return(0,o.ObservableCreate)(async a=>{try{await this.getFeaturesHelper({query:e,opts:t,observer:a,allowRedispatch:!0})}catch(e){a.error(e)}},t.stopToken)}freeResources(){}}}}]);
//# sourceMappingURL=1502.197f60d5779bf2f7.js.map
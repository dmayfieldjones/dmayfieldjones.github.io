{"version":3,"file":"static/chunks/6317.df68dd5fe98e2e4a.js","mappings":"qPAOA,MAAkB,uBAAU,QAC5B,qBACA,oBACA,SACA,CAAK,CACL,CAAC,EACD,aACA,OAAY,eAAmB,CAAC,GAAO,EAAI,qEAAuE,CAC1G,eAAmB,CAAC,GAAU,MAC1B,eAAmB,CAAC,GAAS,EAAI,iBAAmB,GAChE,CAuBA,MAtBgC,cAAQ,cAsBzB,KAtBsC,kBAsBf,EAAC,YAtBc,EAAwC,EAC7F,YAAY,GAAU,IACtB,WAAY,sCAA6C,EACzD,OAAY,eAAmB,CAAC,QAAM,EAAI,2DAA+E,CACjH,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAU,+EAC9B,eAAmB,QAAU,gCAAwC,CACjF,UACA,MAAiC,oBAAc,WAC/C,OAA4B,eAAmB,CAAC,GAAU,EAAI,YAAa,EAAK,EAAG,CACnF,kCAAoJ,eAAmB,CAAC,GAAU,EAAI,aACtL,OACA,EAA+B,CACH,eAAmB,CAAC,GAAS,EAAI,cAAgB,GAAO,eAAmB,SACvG,EACA,CAAiB,EACjB,SAAqE,KAA9B,eAAmB,CAAC,GAAU,gCAC7D,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAM,EAAI,aAC1C,GACA,CAAiB,qCAA0C,WAC3D,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/HierarchicalTrackSelectorWidget/components/dialogs/ManageConnectionsDialog.js"],"sourcesContent":["import React from 'react';\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport { Dialog } from '@jbrowse/core/ui';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Button, DialogActions, DialogContent, IconButton, Tooltip, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    connectionContainer: {\n        margin: theme.spacing(4),\n        width: 500,\n    },\n}));\nfunction DisabledButton() {\n    return (React.createElement(Tooltip, { title: \"Unable to delete connection in config file as non-admin user\" },\n        React.createElement(IconButton, null,\n            React.createElement(CloseIcon, { color: \"disabled\" }))));\n}\nconst ManageConnectionsDialog = observer(function ({ session, handleClose, breakConnection, }) {\n    const { classes } = useStyles();\n    const { adminMode, connections, sessionConnections } = session;\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, maxWidth: \"lg\", title: \"Delete connections\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Click the X icon to delete the connection from your config completely\"),\n            React.createElement(\"div\", { className: classes.connectionContainer },\n                connections.map(conf => {\n                    const name = readConfObject(conf, 'name');\n                    return (React.createElement(Typography, { key: `conn-${name}` },\n                        adminMode || (sessionConnections === null || sessionConnections === void 0 ? void 0 : sessionConnections.includes(conf)) ? (React.createElement(IconButton, { onClick: () => {\n                                breakConnection(conf, true);\n                            } },\n                            React.createElement(CloseIcon, { color: \"error\" }))) : (React.createElement(DisabledButton, null)),\n                        name));\n                }),\n                !connections.length ? (React.createElement(Typography, null, \"No connections found\")) : null)),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => {\n                    handleClose();\n                }, variant: \"contained\", color: \"primary\" }, \"Close\"))));\n});\nexport default ManageConnectionsDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
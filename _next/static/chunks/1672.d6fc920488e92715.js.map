{"version":3,"file":"static/chunks/1672.d6fc920488e92715.js","mappings":"wMAKA,MAAuC,UAAI,KAAO,+BAA0C,EAC5F,EAAwC,UAAI,KAAO,+BAA2C,EAC9F,uBAAyB,UAAoB,EAC7C,MAAoB,gBAAU,IAC9B,MAAY,UAAK,QAAU,UAAW,SAAI,CAAC,GAAU,EAAI,yDAA2D,EAAG,SAAI,OAAS,sBAAgD,UAAK,OAAS,gBAA2B,SAAI,CAAC,GAAI,EAAI,qBAC1O,MACA,mBACA,SAAwC,GAAO,EAC/C,IACA,KACA,6CAGA,wEAEA,CACA,SACA,iBACA,YAAsD,EAAE,EACxD,CACA,CAA6B,kBAAqB,GAAI,IAAK,EAAU,GAAG,EAAM,IAAM,GAAI,CACxF,CACA,uBAA0C,oBAA6B,EACvE,QACA,MAAoB,gBAAU,IAC9B,MAA8B,eAAa,IAC3C,gFACA,MAAY,UAAK,QAAU,UAAW,SAAI,CAAC,GAAU,EAAI,6BAA+B,EAAG,SAAI,OAAS,kBAAuC,UAAK,OAAS,aAAc,UAAgB,GAAG,SAAe,KAAK,EAAU,MAAQ,SAAI,CAAC,GAAI,EAAI,qBACjP,mBACA,kBACA,EACA,CACA,cACA,UACA,UACA,gBAAyD,KAAS,GAAG,EAAa,iCAClF,YACA,cACA,CAAqC,CACrC,CACA,CAA6B,yBAA4B,MAAQ,SAAI,CAAC,GAAI,EAAI,qBAC9E,mBACA,kBACA,EACA,CACA,cACA,UACA,UACA,gBAAyD,KAAS,GAAG,EAAa,kCAClF,YACA,cACA,CAAqC,CACrC,CACA,CAA6B,yBAA4B,GAAI,qBAAgC,GAAI,CACjG,CACe,cACf,UAAY,0BAA6B,EACzC,EAAoB,gBAAU,IAC9B,CAAY,iBAAgB,CAAE,WAAM,IACpC,KACA,IACA,wCACA,CACA,SACA,CACA,MAAY,UAAK,CAAC,IAAQ,CAAI,iCAAyC,SAAI,IAAkB,qBAAsC,IAA6B,SAAI,IAAmC,SAA7K,UAA6K,YAAwD,QAAY,CAC3Q","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/VariantFeatureWidget/LaunchBreakendPanel/LaunchBreakendPanel.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { lazy } from 'react';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { SimpleFeature, getEnv, getSession } from '@jbrowse/core/util';\nimport { Link, Typography } from '@mui/material';\nconst BreakendMultiLevelOptionDialog = lazy(() => import('./BreakendMultiLevelOptionDialog'));\nconst BreakendSingleLevelOptionDialog = lazy(() => import('./BreakendSingleLevelOptionDialog'));\nfunction LocStringList({ locStrings, model, }) {\n    const session = getSession(model);\n    return (_jsxs(\"div\", { children: [_jsx(Typography, { children: \"Navigate to breakend endpoint in linear view:\" }), _jsx(\"ul\", { children: locStrings.map((locString, index) => (_jsxs(\"li\", { children: [locString, ' ', _jsx(Link, { href: \"#\", onClick: event => {\n                                var _a;\n                                event.preventDefault();\n                                const { view } = model;\n                                try {\n                                    if (view) {\n                                        (_a = view.navToLocString) === null || _a === void 0 ? void 0 : _a.call(view, locString);\n                                    }\n                                    else {\n                                        throw new Error('No view associated with this feature detail panel anymore');\n                                    }\n                                }\n                                catch (e) {\n                                    console.error(e);\n                                    session.notify(`${e}`);\n                                }\n                            }, children: \"(LGV)\" })] }, `${locString}-${index}`))) })] }));\n}\nfunction LaunchBreakpointSplitViewPanel({ locStrings, model, feature, }) {\n    var _a, _b;\n    const session = getSession(model);\n    const simpleFeature = new SimpleFeature(feature);\n    const assemblyName = (_b = (_a = model.view) === null || _a === void 0 ? void 0 : _a.displayedRegions[0]) === null || _b === void 0 ? void 0 : _b.assemblyName;\n    return (_jsxs(\"div\", { children: [_jsx(Typography, { children: \"Launch split view\" }), _jsx(\"ul\", { children: locStrings.map(locString => (_jsxs(\"li\", { children: [`${feature.refName}:${feature.start} // ${locString}`, ' ', _jsx(Link, { href: \"#\", onClick: event => {\n                                event.preventDefault();\n                                session.queueDialog(handleClose => [\n                                    BreakendMultiLevelOptionDialog,\n                                    {\n                                        handleClose,\n                                        session,\n                                        feature: simpleFeature,\n                                        stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_multilevel`,\n                                        view: model.view,\n                                        assemblyName,\n                                    },\n                                ]);\n                            }, children: \"(top/bottom)\" }), ' ', _jsx(Link, { href: \"#\", onClick: event => {\n                                event.preventDefault();\n                                session.queueDialog(handleClose => [\n                                    BreakendSingleLevelOptionDialog,\n                                    {\n                                        handleClose,\n                                        session,\n                                        feature: simpleFeature,\n                                        stableViewId: `${model.id}_${assemblyName}_breakpointsplitview_singlelevel`,\n                                        view: model.view,\n                                        assemblyName,\n                                    },\n                                ]);\n                            }, children: \"(single row)\" })] }, JSON.stringify(locString)))) })] }));\n}\nexport default function LaunchBreakendPanel(props) {\n    const { model, locStrings, feature } = props;\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    let hasBreakpointSplitView = false;\n    try {\n        hasBreakpointSplitView = !!pluginManager.getViewType('BreakpointSplitView');\n    }\n    catch (e) {\n    }\n    return (_jsxs(BaseCard, { ...props, title: \"Breakends\", children: [_jsx(LocStringList, { model: model, locStrings: locStrings }), hasBreakpointSplitView ? (_jsx(LaunchBreakpointSplitViewPanel, { model: model, locStrings: locStrings, feature: feature })) : null] }));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
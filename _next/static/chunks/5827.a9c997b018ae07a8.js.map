{"version":3,"file":"static/chunks/5827.a9c997b018ae07a8.js","mappings":"4MAKA,MAAkB,gBAAU,IAC5B,KACA,mBACA,CAAK,CACL,QACA,qBACA,WACA,mBACA,CAAK,CACL,OACA,SACA,SACA,CAAK,CACJ,EACD,EAAkB,cAAQ,kBAAa,mBAAwB,EAC/D,YAAY,GAAU,IACtB,iBAAY,8CAAyD,EACrE,OAAY,GAAQ,CAAE,sBAAiB,IACvC,oCACA,MACA,SAAqB,UAAK,QAAU,0BAAmC,UAAK,QAAU,2CACtF,KACA,CAAiB,WAAa,SAAI,SAAW,mCAAiD,EAAG,SAAI,SAAW,mCAA4D,GAAI,EAAG,SAAI,CAAC,GAAmB,EAAI,QAAU,wBAA8B,GAAI,MAC3P,CAAC,iBCLD,MAjB2C,cAAQ,aACnD,UAAY,GAAQ,EACpB,EAAgB,YAAM,GAe2B,EAAC,EAdlD,MAAgC,cAAQ,GACxC,MAAgC,cAAQ,GACxC,MAAY,UAAK,QAAU,sBAC3B,MACA,wEACA,4BACA,6BACA,eACA,cACA,CAAS,mBACT,UACA,SACA,CAAS,WAAa,SAAI,CAAC,IAA0B,EAAI,KAAU,EAAG,SAAI,CAAC,GAAS,EAAI,QAAc,OAAuB,SAAI,CAAC,EAAS,CAAI,MDQvH,CCRuH,CDQtH,CCRsH,QAAJ,CAAI,QAA8C,QAAY,CACzM,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/MultiLinearVariantDisplay/components/Crosshair.js","webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/MultiLinearVariantDisplay/components/VariantDisplayComponent.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { getContainingView } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport MultiVariantTooltip from '../../shared/components/MultiVariantTooltip';\nconst useStyles = makeStyles()({\n    rel: {\n        position: 'relative',\n    },\n    cursor: {\n        pointerEvents: 'none',\n        zIndex: 800,\n        position: 'absolute',\n    },\n    color: {\n        width: 10,\n        height: 10,\n    },\n});\nconst Crosshair = observer(function ({ mouseX, mouseY, model, }) {\n    const { classes } = useStyles();\n    const { hoveredGenotype, height, scrollTop, rowHeight, sources } = model;\n    const { width } = getContainingView(model);\n    const source = sources === null || sources === void 0 ? void 0 : sources[Math.floor(mouseY / rowHeight)];\n    const y = mouseY - scrollTop;\n    return source ? (_jsxs(\"div\", { className: classes.rel, children: [_jsxs(\"svg\", { className: classes.cursor, width: width, height: height, style: {\n                    top: scrollTop,\n                }, children: [_jsx(\"line\", { x1: 0, x2: width, y1: y, y2: y, stroke: \"black\" }), _jsx(\"line\", { x1: mouseX, x2: mouseX, y1: 0, y2: height, stroke: \"black\" })] }), _jsx(MultiVariantTooltip, { source: { ...source, hoveredGenotype } })] })) : null;\n});\nexport default Crosshair;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useRef, useState } from 'react';\nimport { BaseLinearDisplayComponent } from '@jbrowse/plugin-linear-genome-view';\nimport { observer } from 'mobx-react';\nimport Crosshair from './Crosshair';\nimport LegendBar from '../../shared/components/LegendBar';\nconst MultiLinearVariantDisplayComponent = observer(function (props) {\n    const { model } = props;\n    const ref = useRef(null);\n    const [mouseY, setMouseY] = useState();\n    const [mouseX, setMouseX] = useState();\n    return (_jsxs(\"div\", { ref: ref, onMouseMove: event => {\n            var _a;\n            const rect = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.getBoundingClientRect();\n            const top = (rect === null || rect === void 0 ? void 0 : rect.top) || 0;\n            const left = (rect === null || rect === void 0 ? void 0 : rect.left) || 0;\n            setMouseY(event.clientY - top);\n            setMouseX(event.clientX - left);\n        }, onMouseLeave: () => {\n            setMouseY(undefined);\n            setMouseX(undefined);\n        }, children: [_jsx(BaseLinearDisplayComponent, { ...props }), _jsx(LegendBar, { model: model }), mouseX && mouseY ? (_jsx(Crosshair, { mouseX: mouseX, mouseY: mouseY, model: model })) : null] }));\n});\nexport default MultiLinearVariantDisplayComponent;\n"],"names":[],"sourceRoot":"","ignoreList":[0,1]}
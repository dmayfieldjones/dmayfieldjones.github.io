{"version":3,"file":"static/chunks/1646.ab68406045b3feec.js","mappings":"sMAKA,mCACA,EAAwB,gBAAU,iBAA6B,YAAgB,IAC/E,qBACA,eACA,mBACA,gBAAiD,KAAU,IAAI,KAAQ,EACvE,mBACA,kBACA,mBACA,mDACA,MAAY,UAAK,QAAU,+CAAkE,SAAI,QAAS,IAAc,UAAK,UAAY,UAAW,SAAI,UAAY,SAAU,UAAK,OAAS,UAAW,SAAI,OAAS,iBAAmB,EAAG,SAAI,OAAS,kBAAoB,EAAG,SAAI,OAAS,iBAAmB,GAAI,EAAG,EAAG,SAAI,UAAY,wCAA2D,UAAK,OAAS,UAAW,SAAI,OAAS,OAAS,sBAA+B,cAAiB,EAAG,SAAI,OAAS,WAAkB,EAAG,SAAI,OAAS,SAAU,SAAG,UAAc,GAAI,KAAa,GAAI,EAAM,UAAK,SAAW,kBAC1lB,OAAiC,SAAG,qBAA2B,MAAM,SAAG,kBAAwB,MAAM,SAAG,oBAA0B,EACzG,SAAG,kBAAyB,GAAK,CAC3D,CAAC,EAID,EAHsB,cAAQ,IACnB,SAAI,CAAC,GAAO,EAAI,QAEC,EAAC,CAFF,0BAA8D","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/Tooltip.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { observer } from 'mobx-react';\nimport Tooltip from '../../Tooltip';\nimport { toP } from '../../util';\nconst en = (n) => n.toLocaleString('en-US');\nconst TooltipContents = forwardRef(function TooltipContents2({ model, feature }, ref) {\n    const start = feature.get('start');\n    const end = feature.get('end');\n    const refName = feature.get('refName');\n    const coord = start === end ? en(start) : `${en(start)}..${en(end)}`;\n    const sources = feature.get('sources');\n    const source = feature.get('source');\n    const summary = feature.get('summary');\n    const obj = Object.fromEntries(model.sources.map(ent => [ent.name, ent]));\n    return (_jsxs(\"div\", { ref: ref, children: [[refName, coord].filter(f => !!f).join(':'), _jsx(\"br\", {}), sources ? (_jsxs(\"table\", { children: [_jsx(\"thead\", { children: _jsxs(\"tr\", { children: [_jsx(\"th\", { children: \"color\" }), _jsx(\"th\", { children: \"source\" }), _jsx(\"th\", { children: \"score\" })] }) }), _jsx(\"tbody\", { children: Object.entries(sources).map(([source, data]) => (_jsxs(\"tr\", { children: [_jsx(\"td\", { style: { background: obj[source].color }, children: \" \" }), _jsx(\"td\", { children: source }), _jsx(\"td\", { children: toP(data.score) })] }, source))) })] })) : (_jsxs(\"span\", { children: [source, ' ', summary\n                        ? `min:${toP(feature.get('minScore'))} avg:${toP(feature.get('score'))} max:${toP(feature.get('maxScore'))}`\n                        : toP(feature.get('score'))] }))] }));\n});\nconst WiggleTooltip = observer((props) => {\n    return _jsx(Tooltip, { useClientY: true, TooltipContents: TooltipContents, ...props });\n});\nexport default WiggleTooltip;\nexport { default as Tooltip } from '../../Tooltip';\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
{"version":3,"file":"static/chunks/4434.2d86df6da58bae9e.js","mappings":"gJAMO,wBAEP,MADiB,uBAAiB,IAClC,2BACA,WACA,sBACA,sCACA,aACA,aACA,yBACA,MACA,OAIA,OAFA,aACA,WACgB,eAAmB,UAAY,oDAAwE,CACvH,CACA,CAEA,SADA,OAA0B,6CAAoB,CAC9C,aACA,WACA,MAxBA,YACA,+BACA,kBAAuB,WAAqB,GAsB5C,MACA,OAAgB,eAAmB,CAAC,UAAc,MACtC,eAAmB,aACf,eAAmB,aAAe,KAAY,CAC1C,eAAmB,SAAW,yBAA0C,IAChF,eAAmB,MAAQ,yBAA2B,4BAAgC,kBAAoB,EAAO,GAAI,EACjI,CACA","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/shared/renderSvgUtil.js"],"sourcesContent":["import React from 'react';\nimport { getContainingView } from '@jbrowse/core/util';\nfunction getId(id) {\n    const isJest = typeof jest === 'undefined';\n    return `arc-clip-${isJest ? id : 'jest'}`;\n}\nexport async function renderSvg(self, opts, cb) {\n    const view = getContainingView(self);\n    const width = view.dynamicBlocks.totalWidthPx;\n    const height = self.height;\n    if (opts.rasterizeLayers) {\n        const canvas = document.createElement('canvas');\n        canvas.width = width * 2;\n        canvas.height = height * 2;\n        const ctx = canvas.getContext('2d');\n        if (!ctx) {\n            return;\n        }\n        ctx.scale(2, 2);\n        cb(self, ctx, width, height);\n        return (React.createElement(\"image\", { width: width, height: height, xlinkHref: canvas.toDataURL('image/png') }));\n    }\n    else {\n        const C2S = await import('canvas2svg');\n        const ctx = new C2S.default(width, height);\n        cb(self, ctx, width, height);\n        const clipid = getId(self.id);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"defs\", null,\n                React.createElement(\"clipPath\", { id: clipid },\n                    React.createElement(\"rect\", { x: 0, y: 0, width: width, height: height }))),\n            React.createElement(\"g\", { dangerouslySetInnerHTML: { __html: ctx.getSvg().innerHTML }, clipPath: `url(#${clipid})` })));\n    }\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
{"version":3,"file":"static/chunks/4908.a928f5f6987d4853.js","mappings":"oJAEe,iBAAkC,aAAW,CAC5D,0BACA,+BACA,iDACA,SAEA,YAA8B,kBAAY,wCAC1C,gCACA,0CACA,IACA,OACA,oBACA,eACA,iCACA,cACA,+BACA,EACA,SACA,8BACA,QACA,mBAEA,OACA,QAFA,KAGA,+BACA,CACA,CAAS,CACT,CACA,uBACA","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/RefNameAliasAdapter/RefNameAliasAdapter.js"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nexport default class RefNameAliasAdapter extends BaseAdapter {\n    async getRefNameAliases() {\n        const loc = this.getConf('location');\n        if (loc.uri === '' || loc.uri === '/path/to/my/aliases.txt') {\n            return [];\n        }\n        const results = await openLocation(loc, this.pluginManager).readFile('utf8');\n        const refColumn = this.getConf('refNameColumn');\n        const refColumnHeaderName = this.getConf('refNameColumnHeaderName');\n        const lines = results\n            .trim()\n            .split(/\\n|\\r\\n|\\r/)\n            .filter(f => !!f);\n        const header = lines.filter(f => f.startsWith('#'));\n        const headerCol = refColumnHeaderName && header.length\n            ? header.at(-1).split('\\t').indexOf(refColumnHeaderName)\n            : refColumn;\n        return lines\n            .filter(f => !f.startsWith('#'))\n            .map(row => {\n            const aliases = row.split('\\t');\n            const refName = aliases[headerCol];\n            return {\n                refName: refName,\n                aliases: aliases.filter(f => !!f.trim()),\n            };\n        });\n    }\n    async freeResources() { }\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
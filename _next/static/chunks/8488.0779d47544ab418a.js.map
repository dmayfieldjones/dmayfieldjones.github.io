{"version":3,"file":"static/chunks/8488.0779d47544ab418a.js","mappings":"yKAMA,MAAkB,uBAAU,IAC5B,YACA,kBACA,eACA,eACA,wBACA,CAAK,CACJ,EAsBD,EAAwB,cAAQ,iBAAa,mBAAuB,EACpE,MAAkB,OAAQ,GAC1B,CAAY,YAA0B,EACtC,MACA,YAAY,kBAA2B,EACvC,EAAoB,sBAAgB,MACpC,EAAkB,sBAAgB,MAClC,UACA,sBAEA,MAA4B,0CAA+C,GAC3E,OAAY,eAAmB,CAAC,UAAc,MACtC,eAAmB,IAAe,mCAH1C,QAG0C,oBAA2G,GAAa,2CAAkD,EAC5M,eAAmB,SAAW,GACtC,OACA,EACA,IACA,EACA,EACA,IACA,EACA,OACA,EACA,cAA4B,oBAAc,2EAAsF,EAChI,CAAC,EACD,EAAmB,cAAQ,gBAAa,2DAA0D,EAClG,YAAY,GAAU,IACtB,EAAmB,sBAAgB,eACnC,EAGA,eACgB,eAAmB,SAAW,sGAAuH,EAAO,WAAW,cAAQ,OAAe,MAAO,kBAAY,IAAS,CAC1O,EACY,eAAmB,qBAE/B,IACgC,cAAQ,+BACxC,IACoB,eAAmB,SAAW,mGAAoH,EAAO,WAAW,cAAQ,IAAU,UAAiB,CAC3N,EACgB,eAAmB,qBAEnB,eAAmB,SAAW,iGAAkH,EAAO,WAAW,cAAQ,QAAgB,UAAiB,CAC3N,EACY,eAAmB,qBAE/B,KAlBA,IAmBA,CAAC,EACD,EAAuB,cAAQ,iBAAa,mBAAuB,EACnE,MAAkB,OAAQ,GAC1B,UAAY,GAAW,EACvB,YAAY,kBAA2B,EAIvC,EADoB,gBAAU,IAC9B,oCACA,wCACA,KACA,IACA,EAAoB,qBAAe,8BACnC,CACA,SACA,8BAIA,yBAEA,OAAY,eAAmB,CAAC,UAAc,MACtC,eAAmB,IAAe,iCAhB1C,QAgB0C,QAjB1C,QAiB0C,mBAAkH,EACpJ,eAAmB,SAAW,EA5FtC,kBACA,WAEA,cAEA,oBACA,gBAGA,OACA,OACA,EACA,IACA,EACA,EACA,IARA,4CACA,OAUA,EACA,UACA,EAwEsC,wDAA6G,EACnJ,CAAC,EAID,EAHc,cAAQ,cAGP,GAHoB,IAGd,IAHc,EAAe,EAClD,uBAAkC,eAAmB,IAAoB,IAAK,uBAAiB,sDAA6E,EAAM,eAAmB,IAAmB,IAAK,uBAAiB,2CAAkE,CAChT,CAAC,8HC3Gc,YAAyB,yBAAuB,EAC/D,MAAkB,OAAQ,GAC1B,OAAY,eAAmB,SAAW,0BAAgD,gBAAU,+BAAoC,CACxI,gBCEO,sBACP,KACA,OAAU,UAAI,oBACd,IAAY,2CAAoC,EAAU,MAAgB,EAC1E,EAAoB,gBAAU,IAC9B,yDACA,cAAY,GAAe,CAAE,YAAO,IACpC,OAAY,qBAAwB,EAEpC,oCACA,oBAEA,OADA,MAAc,UAAI,gCAClB,OAAiB,4BAAyC,aAAgB,EAC1E,CAAK,GACL,cAAY,8BAAwC,EACpD,EAAgB,cAAQ,IACxB,MAAW,0BAAoB,CAAC,eAAmB,CAAC,GAAa,EAAI,MAAO,wBAAkB,IAAS,CAC/F,eAAmB,QACf,eAAmB,QAAU,+HAAsK,CAC/L,eAAmB,CAAC,EAAa,CAAI,UAAJ,KAAI,QAXrD,EAWqD,CAA4C,EACjF,eAAmB,MAAQ,uBAAwB,EAAS,WAAW,EAAI,GAAI,CAC/F,aAAoD,eAAmB,CAAC,GAAK,EAAI,sBAAoC,GACrH,eAA0C,EAAQ,KAAS,eAAmB,CAAC,UAAc,EAAI,MAAQ,WACzG","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/Ruler.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/svgcomponents/SVGBackground.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/svgcomponents/SVGCircularView.js"],"sourcesContent":["import React from 'react';\nimport { assembleLocString, getFillProps, getSession, getStrokeProps, polarToCartesian, radToDeg, } from '@jbrowse/core/util';\nimport { makeContrasting } from '@jbrowse/core/util/color';\nimport { useTheme } from '@mui/material/styles';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    rulerLabel: {\n        fontSize: '0.8rem',\n        fontWeight: 500,\n        lineHeight: 1.6,\n        letterSpacing: '0.0075em',\n    },\n});\nfunction sliceArcPath(slice, radiusPx, startBase, endBase) {\n    if (slice.flipped) {\n        ;\n        [startBase, endBase] = [endBase, startBase];\n    }\n    const startXY = slice.bpToXY(startBase, radiusPx);\n    const endXY = slice.bpToXY(endBase, radiusPx);\n    const largeArc = Math.abs(endBase - startBase) / slice.bpPerRadian > Math.PI ? '1' : '0';\n    const sweepFlag = '1';\n    return [\n        'M',\n        ...startXY,\n        'A',\n        radiusPx,\n        radiusPx,\n        '0',\n        largeArc,\n        sweepFlag,\n        ...endXY,\n    ].join(' ');\n}\nconst ElisionRulerArc = observer(function ({ model, slice, region, }) {\n    const theme = useTheme();\n    const { radiusPx: modelRadiusPx } = model;\n    const radiusPx = modelRadiusPx + 1;\n    const { endRadians, startRadians } = slice;\n    const startXY = polarToCartesian(radiusPx, startRadians);\n    const endXY = polarToCartesian(radiusPx, endRadians);\n    const widthPx = (endRadians - startRadians) * radiusPx;\n    const largeArc = endRadians - startRadians > Math.PI ? '1' : '0';\n    const centerRadians = (endRadians + startRadians) / 2;\n    const regionCount = `[${Number(region.regions.length).toLocaleString()}]`;\n    return (React.createElement(React.Fragment, null,\n        React.createElement(RulerLabel, { text: regionCount, view: model, maxWidthPx: widthPx, radians: centerRadians, radiusPx: radiusPx, title: `${regionCount} more regions`, color: theme.palette.text.primary }),\n        React.createElement(\"path\", { d: [\n                'M',\n                ...startXY,\n                'A',\n                radiusPx,\n                radiusPx,\n                '0',\n                largeArc,\n                '1',\n                ...endXY,\n            ].join(' '), ...getStrokeProps(theme.palette.text.secondary), strokeWidth: 2, strokeDasharray: \"2,2\", fill: \"none\" })));\n});\nconst RulerLabel = observer(function ({ view, text, maxWidthPx, radians, radiusPx, title, color, }) {\n    const { classes } = useStyles();\n    const textXY = polarToCartesian(radiusPx + 5, radians);\n    if (!text) {\n        return null;\n    }\n    if (text.length * 6.5 < maxWidthPx) {\n        return (React.createElement(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"middle\", dominantBaseline: \"baseline\", transform: `translate(${textXY}) rotate(${radToDeg(radians) + 90})`, ...getFillProps(color) },\n            text,\n            React.createElement(\"title\", null, title || text)));\n    }\n    if (maxWidthPx > 4) {\n        const overallRotation = radToDeg(radians + view.offsetRadians - Math.PI / 2);\n        if (overallRotation >= 180) {\n            return (React.createElement(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"start\", dominantBaseline: \"middle\", transform: `translate(${textXY}) rotate(${radToDeg(radians)})`, fill: color },\n                text,\n                React.createElement(\"title\", null, title || text)));\n        }\n        return (React.createElement(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"end\", dominantBaseline: \"middle\", transform: `translate(${textXY}) rotate(${radToDeg(radians) + 180})`, fill: color },\n            text,\n            React.createElement(\"title\", null, title || text)));\n    }\n    return null;\n});\nconst RegionRulerArc = observer(function ({ model, slice, region, }) {\n    const theme = useTheme();\n    const { radiusPx } = model;\n    const { endRadians, startRadians } = slice;\n    const centerRadians = (endRadians + startRadians) / 2;\n    const widthPx = (endRadians - startRadians) * radiusPx;\n    const session = getSession(model);\n    const assembly = session.assemblyManager.get(region.assemblyName);\n    let color = assembly ? assembly.getRefNameColor(region.refName) : undefined;\n    if (color) {\n        try {\n            color = makeContrasting(color, theme.palette.background.paper);\n        }\n        catch (error) {\n            color = theme.palette.text.primary;\n        }\n    }\n    else {\n        color = theme.palette.text.primary;\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(RulerLabel, { text: region.refName, view: model, maxWidthPx: widthPx, radians: centerRadians, radiusPx: radiusPx, color: color }),\n        React.createElement(\"path\", { d: sliceArcPath(slice, radiusPx + 1, region.start, region.end), stroke: color, strokeWidth: 2, fill: \"none\" })));\n});\nconst Ruler = observer(function ({ model, slice, }) {\n    return slice.region.elided ? (React.createElement(ElisionRulerArc, { key: assembleLocString(slice.region.regions[0]), model: model, region: slice.region, slice: slice })) : (React.createElement(RegionRulerArc, { key: assembleLocString(slice.region), region: slice.region, model: model, slice: slice }));\n});\nexport default Ruler;\n","import React from 'react';\nimport { stripAlpha } from '@jbrowse/core/util';\nimport { useTheme } from '@mui/material';\nexport default function SVGBackground({ width, height, shift, }) {\n    const theme = useTheme();\n    return (React.createElement(\"rect\", { width: width + shift * 2, height: height, fill: stripAlpha(theme.palette.background.default) }));\n}\n","import React from 'react';\nimport { createJBrowseTheme } from '@jbrowse/core/ui';\nimport { getSession, radToDeg, renderToStaticMarkup } from '@jbrowse/core/util';\nimport { ThemeProvider } from '@mui/material';\nimport { when } from 'mobx';\nimport { getRoot } from 'mobx-state-tree';\nimport SVGBackground from './SVGBackground';\nimport Ruler from '../components/Ruler';\nexport async function renderToSvg(model, opts) {\n    var _a;\n    await when(() => model.initialized);\n    const { themeName = 'default', Wrapper = ({ children }) => children } = opts;\n    const session = getSession(model);\n    const theme = (_a = session.allThemes) === null || _a === void 0 ? void 0 : _a.call(session)[themeName];\n    const { createRootFn } = getRoot(model);\n    const { width, tracks, height } = model;\n    const shift = 50;\n    const displayResults = await Promise.all(tracks.map(async (track) => {\n        const display = track.displays[0];\n        await when(() => (display.ready !== undefined ? display.ready : true));\n        return { track, result: await display.renderSvg({ ...opts, theme }) };\n    }));\n    const { staticSlices, offsetRadians, centerXY } = model;\n    const deg = radToDeg(offsetRadians);\n    return renderToStaticMarkup(React.createElement(ThemeProvider, { theme: createJBrowseTheme(theme) },\n        React.createElement(Wrapper, null,\n            React.createElement(\"svg\", { width: width, height: height, xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", viewBox: [0, 0, width + shift * 2, height].toString() },\n                React.createElement(SVGBackground, { width: width, height: height, shift: shift }),\n                React.createElement(\"g\", { transform: `translate(${centerXY}) rotate(${deg})` },\n                    staticSlices.map((slice, i) => (React.createElement(Ruler, { key: i, model: model, slice: slice }))),\n                    displayResults.map(({ result }, i) => (React.createElement(React.Fragment, { key: i }, result))))))), createRootFn);\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0,1,2]}
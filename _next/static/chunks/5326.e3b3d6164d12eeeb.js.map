{"version":3,"file":"static/chunks/5326.e3b3d6164d12eeeb.js","mappings":"sKAIO,wBACP,MAAU,UAAI,gDACd,kBAAY,WAAuB,EACnC,UAAY,GAAW,CAAE,sBAAiB,IAC1C,MAAY,UAAK,CAAC,UAAS,EAAI,UAAW,SAAI,MAAQ,oBAAsC,OAA6B,SAAI,MAAQ,uBAAwB,eAAuB,YAAc,SAAI,CAAC,GAAS,EAAI,2BAAkC,EAAG,QAAY,CACrQ","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/LinearWiggleDisplay/renderSvg.js"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { getContainingView } from '@jbrowse/core/util';\nimport { when } from 'mobx';\nimport YScaleBar from '../shared/YScaleBar';\nexport async function renderSvg(self, opts, superRenderSvg) {\n    await when(() => !!self.stats && !!self.regionCannotBeRenderedText);\n    const { needsScalebar, stats } = self;\n    const { offsetPx } = getContainingView(self);\n    return (_jsxs(_Fragment, { children: [_jsx(\"g\", { children: await superRenderSvg(opts) }), needsScalebar && stats ? (_jsx(\"g\", { transform: `translate(${Math.max(-offsetPx, 0)})`, children: _jsx(YScaleBar, { model: self, orientation: \"left\" }) })) : null] }));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
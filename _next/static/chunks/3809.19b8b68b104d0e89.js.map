{"version":3,"file":"static/chunks/3809.19b8b68b104d0e89.js","mappings":"iLAKO,wBACP,MAAU,UAAI,qCACd,aAAY,GAAW,CAAE,sBAAiB,IAC1C,CAAY,kBAAiB,EAC7B,MAAY,SAAI,CAAC,UAAS,EAAI,SAAU,UAAK,MAAQ,uBAAwB,eAAuB,aAAe,SAAI,CAAC,GAAsC,EAAI,qBAA+B,EAAG,UAAK,MAAQ,yBAA0B,EAAe,aAAe,SAAI,MAAQ,oBAAsC,EAAG,SAAI,CAAC,GAAS,EAAI,wCAAoD,GAAI,GAAI,EAAG,CAC/Y","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/MultiLinearVariantMatrixDisplay/renderSvg.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { getContainingView } from '@jbrowse/core/util';\nimport { when } from 'mobx';\nimport LegendBar from '../shared/LegendBar';\nimport LinesConnectingMatrixToGenomicPosition from './components/LinesConnectingMatrixToGenomicPosition';\nexport async function renderSvg(model, opts, superRenderSvg) {\n    await when(() => !!model.regionCannotBeRenderedText);\n    const { offsetPx } = getContainingView(model);\n    const { lineZoneHeight } = model;\n    return (_jsx(_Fragment, { children: _jsxs(\"g\", { transform: `translate(${Math.max(-offsetPx, 0)})`, children: [_jsx(LinesConnectingMatrixToGenomicPosition, { exportSVG: true, model: model }), _jsxs(\"g\", { transform: `translate(0,${lineZoneHeight})`, children: [_jsx(\"g\", { children: await superRenderSvg(opts) }), _jsx(LegendBar, { model: model, orientation: \"left\", exportSVG: true })] })] }) }));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
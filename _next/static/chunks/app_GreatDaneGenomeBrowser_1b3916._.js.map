{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/cdiesh/src/dmayfieldjones.github.io/app/GreatDaneGenomeBrowser/Ideogram.tsx"],"sourcesContent":["import React, { useEffect } from 'react'\n\nimport Ideogram from 'ideogram'\n\nexport default function ReactIdeogram(props: Record<string, unknown>) {\n  useEffect(() => {\n    new Ideogram({\n      ...props,\n      dataDir: '/',\n      container: '#ideo-container',\n    })\n  }, [props])\n  return <div style={{ padding: 10, margin: 10 }} id=\"ideo-container\"></div>\n}\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;;AAEe,SAAS,cAAc,KAA8B;;IAClE,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,IAAI,iJAAA,CAAA,UAAQ,CAAC;gBACX,GAAG,KAAK;gBACR,SAAS;gBACT,WAAW;YACb;QACF;kCAAG;QAAC;KAAM;IACV,qBAAO,6LAAC;QAAI,OAAO;YAAE,SAAS;YAAI,QAAQ;QAAG;QAAG,IAAG;;;;;;AACrD;GATwB;KAAA"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/cdiesh/src/dmayfieldjones.github.io/app/GreatDaneGenomeBrowser/MyIdeogram.tsx"],"sourcesContent":["import ReactIdeogram from './Ideogram'\n\nexport default function MyIdeogram({\n  selectedGene,\n  setGene,\n  geneCategories,\n}: {\n  selectedGene?: string\n  setGene: (arg: string) => void\n  geneCategories: any[]\n}) {\n  const annotations = geneCategories\n    .map(r => {\n      const { type, location, name } = r\n      if (location) {\n        const [chr, rest] = location.split(':')\n        const [start, stop] = rest.split('-')\n        return {\n          name,\n          type,\n          color: name === selectedGene ? 'blue' : '#bf141c',\n          chr: chr.replace('chr', ''),\n          start: +start.replaceAll(',', ''),\n          stop: +stop.replaceAll(',', ''),\n        }\n      } else {\n        return undefined\n      }\n    })\n    .filter(f => !!f)\n  return (\n    <ReactIdeogram\n      columns={2}\n      organism=\"canis-lupus-familiaris\"\n      rotatable={false}\n      chrWidth={10}\n      chrHeight={500}\n      showNonNuclearChromosomes={true}\n      orientation=\"horizontal\"\n      annotations={annotations}\n      onClickAnnot={(arg: { name: string }) => {\n        const f = geneCategories?.find(f => f.name === arg.name)?.type\n        if (f) {\n          setGene(arg.name)\n        }\n      }}\n    />\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS,WAAW,EACjC,YAAY,EACZ,OAAO,EACP,cAAc,EAKf;IACC,MAAM,cAAc,eACjB,GAAG,CAAC,CAAA;QACH,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG;QACjC,IAAI,UAAU;YACZ,MAAM,CAAC,KAAK,KAAK,GAAG,SAAS,KAAK,CAAC;YACnC,MAAM,CAAC,OAAO,KAAK,GAAG,KAAK,KAAK,CAAC;YACjC,OAAO;gBACL;gBACA;gBACA,OAAO,SAAS,eAAe,SAAS;gBACxC,KAAK,IAAI,OAAO,CAAC,OAAO;gBACxB,OAAO,CAAC,MAAM,UAAU,CAAC,KAAK;gBAC9B,MAAM,CAAC,KAAK,UAAU,CAAC,KAAK;YAC9B;QACF,OAAO;YACL,OAAO;QACT;IACF,GACC,MAAM,CAAC,CAAA,IAAK,CAAC,CAAC;IACjB,qBACE,6LAAC,6IAAA,CAAA,UAAa;QACZ,SAAS;QACT,UAAS;QACT,WAAW;QACX,UAAU;QACV,WAAW;QACX,2BAA2B;QAC3B,aAAY;QACZ,aAAa;QACb,cAAc,CAAC;YACb,MAAM,IAAI,gBAAgB,KAAK,CAAA,IAAK,EAAE,IAAI,KAAK,IAAI,IAAI,GAAG;YAC1D,IAAI,GAAG;gBACL,QAAQ,IAAI,IAAI;YAClB;QACF;;;;;;AAGN;KA9CwB"}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
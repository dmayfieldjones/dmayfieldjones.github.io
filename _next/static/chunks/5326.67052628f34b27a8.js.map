{"version":3,"file":"static/chunks/5326.67052628f34b27a8.js","mappings":"sKAIO,wBACP,MAAU,UAAI,gDACd,kBAAY,WAAuB,EACnC,UAAY,GAAW,CAAE,sBAAiB,IAC1C,OAAY,eAAmB,CAAC,UAAc,MACtC,eAAmB,sBAC3B,KAAkC,eAAmB,MAAQ,uBAAwB,eAAuB,GAAI,CACpG,eAAmB,CAAC,GAAS,EAAI,2BAAkC,QAC/E","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/LinearWiggleDisplay/renderSvg.js"],"sourcesContent":["import React from 'react';\nimport { getContainingView } from '@jbrowse/core/util';\nimport { when } from 'mobx';\nimport YScaleBar from '../shared/YScaleBar';\nexport async function renderSvg(self, opts, superRenderSvg) {\n    await when(() => !!self.stats && !!self.regionCannotBeRenderedText);\n    const { needsScalebar, stats } = self;\n    const { offsetPx } = getContainingView(self);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"g\", null, await superRenderSvg(opts)),\n        needsScalebar && stats ? (React.createElement(\"g\", { transform: `translate(${Math.max(-offsetPx, 0)})` },\n            React.createElement(YScaleBar, { model: self, orientation: \"left\" }))) : null));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
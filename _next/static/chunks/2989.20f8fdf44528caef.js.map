{"version":3,"file":"static/chunks/2989.20f8fdf44528caef.js","mappings":"oMAKO,cACH,iBAAW,GAAO,aAAO,WAC7B,IACA,MAAyB,uBAAiB,IAC1C,qDACA,OAEA,eAAoB,GAAa,CAAE,eAAU,IAC7C,SAAoB,+BAAoC,EACxD,MACA,OAEA,MAA8B,qBAAe,IAC7C,sDACA,sCACA,UACA,YACA,YACA,eACA,CAAa,EACG,aAAO,KACvB,2BAAuD,eAAa,KAEpE,CACA,SACA,CAAiB,sBAAgB,KAAO,aAAO,MAC/C,iBACgB,gBAAU,mBAAsB,EAAE,KAElD,CACA,CAAK,EAAI,UAAa,EACtB","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/getMultiVariantFeaturesAutorun.js"],"sourcesContent":["import { SimpleFeature, getContainingView, getSession, } from '@jbrowse/core/util';\nimport { isAbortException } from '@jbrowse/core/util/aborting';\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks';\nimport { autorun } from 'mobx';\nimport { addDisposer, isAlive } from 'mobx-state-tree';\nexport function getMultiVariantFeaturesAutorun(self) {\n    addDisposer(self, autorun(async () => {\n        try {\n            const view = getContainingView(self);\n            if (!view.initialized || !self.statsReadyAndRegionNotTooLarge) {\n                return;\n            }\n            const { rpcManager } = getSession(self);\n            const { sources, mafFilter, adapterConfig } = self;\n            if (!sources) {\n                return;\n            }\n            const sessionId = getRpcSessionId(self);\n            const features = (await rpcManager.call(sessionId, 'MultiVariantGetSimplifiedFeatures', {\n                regions: view.dynamicBlocks.contentBlocks,\n                sources,\n                mafFilter,\n                sessionId,\n                adapterConfig,\n            }));\n            if (isAlive(self)) {\n                self.setFeatures(features.map(f => new SimpleFeature(f)));\n            }\n        }\n        catch (e) {\n            if (!isAbortException(e) && isAlive(self)) {\n                console.error(e);\n                getSession(self).notifyError(`${e}`, e);\n            }\n        }\n    }, { delay: 1000 }));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
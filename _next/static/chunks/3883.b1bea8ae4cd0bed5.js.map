{"version":3,"file":"static/chunks/3883.b1bea8ae4cd0bed5.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/RectBg.js","webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/LegendItem.js","webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/ColorLegend.js","webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/FullHeightScaleBar.js","webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/ScoreLegend.js","webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/IndividualScaleBars.js","webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/YScaleBars.js","webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/components/util.js","webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/MultiLinearWiggleDisplay/renderSvg.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getFillProps } from '@jbrowse/core/util';\nconst RectBg = (props) => {\n    const { color = 'rgb(255,255,255,0.8)' } = props;\n    return _jsx(\"rect\", { ...props, ...getFillProps(color) });\n};\nexport default RectBg;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport RectBg from './RectBg';\nconst LegendItem = function ({ source, idx, rowHeight, labelWidth, model, exportSVG, }) {\n    const boxHeight = Math.min(20, rowHeight);\n    const { needsCustomLegend, needsScalebar, needsFullHeightScalebar, rowHeightTooSmallForScalebar, renderColorBoxes, } = model;\n    const svgFontSize = Math.min(rowHeight, 12);\n    const canDisplayLabel = rowHeight > 11;\n    const colorBoxWidth = renderColorBoxes ? 15 : 0;\n    const legendWidth = labelWidth + colorBoxWidth + 5;\n    const svgOffset = exportSVG ? 10 : 0;\n    const extraOffset = svgOffset || (needsScalebar && !rowHeightTooSmallForScalebar ? 50 : 0);\n    return (_jsxs(_Fragment, { children: [needsFullHeightScalebar ? null : (_jsx(RectBg, { y: idx * rowHeight + 1, x: extraOffset, width: legendWidth, height: boxHeight })), source.color ? (_jsx(RectBg, { y: idx * rowHeight + 1, x: extraOffset, width: colorBoxWidth, height: needsCustomLegend ? rowHeight : boxHeight, color: source.color })) : null, canDisplayLabel ? (_jsx(\"text\", { y: idx * rowHeight + 13, x: extraOffset + colorBoxWidth + 2, fontSize: svgFontSize, children: source.name })) : null] }));\n};\nexport default LegendItem;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { observer } from 'mobx-react';\nimport LegendItem from './LegendItem';\nimport RectBg from './RectBg';\nconst ColorLegend = observer(function ({ model, rowHeight, exportSVG, }) {\n    const { needsScalebar, needsFullHeightScalebar, rowHeightTooSmallForScalebar, renderColorBoxes, sources, labelWidth, } = model;\n    const colorBoxWidth = renderColorBoxes ? 15 : 0;\n    const legendWidth = labelWidth + colorBoxWidth + 5;\n    const svgOffset = exportSVG ? 10 : 0;\n    const extraOffset = svgOffset || (needsScalebar && !rowHeightTooSmallForScalebar ? 50 : 0);\n    return sources ? (_jsxs(_Fragment, { children: [needsFullHeightScalebar ? (_jsx(RectBg, { y: 0, x: extraOffset, width: legendWidth, height: (sources.length + 0.25) * rowHeight })) : null, sources.map((source, idx) => (_jsx(LegendItem, { source: source, idx: idx, model: model, rowHeight: rowHeight, exportSVG: exportSVG, labelWidth: labelWidth }, `${source.name}-${idx}`)))] })) : null;\n});\nexport default ColorLegend;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { getContainingView } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport ColorLegend from './ColorLegend';\nimport { getOffset } from './util';\nimport YScaleBar from '../../shared/YScaleBar';\nconst FullHeightScaleBar = observer(function ({ model, orientation, exportSVG, }) {\n    const { labelWidth } = model;\n    const { width: viewWidth } = getContainingView(model);\n    return (_jsxs(_Fragment, { children: [_jsx(\"g\", { transform: `translate(${!exportSVG ? getOffset(model) : 0},0)`, children: _jsx(YScaleBar, { model: model, orientation: orientation }) }), _jsx(\"g\", { transform: `translate(${viewWidth - labelWidth - 100},0)`, children: _jsx(ColorLegend, { exportSVG: exportSVG, model: model, rowHeight: 12 }) })] }));\n});\nexport default FullHeightScaleBar;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { getContainingView, measureText } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport RectBg from './RectBg';\nconst ScoreLegend = observer(({ model }) => {\n    const { ticks, scaleType } = model;\n    const { width } = getContainingView(model);\n    const legend = `[${ticks === null || ticks === void 0 ? void 0 : ticks.values[0]}-${ticks === null || ticks === void 0 ? void 0 : ticks.values[1]}]${scaleType === 'log' ? ' (log scale)' : ''}`;\n    const len = measureText(legend, 14);\n    const padding = 25;\n    const xpos = width - len - padding;\n    return (_jsxs(_Fragment, { children: [_jsx(RectBg, { y: 0, x: xpos, width: len + 6, height: 16 }), _jsx(\"text\", { y: 13, x: xpos, children: legend })] }));\n});\nexport default ScoreLegend;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { observer } from 'mobx-react';\nimport ColorLegend from './ColorLegend';\nimport ScoreLegend from './ScoreLegend';\nimport YScaleBar from '../../shared/YScaleBar';\nconst IndividualScaleBars = observer(function ({ model, orientation, exportSVG, }) {\n    const { sources, rowHeight, rowHeightTooSmallForScalebar, needsCustomLegend, ticks, } = model;\n    return (sources === null || sources === void 0 ? void 0 : sources.length) ? (_jsxs(_Fragment, { children: [_jsx(ColorLegend, { exportSVG: exportSVG, model: model, rowHeight: model.rowHeight }), rowHeightTooSmallForScalebar || needsCustomLegend ? (_jsx(ScoreLegend, { model: model })) : (sources.map((_source, idx) => (_jsx(\"g\", { transform: `translate(0 ${rowHeight * idx})`, children: _jsx(YScaleBar, { model: model, orientation: orientation }) }, `${JSON.stringify(ticks)}-${idx}`))))] })) : null;\n});\nexport default IndividualScaleBars;\n","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getContainingView } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport FullHeightScaleBar from './FullHeightScaleBar';\nimport IndividualScaleBars from './IndividualScaleBars';\nconst Wrapper = observer(function ({ children, model, exportSVG, }) {\n    const { height } = model;\n    return exportSVG ? (children) : (_jsx(\"svg\", { style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            pointerEvents: 'none',\n            height,\n            width: getContainingView(model).width,\n        }, children: children }));\n});\nexport const YScaleBars = observer(function (props) {\n    const { model, orientation, exportSVG } = props;\n    const { stats, needsFullHeightScalebar, sources } = model;\n    return stats && sources ? (_jsx(Wrapper, { ...props, children: needsFullHeightScalebar ? (_jsx(FullHeightScaleBar, { model: model, orientation: orientation, exportSVG: exportSVG })) : (_jsx(IndividualScaleBars, { model: model, orientation: orientation, exportSVG: exportSVG })) })) : null;\n});\nexport default YScaleBars;\n","import { getConf } from '@jbrowse/core/configuration';\nimport { getContainingTrack, getContainingView, measureText, } from '@jbrowse/core/util';\nexport function moveUp(arr, sel, by = 1) {\n    const idxs = sel\n        .map(l => arr.findIndex(v => v.name === l))\n        .sort((a, b) => a - b);\n    let lastIdx = 0;\n    for (const old of idxs) {\n        const idx = Math.max(lastIdx, old - by);\n        if (idx >= lastIdx) {\n            arr.splice(idx, 0, arr.splice(old, 1)[0]);\n        }\n        lastIdx = lastIdx + 1;\n    }\n    return arr;\n}\nexport function moveDown(arr, sel, by = 1) {\n    const idxs = sel\n        .map(l => arr.findIndex(v => v.name === l))\n        .sort((a, b) => b - a);\n    let lastIdx = arr.length - 1;\n    for (const old of idxs) {\n        const idx = Math.min(lastIdx, old + by);\n        if (idx <= lastIdx) {\n            arr.splice(idx, 0, arr.splice(old, 1)[0]);\n        }\n        lastIdx = lastIdx - 1;\n    }\n    return arr;\n}\nconst trackLabelFontSize = 12.8;\nexport function getOffset(model) {\n    const { prefersOffset } = model;\n    const { trackLabels } = getContainingView(model);\n    const track = getContainingTrack(model);\n    const trackName = getConf(track, 'name');\n    return trackLabels === 'overlapping' && !prefersOffset\n        ? measureText(trackName, trackLabelFontSize) + 100\n        : 10;\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { getContainingView } from '@jbrowse/core/util';\nimport { when } from 'mobx';\nimport YScaleBars from './components/YScaleBars';\nexport async function renderSvg(self, opts, superRenderSvg) {\n    await when(() => !!self.stats && !!self.regionCannotBeRenderedText);\n    const { offsetPx } = getContainingView(self);\n    return (_jsxs(_Fragment, { children: [_jsx(\"g\", { children: await superRenderSvg(opts) }), _jsx(\"g\", { transform: `translate(${Math.max(-offsetPx, 0)})`, children: _jsx(YScaleBars, { model: self, orientation: \"left\", exportSVG: true }) })] }));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6,7,8]}
{"version":3,"file":"static/chunks/942.009affe4282374a9.js","mappings":"2JAKe,SAASA,EAAcC,CAA8B,EAQlE,MAPAC,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACR,IAAIC,EAAAA,CAAQA,CAAC,CACX,GAAGF,CAAK,CACRG,QAAS,4DACTC,UAAW,iBACb,EACF,EAAG,CAACJ,EAAM,EACH,UAACK,MAAAA,CAAIC,GAAG,kBACjB,CCXe,SAASC,EAAW,CAUlC,KAVkC,MACjCC,CAAI,SACJC,CAAO,SACPC,CAAO,gBACPC,CAAc,CAMf,CAVkC,EAW3BC,EAAcD,EACjBE,MAAM,CAACC,GAAKA,EAAEN,IAAI,GAAKA,GACvBO,GAAG,CAACC,IACH,GAAM,MAAER,CAAI,UAAES,CAAQ,MAAEC,CAAI,CAAE,CAAGF,EACjC,GAAIC,EAAU,CACZ,GAAM,CAACE,EAAKC,EAAK,CAAGH,EAASI,KAAK,CAAC,KAC7B,CAACC,EAAOC,EAAK,CAAGH,EAAKC,KAAK,CAAC,KACjC,MAAO,CACLH,YACAV,EACAgB,MAAO,UACPL,IAAKA,EAAIM,OAAO,CAAC,MAAO,IACxBH,MAAO,CAACA,EAAMI,UAAU,CAAC,IAAK,IAC9BH,KAAM,CAACA,EAAKG,UAAU,CAAC,IAAK,GAC9B,CACF,CAGF,GACCb,GAJQ,GAIF,CAACC,GAAK,CAAC,CAACA,GACjB,MACE,UAACT,MAAAA,CAAIC,GAAG,qBAAqBqB,UAAU,eACrC,UAAC5B,EAAaA,CACZ6B,SAAS,CADG7B,wBAEZ8B,WAAW,EACXC,SAAU,GACVC,UAAW,IACXC,KAAM,EACNC,2BAA2B,EAC3BrB,YAAaA,EACbsB,aAAc,QACFvB,EAAV,IAAMG,QAAIH,EAAAA,KAAAA,EAAAA,QAAAA,EAAAA,EAAgBwB,IAAI,CAACrB,CAArBH,EAA0BG,EAAEI,IAAI,GAAKkB,EAAIlB,KAAI,GAA7CP,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgDH,IAAI,CAC1DM,GAAG,CACLL,EAAQK,GACRJ,EAAQ0B,EAAIlB,IAAI,EAEpB,KAIR","sources":["webpack://_N_E/./app/GreatDaneGenomeBrowser/Ideogram.tsx","webpack://_N_E/./app/GreatDaneGenomeBrowser/MyIdeogram.tsx"],"sourcesContent":["'use client'\nimport React, { useEffect } from 'react'\n\nimport Ideogram from 'ideogram'\n\nexport default function ReactIdeogram(props: Record<string, unknown>) {\n  useEffect(() => {\n    new Ideogram({\n      ...props,\n      dataDir: 'https://eweitz.github.io/ideogram/dist/data/bands/native/',\n      container: '#ideo-container',\n    })\n  }, [props])\n  return <div id=\"ideo-container\"></div>\n}\n","import { colorMap } from './colorMap'\nimport ReactIdeogram from './Ideogram'\n\nexport default function MyIdeogram({\n  type,\n  setType,\n  setGene,\n  geneCategories,\n}: {\n  type: string\n  setType: (arg: string) => void\n  setGene: (arg: string) => void\n  geneCategories: any[]\n}) {\n  const annotations = geneCategories\n    .filter(f => f.type === type)\n    .map(r => {\n      const { type, location, name } = r\n      if (location) {\n        const [chr, rest] = location.split(':')\n        const [start, stop] = rest.split('-')\n        return {\n          name,\n          type,\n          color: '#984ea3',\n          chr: chr.replace('chr', ''),\n          start: +start.replaceAll(',', ''),\n          stop: +stop.replaceAll(',', ''),\n        }\n      } else {\n        return undefined\n      }\n    })\n    .filter(f => !!f)\n  return (\n    <div id=\"eukaryotes-example\" className=\"App\">\n      <ReactIdeogram\n        organism=\"canis-lupus-familiaris\"\n        rotatable={false}\n        chrWidth={10}\n        chrHeight={200}\n        rows={2}\n        showNonNuclearChromosomes={true}\n        annotations={annotations}\n        onClickAnnot={(arg: { name: string }) => {\n          const f = geneCategories?.find(f => f.name === arg.name)?.type\n          if (f) {\n            setType(f)\n            setGene(arg.name)\n          }\n        }}\n      />\n    </div>\n  )\n}\n"],"names":["ReactIdeogram","props","useEffect","Ideogram","dataDir","container","div","id","MyIdeogram","type","setType","setGene","geneCategories","annotations","filter","f","map","r","location","name","chr","rest","split","start","stop","color","replace","replaceAll","className","organism","rotatable","chrWidth","chrHeight","rows","showNonNuclearChromosomes","onClickAnnot","find","arg"],"sourceRoot":"","ignoreList":[]}
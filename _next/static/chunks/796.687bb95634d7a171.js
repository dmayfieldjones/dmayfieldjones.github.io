"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[796],{40796:(e,a,t)=>{t.d(a,{doConnect:()=>L});class r{constructor(e=[],a){let t,r;this.data={};let{checkIndent:i=!0,skipValidation:n=!1}=null!=a?a:{};for(let a of"string"==typeof e?e.trimEnd().split(/\r?\n/):e){if(""===a)throw Error("Invalid stanza, contained blank lines");if(a.trim().startsWith("#"))continue;if(a.trimEnd().endsWith("\\")){let e=a.trimEnd().slice(0,-1);r?r+=e.trimStart():r=e;continue}let e=a;if(r&&(e=r+e.trimStart(),r=void 0),null!=t?t:i){let a=/^([ \t]+)/.exec(e);if(void 0===t)a?[,t]=a:t="";else if(""===t&&null!==a||t&&a&&t!==a[1])throw Error("Inconsistent indentation of stanza")}else t="";let n=e.trim(),o=n.indexOf(" ");if(-1===o){if(!this.nameKey)throw Error("First line in a stanza must have both a key and a value");if(this.data[n])continue;this.data[n]="";continue}let s=n.slice(0,o),l=n.slice(o+1);if(this.data[s]&&l!==this.data[s])throw Error(`Got duplicate key with a different value in stanza: "${s}" key has both ${this.data[s]} and ${l}`);this.nameKey||(this.nameKey=s,this.name=n.slice(o+1)),this.data[s]=l}n||this.validate()}validate(){}}class i{constructor(e=[],a){this.data={};let{checkIndent:t=!0,skipValidation:i=!1}=null!=a?a:{};for(let a of"string"==typeof e?e.trimEnd().split(/(?:[\t ]*\r?\n){2,}/):e){if(""===a)throw Error("Invalid stanza, was empty");if(a.startsWith("include")||a.trim().startsWith("#")&&a.trimEnd().split(/\r?\n/).map(e=>e.trim()).every(e=>e.startsWith("#")))continue;let e=new r(a,{checkIndent:t});if(this.nameKey){if(e.nameKey!==this.nameKey)throw Error(`The first line in each stanza must have the same key. Saw both ${this.nameKey} and ${e.nameKey}`)}else this.nameKey=e.nameKey;if(!e.name)throw Error(`No stanza name: ${e.name}`);if(this.data[e.name])throw Error(`Got duplicate stanza name: ${e.name}`);this.data[e.name]=e}i||this.validate()}validate(){}}function n(e,a,t=""){let r=[];for(let t of a)e.data[t]||r.push(t);if(r.length>0)throw Error(`${t} is missing required entr${1===r.length?"y":"ies"}: ${r.join(", ")}`)}class o extends i{constructor(e,a){super(e,{...a,checkIndent:!1})}validate(){var e;if("track"!==this.nameKey)throw Error(`trackDb has "${this.nameKey}" instead of "track" as the first line in each track`);for(let[a,t]of Object.entries(this.data)){let r=Object.keys(t.data);n(t,["track","shortLabel"],`Track ${a}`);let i=new Set(["superTrack","compositeTrack","container","view"]);if(!r.some(e=>i.has(e))){if(!r.includes("bigDataUrl"))throw Error(`Track ${a} is missing required key "bigDataUrl"`);if(!r.includes("type")&&!Object.keys(this.settings(a)).includes("type"))throw Error(`Neither track ${a} nor any of its parent tracks have the required key "type"`)}let o=a;do(o=null===(e=this.data[o])||void 0===e?void 0:e.parent)&&([o]=o.split(" "));while(o);let s=this.data[a];s&&(this.data[a]=s)}}settings(e){var a;if(!this.data[e])throw Error(`Track ${e} does not exist`);let t=[e],r=e;do(r=null===(a=this.data[r])||void 0===a?void 0:a.parent)&&t.push(r);while(r);let i={};for(let e of(t.reverse(),t)){let a=this.data[e];if(a)for(let[e,t]of Object.entries(a))i[e]=t}return i}}class s extends i{validate(e=["genome","trackDb"]){if("genome"!==this.nameKey)throw Error('Genomes file must begin with a line like "genome <genome_name>"');for(let[a,t]of Object.entries(this.data))n(t,e,`genome ${a}`)}}class l extends r{validate(){n(this,["hub","shortLabel","longLabel","genomesFile","email"],"Hub file")}}class c{constructor(e){let[a,t,...i]=e.trimEnd().split(/(?:[\t ]*\r?\n){2,}/);this.hubData=new r(a),this.validateHub(),this.genome=new r(t),this.validateGenomeSection(),this.tracks=new o(i.join("\n\n"),{skipValidation:!1})}validateHub(){if("hub"!==this.hubData.nameKey)throw Error('Hub file must begin with a line like "hub <hub_name>"');n(this.hubData,["hub","shortLabel","longLabel","email","descriptionUrl"])}validateGenomeSection(){if("genome"!==this.genome.nameKey)throw Error('Genomes file must begin with a line like "genome <genome_name>"')}}var d=t(88753),h=t(15715),m=t(64446),u=t(61226),p=t(70473);async function f(e){return new s(await (0,m.openLocation)(e).readFile("utf8"))}async function b(e){return new o(await (0,m.openLocation)(e).readFile("utf8"))}function g(e,a){return{uri:new URL(e,new URL(a.uri,a.baseUri)).href,locationType:"UriLocation"}}function y(e,a,t){return e?g(e,t):g(a,t)}function k(e,a){return e?{uri:e,locationType:"LocalPath"}:{uri:a,locationType:"UriLocation"}}function w(e,a){return new URL(e,a).href}function v({trackDb:e,trackDbLoc:a,assemblyName:t,sequenceAdapter:r,baseUrl:i}){let n=new Set(["superTrack","compositeTrack","container","view"]);return Object.entries(e.data).map(([t,o])=>{var s;let{data:l}=o;if(!Object.keys(l).some(e=>n.has(e))){let n=[],l=t;do(l=(null===(s=e.data[l])||void 0===s?void 0:s.data.parent)||"")&&(l=l.split(" ")[0],n.push(e.data[l]));while(l);return n.reverse(),{metadata:{...o.data,...o.data.html?{html:`<a href="${w(o.data.html,i)}">${o.data.html}</a>`}:{}},category:[o.data.group,...n.map(e=>null==e?void 0:e.data.group).filter(e=>!!e)].filter(e=>!!e),...function({track:e,trackDbLoc:a,trackDb:t,sequenceAdapter:r}){var i;let{data:n}=e,o=n.parent||"",s=n.bigDataUrl||"",l=n.bigDataIndex||"",c=n.type||(null===(i=t.data[o])||void 0===i?void 0:i.data.type)||"",d=(n.shortLabel||"")+(s.includes("xeno")?" (xeno)":""),m=(0,h.isUriLocation)(a),u=c.split(" ")[0]||"";"bam"===u&&s.toLowerCase().endsWith("cram")&&(u="cram");let f=m?g(s,a):k(s);if("bam"===u)return{type:"AlignmentsTrack",name:d,description:n.longLabel,adapter:{type:"BamAdapter",bamLocation:f,index:{location:m?y(l,`${s}.bai`,a):k(l,`${s}.bai`)}}};if("cram"===u)return{type:"AlignmentsTrack",name:d,description:n.longLabel,adapter:{type:"CramAdapter",cramLocation:f,craiLocation:m?y(l,`${s}.crai`,a):k(l,`${s}.crai`),sequenceAdapter:r}};if("bigWig"===u)return{type:"QuantitativeTrack",name:d,description:n.longLabel,adapter:{type:"BigWigAdapter",bigWigLocation:f}};if(u.startsWith("big"))return{type:"FeatureTrack",name:d,description:n.longLabel,adapter:{type:"BigBedAdapter",bigBedLocation:f}};if("vcfTabix"===u)return{type:"VariantTrack",name:d,description:n.longLabel,adapter:{type:"VcfTabixAdapter",vcfGzLocation:f,index:{location:m?y(l,`${s}.tbi`,a):k(l,`${s}.tbi`)}}};else if("hic"===u)return{type:"HicTrack",name:d,description:n.longLabel,adapter:{type:"HicAdapter",hicLocation:f}};else return(0,p.generateUnknownTrackConf)(d,u)}({track:o,trackDbLoc:a,trackDb:e,sequenceAdapter:r})}}}).filter(h.notEmpty).map(e=>({...e,trackId:`ucsc-trackhub-${(0,h.objectHash)(e)}`,assemblyNames:[t]}))}async function L(e){var a;let{pluginManager:t}=(0,h.getEnv)(e),r=(0,h.getSession)(e),i=[];try{let a=(0,d.getConf)(e,"hubTxtLocation"),n=await (0,m.openLocation)(a).readFile("utf8"),o=w(a.uri,a.baseUri),{assemblyManager:s}=r;if(n.includes("useOneFile on")){let{genome:i,tracks:l}=new c(n),h=i.name,m=i.data.description;s.get(h)||r.addSessionAssembly({name:h,displayName:m,sequence:{type:"ReferenceSequenceTrack",metadata:{...i.data,...i.data.htmlPath?{htmlPath:`<a href="${w(i.data.htmlPath,o)}">${i.data.htmlPath}</a>`}:{}},trackId:`${h}-${(0,u.nanoid)()}`,adapter:{type:"TwoBitAdapter",twoBitLocation:{uri:w(i.data.twoBitPath,o)},chromSizesLocation:{uri:w(i.data.chromSizes,o)}}},...i.data.chromAliasBb?{refNameAliases:{adapter:{type:"BigBedAdapter",uri:w(i.data.chromAliasBb,o)}}}:{}});let p=s.get(h),f=(0,d.getConf)(p,["sequence","adapter"]),b=v({trackDb:l,trackDbLoc:a,assemblyName:h,sequenceAdapter:f,baseUrl:o});e.addTrackConfs(b),t.evaluateExtensionPoint("LaunchView-LinearGenomeView",{session:r,assembly:h,tracklist:!0,loc:i.data.defaultPos})}else{let t=new l(n).data.genomesFile;if(!t)throw Error("genomesFile not found on hub");let o=w(a.uri,a.baseUri),c=o?{uri:w(t,o),locationType:"UriLocation"}:{localPath:t,locationType:"LocalPathLocation"},h=await f(c),m={};for(let[a,r]of Object.entries(h.data)){let n=(0,d.getConf)(e,"assemblyNames");if(n.length>0&&!n.includes(a))continue;let l=s.get(a);if(!l){i.push(a);continue}let c=r.data.trackDb;if(!c)throw Error("genomesFile not found on hub");let h=new URL(t,o),u=o?{uri:new URL(c,h).href,locationType:"UriLocation"}:{localPath:c,locationType:"LocalPathLocation"},p=await b(u),f=(0,d.getConf)(l,["sequence","adapter"]),g=v({trackDb:p,trackDbLoc:u,assemblyName:a,sequenceAdapter:f,baseUrl:o});e.addTrackConfs(g),m[a]=g.length}let u=Object.entries(m),p=u.length?`Loaded data from these assemblies: ${u.map(([e,a])=>`${e} (${a} tracks)`).join(", ")}`:"",g=i.length?`Skipped data from these assemblies: ${i.join(", ")}`:"";r.notify([p,g].filter(e=>!!e).join(". "),"success")}}catch(t){console.error(t),r.notifyError(`${(0,d.getConf)(e,"name")}: "${t}"`,t),null===(a=r.breakConnection)||void 0===a||a.call(r,e.configuration)}}`ailMel1
allMis1
anoCar1
anoCar2
anoGam1
anoGam3
apiMel1
apiMel2
aplCal1
aptMan1
aquChr2
balAcu1
bisBis1
bosTau2
bosTau3
bosTau4
bosTau6
bosTau7
bosTau8
braFlo1
caeJap1
caePb1
caePb2
caeRem2
caeRem3
calJac1
calJac3
calMil1
canFam1
canFam3
cavPor3
cb3
ce10
ce11
ce2
ce4
ce6
cerSim1
chlSab2
choHof1
chrPic1
ci1
ci2
ci3
criGri1
criGriChoV1
danRer10
danRer11
danRer3
danRer4
danRer5
danRer6
danRer7
dasNov3
dipOrd1
dm1
dm2
dm3
dm6
dp2
dp3
droAna1
droAna2
droEre1
droGri1
droMoj1
droMoj2
droPer1
droSec1
droSim1
droVir1
droVir2
droYak1
droYak2
eboVir3
echTel1
echTel2
equCab1
equCab2
eriEur1
eriEur2
felCat3
felCat4
felCat5
felCat8
fr1
fr2
fr3
gadMor1
galGal2
galGal3
galGal4
galGal5
galGal6
galVar1
gasAcu1
geoFor1
gorGor3
gorGor4
gorGor5
hetGla1
hetGla2
hg16
hg18
hg19
hg38
latCha1
loxAfr3
macEug2
macFas5
manPen1
melGal1
melGal5
melUnd1
micMur1
micMur2
mm10
mm7
mm8
mm9
monDom2
monDom4
monDom5
musFur1
myoLuc2
nanPar1
nasLar1
nomLeu1
nomLeu2
nomLeu3
ochPri2
ochPri3
oreNil2
ornAna1
ornAna2
oryCun2
oryLat2
otoGar3
oviAri1
oviAri3
oviAri4
panPan1
panPan2
panTro1
panTro2
panTro3
panTro4
panTro5
panTro6
papAnu2
papHam1
petMar1
petMar2
ponAbe2
ponAbe3
priPac1
proCap1
pteVam1
rheMac2
rheMac3
rheMac8
rhiRox1
rn4
rn5
rn6
sacCer1
sacCer2
sacCer3
saiBol1
sarHar1
sorAra1
sorAra2
speTri2
strPur1
strPur2
susScr11
susScr2
susScr3
taeGut1
taeGut2
tarSyr1
tarSyr2
tetNig1
tetNig2
thaSir1
triMan1
tupBel1
turTru2
venter1
vicPac1
vicPac2
xenLae2
xenTro1
xenTro2
xenTro3
xenTro7
xenTro9`.split(/\r?\n/)}}]);
//# sourceMappingURL=796.687bb95634d7a171.js.map
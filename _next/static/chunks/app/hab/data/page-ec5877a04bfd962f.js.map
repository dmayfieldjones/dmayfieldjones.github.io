{"version":3,"file":"static/chunks/app/hab/data/page-ec5877a04bfd962f.js","mappings":"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","sources":["webpack://_N_E/?dfc8","webpack://_N_E/./app/hab/components/D3BalloonChart.tsx","webpack://_N_E/./app/hab/components/FlightComparison.tsx","webpack://_N_E/./app/hab/data/page.tsx","webpack://_N_E/./app/hab/components/hab-styles.css"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/dustinmayfield/Documents/0_Clubs_hobbies/0_Great Danes/dmayfieldjones.github.io/app/hab/data/page.tsx\");\n","'use client'\n\nimport React, { useEffect, useRef, useState } from 'react'\nimport * as d3 from 'd3'\n\ninterface FlightData {\n  altitude: number\n  temperature: number\n  pressure: number\n  humidity: number\n  time: number\n  timestamp?: number\n  latitude?: number\n  longitude?: number\n  speed?: number\n  volts?: number\n  temperature_external?: number\n  temperature_internal?: number\n  temperature_ambient?: number\n  prec_gas?: number\n  oxid_gas?: number\n}\n\ninterface D3BalloonChartProps {\n  data: FlightData[]\n  title: string\n  animate?: boolean\n  onAnimationToggle?: (animate: boolean) => void\n  xAxis?: string\n  yAxis?: string\n  showControls?: boolean\n}\n\ntype AxisVariable =\n  | 'timestamp' | 'time' | 'time_min'\n  | 'altitude' | 'altitude_m' | 'altitude_km'\n  | 'latitude' | 'longitude' | 'speed'\n  | 'volts'\n  | 'temperature' | 'temperature_f' | 'temperature_external' | 'temperature_internal' | 'temperature_ambient'\n  | 'humidity'\n  | 'pressure' | 'pressure_pa' | 'pressure_kpa' | 'pressure_log'\n  | 'prec_gas' | 'oxid_gas'\n  | 'ascent_rate_ft_min' | 'ascent_rate_m_s'\n  | 'lapse_rate_c_per_kft' | 'lapse_rate_c_per_km'\n\nconst D3BalloonChart: React.FC<D3BalloonChartProps> = ({ \n  data, \n  title, \n  animate = false, \n  onAnimationToggle,\n  xAxis: externalXAxis,\n  yAxis: externalYAxis,\n  showControls = true\n}) => {\n  const svgRef = useRef<SVGSVGElement>(null)\n  const [isAnimating, setIsAnimating] = useState(animate)\n  const [xAxis, setXAxis] = useState<AxisVariable>(externalXAxis as AxisVariable || 'oxid_gas')\n  const [yAxis, setYAxis] = useState<AxisVariable>(externalYAxis as AxisVariable || 'altitude')\n\n  // Update axis values when external props change\n  useEffect(() => {\n    if (externalXAxis) setXAxis(externalXAxis as AxisVariable)\n    if (externalYAxis) setYAxis(externalYAxis as AxisVariable)\n  }, [externalXAxis, externalYAxis])\n\n  const axisOptions = [\n    { value: 'timestamp', label: 'Timestamp' },\n    { value: 'time', label: 'Time (s)' },\n    { value: 'time_min', label: 'Time (min)' },\n    { value: 'altitude', label: 'Altitude (ft)' },\n    { value: 'altitude_m', label: 'Altitude (m)' },\n    { value: 'altitude_km', label: 'Altitude (km)' },\n    { value: 'latitude', label: 'Latitude' },\n    { value: 'longitude', label: 'Longitude' },\n    { value: 'speed', label: 'Speed' },\n    { value: 'volts', label: 'Volts' },\n    { value: 'temperature', label: 'Temperature (°C)' },\n    { value: 'temperature_f', label: 'Temperature (°F)' },\n    { value: 'temperature_external', label: 'Temperature External (°C)' },\n    { value: 'temperature_internal', label: 'Temperature Internal (°C)' },\n    { value: 'temperature_ambient', label: 'Temperature Ambient (°C)' },\n    { value: 'humidity', label: 'Humidity (%)' },\n    { value: 'pressure', label: 'Pressure (hPa)' },\n    { value: 'pressure_pa', label: 'Pressure (Pa)' },\n    { value: 'pressure_kpa', label: 'Pressure (kPa)' },\n    { value: 'pressure_log', label: 'log₁₀ Pressure (hPa)' },\n    { value: 'prec_gas', label: 'Prec. Gas' },\n    { value: 'oxid_gas', label: 'Oxidizing Gas (ozone proxy)' },\n    { value: 'ascent_rate_ft_min', label: 'Ascent rate (ft/min)' },\n    { value: 'ascent_rate_m_s', label: 'Ascent rate (m/s)' },\n    { value: 'lapse_rate_c_per_kft', label: 'Lapse rate (°C/1000ft)' },\n    { value: 'lapse_rate_c_per_km', label: 'Lapse rate (°C/km)' },\n  ]\n\n  // Build a derived dataset with computed variables for flexible plotting\n  const derivedData = React.useMemo(() => {\n    if (!data || data.length === 0) return [] as Array<Record<string, number>>\n    const rows: Array<Record<string, number>> = []\n    for (let i = 0; i < data.length; i++) {\n      const d = data[i]\n      const prev = i > 0 ? data[i - 1] : null\n      const dt_s = prev ? (d.time - prev.time) : 0\n      const dAlt_ft = prev ? (d.altitude - prev.altitude) : 0\n      const dTemp_c = prev ? (d.temperature - prev.temperature) : 0\n\n      const altitude_m = d.altitude * 0.3048\n      const altitude_km = altitude_m / 1000\n      const temperature_f = d.temperature * 9/5 + 32\n      const pressure_pa = d.pressure * 100\n      const pressure_kpa = pressure_pa / 1000\n      const pressure_log = d.pressure > 0 ? Math.log10(d.pressure) : NaN\n      const time_min = d.time / 60\n      const ascent_rate_ft_min = dt_s > 0 ? (dAlt_ft / dt_s) * 60 : 0\n      const ascent_rate_m_s = dt_s > 0 ? (dAlt_ft * 0.3048) / dt_s : 0\n      const lapse_rate_c_per_kft = dAlt_ft !== 0 ? (dTemp_c / (dAlt_ft / 1000)) : 0\n      const lapse_rate_c_per_km = altitude_m !== (prev ? prev.altitude * 0.3048 : altitude_m) && dt_s !== 0\n        ? (dTemp_c / ((dAlt_ft * 0.3048) / 1000))\n        : 0\n\n      rows.push({\n        timestamp: d.timestamp || d.time,\n        time: d.time,\n        time_min,\n        altitude: d.altitude,\n        altitude_m,\n        altitude_km,\n        latitude: d.latitude || 0,\n        longitude: d.longitude || 0,\n        speed: d.speed || 0,\n        volts: d.volts || 0,\n        temperature: d.temperature,\n        temperature_f,\n        temperature_external: d.temperature_external || d.temperature,\n        temperature_internal: d.temperature_internal || d.temperature,\n        temperature_ambient: d.temperature_ambient || d.temperature,\n        humidity: d.humidity,\n        pressure: d.pressure,\n        pressure_pa,\n        pressure_kpa,\n        pressure_log,\n        prec_gas: d.prec_gas || 0,\n        oxid_gas: d.oxid_gas || 0,\n        ascent_rate_ft_min,\n        ascent_rate_m_s,\n        lapse_rate_c_per_kft,\n        lapse_rate_c_per_km,\n      })\n    }\n    return rows\n  }, [data])\n\n  useEffect(() => {\n    if (!svgRef.current || !derivedData.length) return\n\n    const svg = d3.select(svgRef.current)\n    svg.selectAll('*').remove() // Clear previous content\n\n    const margin = { top: 20, right: 80, bottom: 80, left: 80 }\n    const width = 400 - margin.left - margin.right\n    const height = 300 - margin.top - margin.bottom\n\n    const g = svg\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.top + margin.bottom)\n      .append('g')\n      .attr('transform', `translate(${margin.left},${margin.top})`)\n\n    // Dynamic scales based on selected axes over derived dataset\n    const xScale = d3.scaleLinear()\n      .domain(d3.extent(derivedData, d => d[xAxis]) as [number, number])\n      .range([0, width])\n\n    const yScale = d3.scaleLinear()\n      .domain(d3.extent(derivedData, d => d[yAxis]) as [number, number])\n      .range([height, 0])\n\n    // Line generator\n    const line = d3.line<Record<string, number>>()\n      .x(d => xScale(d[xAxis]))\n      .y(d => yScale(d[yAxis]))\n      .curve(d3.curveMonotoneX)\n\n    // Dynamic axes\n    const xAxisGenerator = d3.axisBottom(xScale)\n    const yAxisGenerator = d3.axisLeft(yScale)\n\n    g.append('g')\n      .attr('transform', `translate(0,${height})`)\n      .call(xAxisGenerator)\n      .selectAll('text')\n      .style('font-size', '12px')\n      .attr('transform', 'rotate(-45)')\n      .style('text-anchor', 'end')\n\n    g.append('g')\n      .call(yAxisGenerator)\n      .selectAll('text')\n      .style('font-size', '12px')\n\n    // Grid lines\n    g.append('g')\n      .attr('class', 'grid')\n      .attr('transform', `translate(0,${height})`)\n      .call(d3.axisBottom(xScale)\n        .tickSize(-height)\n        .tickFormat(() => '')\n      )\n      .style('opacity', 0.3)\n\n    g.append('g')\n      .attr('class', 'grid')\n      .call(d3.axisLeft(yScale)\n        .tickSize(-width)\n        .tickFormat(() => '')\n      )\n      .style('opacity', 0.3)\n\n    // Data line\n    const dataLine = g.append('path')\n      .datum(derivedData)\n      .attr('fill', 'none')\n      .attr('stroke', '#bf141c')\n      .attr('stroke-width', 2)\n      .attr('d', line)\n\n    // Animation\n    if (isAnimating) {\n      const totalLength = dataLine.node()?.getTotalLength() || 0\n\n      dataLine\n        .attr('stroke-dasharray', totalLength + ' ' + totalLength)\n        .attr('stroke-dashoffset', totalLength)\n        .transition()\n        .duration(2000)\n        .ease(d3.easeLinear)\n        .attr('stroke-dashoffset', 0)\n    }\n\n    // Dynamic labels\n    g.append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - margin.left)\n      .attr('x', 0 - (height / 2))\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .style('font-size', '14px')\n      .style('fill', '#bf141c')\n      .text(axisOptions.find(opt => opt.value === yAxis)?.label || '')\n\n    g.append('text')\n      .attr('transform', `translate(${width / 2}, ${height + margin.bottom - 10})`)\n      .style('text-anchor', 'middle')\n      .style('font-size', '12px')\n      .style('fill', '#bf141c')\n      .text(axisOptions.find(opt => opt.value === xAxis)?.label || '')\n\n  }, [derivedData, isAnimating, xAxis, yAxis])\n\n  const handleAnimationToggle = () => {\n    const newState = !isAnimating\n    setIsAnimating(newState)\n    onAnimationToggle?.(newState)\n  }\n\n  return (\n    <div className=\"d3-chart-container\">\n      <h3>{title}</h3>\n      {showControls && (\n        <div className=\"chart-controls\">\n          <div className=\"axis-controls\">\n            <div className=\"axis-select\">\n              <label htmlFor={`x-axis-${title}`}>X Axis:</label>\n              <select \n                id={`x-axis-${title}`}\n                value={xAxis} \n                onChange={(e) => setXAxis(e.target.value as AxisVariable)}\n              >\n                {axisOptions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"axis-select\">\n              <label htmlFor={`y-axis-${title}`}>Y Axis:</label>\n              <select \n                id={`y-axis-${title}`}\n                value={yAxis} \n                onChange={(e) => setYAxis(e.target.value as AxisVariable)}\n              >\n                {axisOptions.map(option => (\n                  <option key={option.value} value={option.value}>\n                    {option.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <button \n            className={`animate-btn ${isAnimating ? 'active' : ''}`}\n            onClick={handleAnimationToggle}\n          >\n            Animate?\n          </button>\n        </div>\n      )}\n      <svg ref={svgRef} className=\"d3-chart\"></svg>\n    </div>\n  )\n}\n\nexport default D3BalloonChart\n","'use client'\n\nimport React, { useEffect, useState } from 'react'\nimport { csvParse } from 'd3-dsv'\nimport D3BalloonChart from './D3BalloonChart'\n\ninterface FlightData {\n  altitude: number\n  temperature: number\n  pressure: number\n  humidity: number\n  time: number\n  timestamp?: number\n  latitude?: number\n  longitude?: number\n  speed?: number\n  volts?: number\n  temperature_external?: number\n  temperature_internal?: number\n  temperature_ambient?: number\n  prec_gas?: number\n  oxid_gas?: number\n}\n\nfunction toNumber(value: any): number {\n  if (value === undefined || value === null) return NaN\n  if (typeof value === 'number') return value\n  const s = String(value).trim()\n  if (!s || s === 'NA' || s === 'NaN') return NaN\n  const n = Number(s)\n  return isFinite(n) ? n : NaN\n}\n\nfunction mapRow(row: Record<string, any>): FlightData | null {\n  const altitude_ft = toNumber(row.altitude_ft)\n  const altitude_m = toNumber(row.altitude_m)\n  const humid = toNumber(row.humid)\n  const lat = toNumber(row.lat)\n  const lng = toNumber(row.lng ?? row.long)\n  const speed = toNumber(row.speed)\n  const volt = toNumber(row.volt)\n  const t_amb = toNumber(row.t_amb)\n  const t_ext = toNumber(row.t_ext)\n  const t_int = toNumber(row.t_int)\n  const pressure_pa = toNumber(row.pressure)\n  const prec_gas = toNumber(row.prec_gas)\n  const oxid_gas = toNumber(row.oxid_gas)\n  const tsOffset = toNumber(row.timestamp_offset)\n  const tsFixed = row.timestamp_fixed ? Date.parse(row.timestamp_fixed) : NaN\n\n  // Require minimal fields for plotting\n  const altitude = isFinite(altitude_ft) ? altitude_ft : (isFinite(altitude_m) ? altitude_m / 0.3048 : NaN)\n  const pressure_hpa = isFinite(pressure_pa) ? pressure_pa / 100 : NaN\n  const temperature = isFinite(t_amb) ? t_amb : (isFinite(t_ext) ? t_ext : (isFinite(t_int) ? t_int : NaN))\n  const time = isFinite(tsOffset) ? tsOffset : 0\n\n  // Very lenient validation - only require altitude\n  if (!isFinite(altitude)) {\n    return null\n  }\n\n  return {\n    altitude,\n    pressure: pressure_hpa,\n    humidity: isFinite(humid) ? humid : NaN,\n    temperature,\n    time,\n    timestamp: isFinite(tsFixed) ? tsFixed : undefined,\n    latitude: isFinite(lat) ? lat : undefined,\n    longitude: isFinite(lng) ? lng : undefined,\n    speed: isFinite(speed) ? speed : undefined,\n    volts: isFinite(volt) ? volt : undefined,\n    temperature_external: isFinite(t_ext) ? t_ext : undefined,\n    temperature_internal: isFinite(t_int) ? t_int : undefined,\n    temperature_ambient: isFinite(t_amb) ? t_amb : undefined,\n    prec_gas: isFinite(prec_gas) ? prec_gas : undefined,\n    oxid_gas: isFinite(oxid_gas) ? oxid_gas : undefined,\n  }\n}\n\nconst FlightComparison: React.FC = () => {\n  const [hab0Animate, setHab0Animate] = useState(false)\n  const [loyolaAnimate, setLoyolaAnimate] = useState(false)\n  const [hab0Data, setHab0Data] = useState<FlightData[] | null>(null)\n  const [loyolaData, setLoyolaData] = useState<FlightData[] | null>(null)\n  const [sharedXAxis, setSharedXAxis] = useState<string>('oxid_gas')\n  const [sharedYAxis, setSharedYAxis] = useState<string>('altitude')\n\n  useEffect(() => {\n    let aborted = false\n    async function load() {\n        const tryPaths = ['/data/balloon5.csv', '/hab/data/balloon5.csv']\n        let text: string | null = null\n        for (const p of tryPaths) {\n          try {\n            console.log('Trying to fetch:', p)\n            const res = await fetch(p)\n            console.log('Fetch result:', res.status, res.ok)\n            if (res.ok) { \n              text = await res.text()\n              console.log('Text length:', text.length)\n              break \n            }\n          } catch (e) {\n            console.log('Fetch error for', p, ':', e)\n          }\n        }\n      if (!text || aborted) return\n\n          const rows = csvParse(text)\n          console.log('Parsed CSV rows:', rows.length)\n          console.log('First few rows:', rows.slice(0, 3))\n          \n          // Split by category field (cat)\n          const rowsHab0 = rows.filter(r => (r.cat || '').trim() === 'HAB_0')\n          // Prefer HAB_3 for Loyola; fallback to HAB_2\n          const rowsLoyola = rows.filter(r => (r.cat || '').trim() === 'HAB_3')\n          const rowsLoyolaFallback = rows.filter(r => (r.cat || '').trim() === 'HAB_2')\n\n          console.log('Filtered rows - HAB_0:', rowsHab0.length, 'HAB_3:', rowsLoyola.length, 'HAB_2:', rowsLoyolaFallback.length)\n\n          const toSeries = (rs: d3.DSVRowString<string>[]) => {\n            const mapped = rs.map(r => mapRow(r as any)).filter(Boolean) as FlightData[]\n            console.log('Mapped series length:', mapped.length)\n            if (mapped.length > 0) {\n              console.log('First mapped row:', mapped[0])\n            }\n            return mapped\n          }\n\n          const hab0 = toSeries(rowsHab0).sort((a, b) => a.time - b.time)\n          const loyolaPrimary = toSeries(rowsLoyola).sort((a, b) => a.time - b.time)\n          const loyolaAlt = toSeries(rowsLoyolaFallback).sort((a, b) => a.time - b.time)\n\n          console.log('Data loading results:', {\n            totalRows: rows.length,\n            hab0Rows: rowsHab0.length,\n            loyolaRows: rowsLoyola.length,\n            loyolaFallbackRows: rowsLoyolaFallback.length,\n            hab0Parsed: hab0.length,\n            loyolaParsed: loyolaPrimary.length,\n            loyolaAltParsed: loyolaAlt.length,\n            firstRow: rows[0],\n            hab0FirstRow: rowsHab0[0],\n            loyolaFirstRow: rowsLoyola[0]\n          })\n\n      setHab0Data(hab0.length ? hab0 : null)\n      setLoyolaData(loyolaPrimary.length ? loyolaPrimary : (loyolaAlt.length ? loyolaAlt : null))\n    }\n    load()\n    return () => { aborted = true }\n  }, [])\n\n      return (\n        <div className=\"flight-comparison\">\n          <div className=\"comparison-header\">\n            <h2>Flight Data Comparison</h2>\n            <p className=\"comparison-description\">\n              Compare data from our HAB_0 and Loyola launches. \n              Both flights were launched from the same location in Damiensville, IL, \n              about one year apart (March 2015 and April 2016).\n            </p>\n          </div>\n          \n          {/* Shared Axis Controls */}\n          <div className=\"shared-controls\">\n            <h3>Select Axes for Comparison</h3>\n            <div className=\"axis-controls\">\n              <div className=\"axis-select\">\n                <label htmlFor=\"shared-x-axis\">X Axis:</label>\n                <select \n                  id=\"shared-x-axis\"\n                  value={sharedXAxis} \n                  onChange={(e) => setSharedXAxis(e.target.value)}\n                >\n                  <option value=\"timestamp\">Timestamp</option>\n                  <option value=\"time\">Time (s)</option>\n                  <option value=\"time_min\">Time (min)</option>\n                  <option value=\"altitude\">Altitude (ft)</option>\n                  <option value=\"altitude_m\">Altitude (m)</option>\n                  <option value=\"altitude_km\">Altitude (km)</option>\n                  <option value=\"latitude\">Latitude</option>\n                  <option value=\"longitude\">Longitude</option>\n                  <option value=\"speed\">Speed</option>\n                  <option value=\"volts\">Volts</option>\n                  <option value=\"temperature\">Temperature (°C)</option>\n                  <option value=\"temperature_f\">Temperature (°F)</option>\n                  <option value=\"temperature_external\">Temperature External (°C)</option>\n                  <option value=\"temperature_internal\">Temperature Internal (°C)</option>\n                  <option value=\"temperature_ambient\">Temperature Ambient (°C)</option>\n                  <option value=\"humidity\">Humidity (%)</option>\n                  <option value=\"pressure\">Pressure (hPa)</option>\n                  <option value=\"pressure_pa\">Pressure (Pa)</option>\n                  <option value=\"pressure_kpa\">Pressure (kPa)</option>\n                  <option value=\"pressure_log\">log₁₀ Pressure (hPa)</option>\n                  <option value=\"prec_gas\">Prec. Gas</option>\n                  <option value=\"oxid_gas\">Oxidizing Gas (ozone proxy)</option>\n                  <option value=\"ascent_rate_ft_min\">Ascent rate (ft/min)</option>\n                  <option value=\"ascent_rate_m_s\">Ascent rate (m/s)</option>\n                  <option value=\"lapse_rate_c_per_kft\">Lapse rate (°C/1000ft)</option>\n                  <option value=\"lapse_rate_c_per_km\">Lapse rate (°C/km)</option>\n                </select>\n              </div>\n              <div className=\"axis-select\">\n                <label htmlFor=\"shared-y-axis\">Y Axis:</label>\n                <select \n                  id=\"shared-y-axis\"\n                  value={sharedYAxis} \n                  onChange={(e) => setSharedYAxis(e.target.value)}\n                >\n                  <option value=\"timestamp\">Timestamp</option>\n                  <option value=\"time\">Time (s)</option>\n                  <option value=\"time_min\">Time (min)</option>\n                  <option value=\"altitude\">Altitude (ft)</option>\n                  <option value=\"altitude_m\">Altitude (m)</option>\n                  <option value=\"altitude_km\">Altitude (km)</option>\n                  <option value=\"latitude\">Latitude</option>\n                  <option value=\"longitude\">Longitude</option>\n                  <option value=\"speed\">Speed</option>\n                  <option value=\"volts\">Volts</option>\n                  <option value=\"temperature\">Temperature (°C)</option>\n                  <option value=\"temperature_f\">Temperature (°F)</option>\n                  <option value=\"temperature_external\">Temperature External (°C)</option>\n                  <option value=\"temperature_internal\">Temperature Internal (°C)</option>\n                  <option value=\"temperature_ambient\">Temperature Ambient (°C)</option>\n                  <option value=\"humidity\">Humidity (%)</option>\n                  <option value=\"pressure\">Pressure (hPa)</option>\n                  <option value=\"pressure_pa\">Pressure (Pa)</option>\n                  <option value=\"pressure_kpa\">Pressure (kPa)</option>\n                  <option value=\"pressure_log\">log₁₀ Pressure (hPa)</option>\n                  <option value=\"prec_gas\">Prec. Gas</option>\n                  <option value=\"oxid_gas\">Oxidizing Gas (ozone proxy)</option>\n                  <option value=\"ascent_rate_ft_min\">Ascent rate (ft/min)</option>\n                  <option value=\"ascent_rate_m_s\">Ascent rate (m/s)</option>\n                  <option value=\"lapse_rate_c_per_kft\">Lapse rate (°C/1000ft)</option>\n                  <option value=\"lapse_rate_c_per_km\">Lapse rate (°C/km)</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"charts-container\">\n            <div className=\"chart-section\">\n              {hab0Data && hab0Data.length > 0 ? (\n                <D3BalloonChart \n                  data={hab0Data}\n                  title=\"First launch (HAB_0)\"\n                  animate={hab0Animate}\n                  onAnimationToggle={setHab0Animate}\n                  xAxis={sharedXAxis}\n                  yAxis={sharedYAxis}\n                  showControls={false}\n                />\n              ) : (\n                <div className=\"loading-placeholder\">\n                  <p>Loading HAB_0 data...</p>\n                </div>\n              )}\n              <div className=\"flight-info\">\n                <h4>HAB_0 Launch</h4>\n                <p><strong>Date:</strong> March 14, 2015</p>\n                <p><strong>Location:</strong> Damiensville, IL</p>\n                <p><strong>Max Altitude:</strong> 109,113 ft</p>\n                <p><strong>Duration:</strong> ~123 minutes</p>\n              </div>\n            </div>\n            \n            <div className=\"chart-section\">\n              {loyolaData && loyolaData.length > 0 ? (\n                <D3BalloonChart \n                  data={loyolaData}\n                  title=\"Second launch (Loyola)\"\n                  animate={loyolaAnimate}\n                  onAnimationToggle={setLoyolaAnimate}\n                  xAxis={sharedXAxis}\n                  yAxis={sharedYAxis}\n                  showControls={false}\n                />\n              ) : (\n                <div className=\"loading-placeholder\">\n                  <p>Loading Loyola data...</p>\n                </div>\n              )}\n              <div className=\"flight-info\">\n                <h4>Loyola Launch</h4>\n                <p><strong>Date:</strong> April 16, 2016</p>\n                <p><strong>Location:</strong> Damiensville, IL</p>\n                <p><strong>Max Altitude:</strong> 106,632 ft</p>\n                <p><strong>Duration:</strong> ~101 minutes</p>\n              </div>\n            </div>\n          </div>\n      \n      <div className=\"comparison-analysis\">\n        <h3>Data Analysis</h3>\n        <div className=\"analysis-grid\">\n          <div className=\"analysis-card\">\n            <h4>Temperature Differences</h4>\n            <p>The Loyola launch showed slightly cooler temperatures at ground level (22°C vs 25°C), \n            likely due to seasonal differences between March and April.</p>\n          </div>\n          <div className=\"analysis-card\">\n            <h4>Pressure Variations</h4>\n            <p>Both flights show similar pressure-altitude relationships, following the standard \n            barometric formula with slight variations due to weather conditions.</p>\n          </div>\n          <div className=\"analysis-card\">\n            <h4>Humidity Patterns</h4>\n            <p>The Loyola launch had higher humidity levels throughout the flight, indicating \n            different atmospheric moisture content between the two launch dates.</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default FlightComparison\n","'use client'\n\nimport React from 'react'\nimport FlightComparison from '../components/FlightComparison'\nimport FlightTrajectoryMap from '../components/FlightTrajectoryMap'\nimport '../components/hab-styles.css'\n\nexport default function DataPage() {\n  // Test data loading\n  React.useEffect(() => {\n    const testData = async () => {\n      try {\n        const response = await fetch('/data/balloon5.csv')\n        const text = await response.text()\n        const lines = text.split('\\n').slice(0, 5) // First 5 lines\n        const testDiv = document.getElementById('raw-data-test')\n        if (testDiv) {\n          testDiv.innerHTML = `<pre>${lines.join('\\n')}</pre>`\n        }\n      } catch (error) {\n        const testDiv = document.getElementById('raw-data-test')\n        if (testDiv) {\n          testDiv.innerHTML = `Error: ${error}`\n        }\n      }\n    }\n    testData()\n  }, [])\n\n  return (\n    <main className=\"content-wrapper\">\n      <section className=\"maker-section\">\n        <h2 className=\"section-title\">Balloon Data Visualization</h2>\n        <p className=\"intro-text\">\n          Historical data visualization tools from HAB.education (2015-2017). These tools \n          demonstrate how high altitude balloon data can be collected, processed, and \n          visualized for educational purposes using interactive D3.js charts.\n        </p>\n      </section>\n\n          <section className=\"maker-section\">\n            <h2 className=\"section-title\">Flight Data Comparison</h2>\n            <p className=\"intro-text\">\n              Interactive D3.js visualizations comparing balloon flight data from different launches. \n              Click the \"Animate?\" buttons to see the data visualization in action, just like the \n              original HAB.education site.\n            </p>\n            \n            <div className=\"flight-comparison\">\n              <FlightComparison />\n            </div>\n          </section>\n\n      <section className=\"maker-section\">\n        <h2 className=\"section-title\">Historical Data Tools</h2>\n        <div className=\"maker-grid\">\n          <div className=\"maker-card\">\n            <h3>Flight Trajectory Analysis</h3>\n            <p>Visualize balloon flight paths, altitude profiles, and landing predictions</p>\n            <ul>\n              <li>GPS tracking data</li>\n              <li>Altitude vs. time graphs</li>\n              <li>Wind pattern analysis</li>\n              <li>Landing prediction models</li>\n            </ul>\n          </div>\n          <div className=\"maker-card\">\n            <h3>Atmospheric Data Analysis</h3>\n            <p>Analysis of temperature, pressure, humidity, and atmospheric composition</p>\n            <ul>\n              <li>Temperature profile analysis</li>\n              <li>Pressure-altitude relationships</li>\n              <li>Humidity variations</li>\n              <li>Atmospheric layer identification</li>\n            </ul>\n          </div>\n          <div className=\"maker-card\">\n            <h3>Sensor Data Visualization</h3>\n            <p>Historical data visualization from various sensors and instruments</p>\n            <ul>\n              <li>Multi-sensor data overlay</li>\n              <li>Customizable time ranges</li>\n              <li>Data quality assessment</li>\n              <li>Sensor calibration analysis</li>\n            </ul>\n          </div>\n          <div className=\"maker-card\">\n            <h3>Data Export & Sharing</h3>\n            <p>Export data in multiple formats for further analysis and research</p>\n            <ul>\n              <li>CSV and Excel export</li>\n              <li>JSON data format</li>\n              <li>PDF report generation</li>\n              <li>Open data sharing</li>\n            </ul>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"maker-section\">\n        <h2 className=\"section-title\">Data Processing Workflow</h2>\n        <p className=\"intro-text\">\n          The original HAB.education workflow for processing balloon data (2015-2017):\n        </p>\n        <ul className=\"maker-list\">\n          <li><strong>Data Collection:</strong> Import data from balloon sensors (CSV, Excel, or other formats)</li>\n          <li><strong>Data Cleaning:</strong> Process and clean raw data for analysis</li>\n          <li><strong>Data Transformation:</strong> Convert data to \"tidy\" format for visualization</li>\n          <li><strong>Visualization:</strong> Create interactive charts and graphs</li>\n          <li><strong>Analysis:</strong> Extract insights and patterns from the data</li>\n          <li><strong>Reporting:</strong> Generate reports and share findings</li>\n        </ul>\n        <div className=\"maker-card\">\n          <h3>R-based Data Processing</h3>\n          <p>The original workflow used R for data processing:</p>\n          <ul>\n            <li>Import data into R (read.xlsx, or convert to CSV)</li>\n            <li>Melt the data frame using timestamp as ID variable (reshape2 package)</li>\n            <li>Add dataframe$cat=HAB_### to melted data frame</li>\n            <li>Append melted dataframe to existing balloon data</li>\n            <li>Rename variables to match existing dataset names</li>\n            <li>Recast data back to normal format</li>\n          </ul>\n        </div>\n      </section>\n\n      <section className=\"maker-section\">\n        <h2 className=\"section-title\">Historical Data Tools</h2>\n        <p className=\"intro-text\">\n          The original HAB.education site (2015-2017) featured interactive data processing tools that allowed users to upload their own balloon flight data in CSV format. These tools enabled students and researchers to:\n        </p>\n        <ul className=\"maker-list\">\n          <li><strong>Upload CSV Data:</strong> Users could upload their own balloon flight data files for analysis</li>\n          <li><strong>Real-time Processing:</strong> The system would automatically parse and validate the uploaded data</li>\n          <li><strong>Interactive Visualization:</strong> Generate custom charts and graphs from uploaded data</li>\n          <li><strong>Data Export:</strong> Download processed data in various formats for further analysis</li>\n          <li><strong>Sample Data:</strong> Access to sample CSV files showing the expected data format</li>\n        </ul>\n        <p className=\"intro-text\">\n          These tools were built using R for data processing and D3.js for visualization, making atmospheric science data analysis accessible to students and educators. The tools supported various sensor data including temperature, pressure, humidity, GPS coordinates, and atmospheric composition measurements.\n        </p>\n      </section>\n\n      <section className=\"maker-section\">\n        <h2 className=\"section-title\">Educational Resources</h2>\n        <div className=\"maker-grid\">\n          <div className=\"maker-card\">\n            <h3>Data Collection Methods</h3>\n            <p>Learn about sensors and instruments used in high altitude balloon experiments</p>\n            <ul>\n              <li>Temperature and pressure sensors</li>\n              <li>GPS tracking systems</li>\n              <li>Camera and imaging equipment</li>\n              <li>Data logging systems</li>\n            </ul>\n          </div>\n          <div className=\"maker-card\">\n            <h3>Data Analysis Techniques</h3>\n            <p>Statistical and visualization methods for atmospheric data</p>\n            <ul>\n              <li>Time series analysis</li>\n              <li>Altitude vs. atmospheric parameters</li>\n              <li>Data quality assessment</li>\n              <li>Pattern recognition</li>\n            </ul>\n          </div>\n          <div className=\"maker-card\">\n            <h3>Educational Applications</h3>\n            <p>How balloon data can be used in STEAM education</p>\n            <ul>\n              <li>Physics and atmospheric science</li>\n              <li>Data literacy and statistics</li>\n              <li>Engineering and design</li>\n              <li>Scientific methodology</li>\n            </ul>\n          </div>\n          <div className=\"maker-card\">\n            <h3>Community Resources</h3>\n            <p>Tools and resources for balloon data analysis</p>\n            <ul>\n              <li>Open source software</li>\n              <li>Data sharing platforms</li>\n              <li>Educational materials</li>\n              <li>Community forums</li>\n            </ul>\n          </div>\n        </div>\n      </section>\n    </main>\n  )\n}\n","// extracted by mini-css-extract-plugin"],"names":["data","title","D3BalloonChart","animate","onAnimationToggle","xAxis","externalXAxis","yAxis","externalYAxis","showControls","svgRef","useRef","isAnimating","setIsAnimating","useState","setXAxis","setYAxis","useEffect","axisOptions","value","label","derivedData","React","length","rows","i","d","prev","dt_s","time","dAlt_ft","altitude","dTemp_c","temperature","altitude_m","altitude_km","temperature_f","pressure_pa","pressure","pressure_kpa","pressure_log","Math","log10","NaN","time_min","ascent_rate_ft_min","ascent_rate_m_s","lapse_rate_c_per_kft","lapse_rate_c_per_km","push","timestamp","latitude","longitude","speed","volts","temperature_external","temperature_internal","temperature_ambient","humidity","prec_gas","oxid_gas","dataLine","current","svg","d3","selectAll","remove","margin","top","right","bottom","left","width","height","g","attr","append","xScale","domain","range","yScale","line","x","y","curve","xAxisGenerator","yAxisGenerator","call","style","tickSize","tickFormat","datum","totalLength","node","getTotalLength","transition","duration","ease","text","find","opt","div","className","h3","htmlFor","select","id","onChange","e","target","map","option","button","onClick","handleAnimationToggle","newState","ref","toNumber","undefined","s","String","trim","n","Number","isFinite","hab0Animate","setHab0Animate","FlightComparison","loyolaAnimate","setLoyolaAnimate","hab0Data","setHab0Data","loyolaData","setLoyolaData","sharedXAxis","setSharedXAxis","sharedYAxis","setSharedYAxis","aborted","load","p","tryPaths","console","log","res","fetch","status","ok","csvParse","slice","rowsHab0","filter","r","cat","rowsLoyola","rowsLoyolaFallback","toSeries","mapped","rs","mapRow","row","altitude_ft","humid","lat","lng","long","volt","t_amb","t_ext","t_int","tsOffset","timestamp_offset","tsFixed","timestamp_fixed","Date","parse","pressure_hpa","Boolean","hab0","sort","a","b","loyolaPrimary","loyolaAlt","totalRows","hab0Rows","loyolaRows","loyolaFallbackRows","hab0Parsed","loyolaParsed","loyolaAltParsed","firstRow","hab0FirstRow","loyolaFirstRow","h2","h4","strong","DataPage","testData","response","lines","split","document","getElementById","testDiv","innerHTML","join","error","main","section","ul","li"],"sourceRoot":"","ignoreList":[]}
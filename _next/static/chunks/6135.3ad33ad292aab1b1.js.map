{"version":3,"file":"static/chunks/6135.3ad33ad292aab1b1.js","mappings":"sNAKA,MAAkB,uBAAU,IAC5B,MACA,SACA,CAAK,CACJ,EAqBD,EApB2B,cAAQ,aACnC,CAmBe,EAnBf,OAAY,SAmBqB,EAAC,GAnBtB,GAAqB,EACjC,SAAY,GAAU,IACtB,WAAY,MAAiB,EAC7B,MAA0B,cAAQ,IAAI,EAAU,GAChD,OAAY,eAAmB,CAAC,QAAM,EAAI,yCAA2D,CAC7F,eAAmB,CAAC,GAAa,EAAI,iBAAyB,CAC1D,eAAmB,CAAC,GAAU,kHAC9B,eAAmB,CAAC,GAAS,EAAI,kCAC7C,iBACA,CAAiB,2CAA8C,EACnD,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAM,EAAI,4EAC9C,mDACA,GACA,EAAuB,WACP,eAAmB,CAAC,GAAM,EAAI,mDAC9C,GACA,EAAuB,aACvB,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/SetMaxHeightDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    root: {\n        width: 500,\n    },\n});\nconst SetMaxHeightDialog = observer(function (props) {\n    const { model, handleClose } = props;\n    const { classes } = useStyles();\n    const { maxHeight = '' } = model;\n    const [max, setMax] = useState(`${maxHeight}`);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Set max height\" },\n        React.createElement(DialogContent, { className: classes.root },\n            React.createElement(Typography, null, \"Set max height for the track. For example, you can increase this if the layout says \\\"Max height reached\\\"\"),\n            React.createElement(TextField, { value: max, autoFocus: true, onChange: event => {\n                    setMax(event.target.value);\n                }, placeholder: \"Enter max height for layout\" }),\n            React.createElement(DialogActions, null,\n                React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, onClick: () => {\n                        model.setMaxHeight(max !== '' && !Number.isNaN(+max) ? +max : undefined);\n                        handleClose();\n                    } }, \"Submit\"),\n                React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                        handleClose();\n                    } }, \"Cancel\")))));\n});\nexport default SetMaxHeightDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
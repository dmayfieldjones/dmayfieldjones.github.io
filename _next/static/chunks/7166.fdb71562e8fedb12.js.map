{"version":3,"file":"static/chunks/7166.fdb71562e8fedb12.js","mappings":"iOAyCA,MApCuB,qBAAQ,OAoChB,GApCgB,OAA2B,IAoC7B,EAAC,QApC4B,EAAqB,EAC/E,SAAgC,cAAQ,KACxC,OAAY,eAAmB,CAAC,QAAM,EAAI,oCAAsD,CACxF,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAU,uJAC9B,eAAmB,CAAC,GAAgB,EAAI,wBACpD,KACA,CAAiB,SAAW,eAAmB,CAAC,GAAK,6BAAiC,EAC1E,eAAmB,CAAC,GAAgB,EAAI,uBACpD,KACA,CAAiB,SAAW,eAAmB,CAAC,GAAK,uCAA2C,EAChG,EAAsB,eAAmB,CAAC,UAAc,MACxC,eAAmB,CAAC,GAAU,wBAC9B,eAAmB,CAAC,aAAW,EAAI,uCACnD,iBACA,kBACA,EAAuB,EACP,eAAmB,CAAC,GAAU,wBAC9B,eAAmB,CAAC,aAAW,EAAI,uCACnD,iBACA,kBACA,EAAuB,GAAO,eAAmB,CAAC,UAAc,MAChD,eAAmB,CAAC,GAAU,uBAC9B,eAAmB,CAAC,aAAW,EAAI,oCACnD,aACA,EAAuB,IACf,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAM,EAAI,aAC1C,sBACA,sBACA,kBACA,CAAiB,uCAA4C,oBACjD,eAAmB,CAAC,GAAM,EAAI,+DAC1C,GACA,EAAmB,YACnB,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-wiggle/esm/LinearWiggleDisplay/components/SetColorDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { ColorPicker } from '@jbrowse/core/ui/ColorPicker';\nimport { Button, DialogActions, DialogContent, FormControlLabel, Radio, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst SetColorDialog = observer(function SetColorDialog({ model, handleClose, }) {\n    const [posneg, setPosNeg] = useState(false);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Set color\" },\n        React.createElement(DialogContent, null,\n            React.createElement(Typography, null, \"Select either an overall color, or the positive/negative colors. Note that density renderers only work properly with positive/negative colors\"),\n            React.createElement(FormControlLabel, { checked: !posneg, onClick: () => {\n                    setPosNeg(false);\n                }, control: React.createElement(Radio, null), label: \"Overall color\" }),\n            React.createElement(FormControlLabel, { checked: posneg, onClick: () => {\n                    setPosNeg(true);\n                }, control: React.createElement(Radio, null), label: \"Positive/negative color\" }),\n            posneg ? (React.createElement(React.Fragment, null,\n                React.createElement(Typography, null, \"Positive color\"),\n                React.createElement(ColorPicker, { color: model.posColor || 'black', onChange: event => {\n                        model.setPosColor(event);\n                        model.setColor(undefined);\n                    } }),\n                React.createElement(Typography, null, \"Negative color\"),\n                React.createElement(ColorPicker, { color: model.negColor || 'black', onChange: event => {\n                        model.setNegColor(event);\n                        model.setColor(undefined);\n                    } }))) : (React.createElement(React.Fragment, null,\n                React.createElement(Typography, null, \"Overall color\"),\n                React.createElement(ColorPicker, { color: model.color || 'black', onChange: event => {\n                        model.setColor(event);\n                    } })))),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { onClick: () => {\n                    model.setPosColor(undefined);\n                    model.setNegColor(undefined);\n                    model.setColor(undefined);\n                }, color: \"secondary\", variant: \"contained\" }, \"Restore default\"),\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", onClick: () => {\n                    handleClose();\n                } }, \"Submit\"))));\n});\nexport default SetColorDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
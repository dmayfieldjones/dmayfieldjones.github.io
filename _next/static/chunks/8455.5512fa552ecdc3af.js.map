{"version":3,"file":"static/chunks/8455.5512fa552ecdc3af.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/Lock.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/ExportSvgDialog.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/Ruler.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/LockOpen.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/RotateLeft.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/RotateRight.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/Controls.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/ImportForm.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/CircularView.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2m3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1z\"\n}), 'Lock');","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Dialog, ErrorMessage } from '@jbrowse/core/ui';\nimport { getSession, useLocalStorage } from '@jbrowse/core/util';\nimport { Button, Checkbox, CircularProgress, DialogActions, DialogContent, FormControlLabel, MenuItem, TextField, Typography, } from '@mui/material';\nfunction LoadingMessage() {\n    return (_jsxs(\"div\", { children: [_jsx(CircularProgress, { size: 20, style: { marginRight: 20 } }), _jsx(Typography, { display: \"inline\", children: \"Creating SVG\" })] }));\n}\nfunction TextField2({ children, ...rest }) {\n    return (_jsx(\"div\", { children: _jsx(TextField, { ...rest, children: children }) }));\n}\nfunction useSvgLocal(key, val) {\n    return useLocalStorage(`svg-${key}`, val);\n}\nexport default function ExportSvgDialog({ model, handleClose, }) {\n    const session = getSession(model);\n    const offscreenCanvas = typeof OffscreenCanvas !== 'undefined';\n    const [rasterizeLayers, setRasterizeLayers] = useState(offscreenCanvas);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState();\n    const [filename, setFilename] = useSvgLocal('file', 'jbrowse.svg');\n    const [themeName, setThemeName] = useSvgLocal('theme', session.themeName || 'default');\n    return (_jsxs(Dialog, { open: true, onClose: handleClose, title: \"Export SVG\", children: [_jsxs(DialogContent, { children: [error ? (_jsx(ErrorMessage, { error: error })) : loading ? (_jsx(LoadingMessage, {})) : null, _jsx(TextField2, { helperText: \"filename\", value: filename, onChange: event => {\n                            setFilename(event.target.value);\n                        } }), session.allThemes ? (_jsx(TextField2, { select: true, label: \"Theme\", value: themeName, onChange: event => {\n                            setThemeName(event.target.value);\n                        }, children: Object.entries(session.allThemes()).map(([key, val]) => (_jsx(MenuItem, { value: key, children: val.name || '(Unknown name)' }, key))) })) : null, offscreenCanvas ? (_jsx(FormControlLabel, { control: _jsx(Checkbox, { checked: rasterizeLayers, onChange: () => {\n                                setRasterizeLayers(val => !val);\n                            } }), label: \"Rasterize canvas based tracks? File may be much larger if this is turned off\" })) : (_jsx(Typography, { children: \"Note: rasterizing layers not yet supported in this browser, so SVG size may be large\" }))] }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                            handleClose();\n                        }, children: \"Cancel\" }), _jsx(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", onClick: async () => {\n                            setLoading(true);\n                            setError(undefined);\n                            try {\n                                await model.exportSvg({\n                                    rasterizeLayers,\n                                    filename,\n                                    themeName,\n                                });\n                                handleClose();\n                            }\n                            catch (e) {\n                                console.error(e);\n                                setError(e);\n                            }\n                            finally {\n                                setLoading(false);\n                            }\n                        }, children: \"Submit\" })] })] }));\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { assembleLocString, getFillProps, getSession, getStrokeProps, polarToCartesian, radToDeg, } from '@jbrowse/core/util';\nimport { makeContrasting } from '@jbrowse/core/util/color';\nimport { useTheme } from '@mui/material/styles';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    rulerLabel: {\n        fontSize: '0.8rem',\n        fontWeight: 500,\n        lineHeight: 1.6,\n        letterSpacing: '0.0075em',\n    },\n});\nfunction sliceArcPath(slice, radiusPx, startBase, endBase) {\n    if (slice.flipped) {\n        ;\n        [startBase, endBase] = [endBase, startBase];\n    }\n    const startXY = slice.bpToXY(startBase, radiusPx);\n    const endXY = slice.bpToXY(endBase, radiusPx);\n    const largeArc = Math.abs(endBase - startBase) / slice.bpPerRadian > Math.PI ? '1' : '0';\n    const sweepFlag = '1';\n    return [\n        'M',\n        ...startXY,\n        'A',\n        radiusPx,\n        radiusPx,\n        '0',\n        largeArc,\n        sweepFlag,\n        ...endXY,\n    ].join(' ');\n}\nconst ElisionRulerArc = observer(function ({ model, slice, region, }) {\n    const theme = useTheme();\n    const { radiusPx: modelRadiusPx } = model;\n    const radiusPx = modelRadiusPx + 1;\n    const { endRadians, startRadians } = slice;\n    const startXY = polarToCartesian(radiusPx, startRadians);\n    const endXY = polarToCartesian(radiusPx, endRadians);\n    const widthPx = (endRadians - startRadians) * radiusPx;\n    const largeArc = endRadians - startRadians > Math.PI ? '1' : '0';\n    const centerRadians = (endRadians + startRadians) / 2;\n    const regionCount = `[${Number(region.regions.length).toLocaleString()}]`;\n    return (_jsxs(_Fragment, { children: [_jsx(RulerLabel, { text: regionCount, view: model, maxWidthPx: widthPx, radians: centerRadians, radiusPx: radiusPx, title: `${regionCount} more regions`, color: theme.palette.text.primary }), _jsx(\"path\", { d: [\n                    'M',\n                    ...startXY,\n                    'A',\n                    radiusPx,\n                    radiusPx,\n                    '0',\n                    largeArc,\n                    '1',\n                    ...endXY,\n                ].join(' '), ...getStrokeProps(theme.palette.text.secondary), strokeWidth: 2, strokeDasharray: \"2,2\", fill: \"none\" })] }));\n});\nconst RulerLabel = observer(function ({ view, text, maxWidthPx, radians, radiusPx, title, color, }) {\n    const { classes } = useStyles();\n    const textXY = polarToCartesian(radiusPx + 5, radians);\n    if (!text) {\n        return null;\n    }\n    if (text.length * 6.5 < maxWidthPx) {\n        return (_jsxs(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"middle\", dominantBaseline: \"baseline\", transform: `translate(${textXY}) rotate(${radToDeg(radians) + 90})`, ...getFillProps(color), children: [text, _jsx(\"title\", { children: title || text })] }));\n    }\n    if (maxWidthPx > 4) {\n        const overallRotation = radToDeg(radians + view.offsetRadians - Math.PI / 2);\n        if (overallRotation >= 180) {\n            return (_jsxs(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"start\", dominantBaseline: \"middle\", transform: `translate(${textXY}) rotate(${radToDeg(radians)})`, fill: color, children: [text, _jsx(\"title\", { children: title || text })] }));\n        }\n        return (_jsxs(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"end\", dominantBaseline: \"middle\", transform: `translate(${textXY}) rotate(${radToDeg(radians) + 180})`, fill: color, children: [text, _jsx(\"title\", { children: title || text })] }));\n    }\n    return null;\n});\nconst RegionRulerArc = observer(function ({ model, slice, region, }) {\n    const theme = useTheme();\n    const { radiusPx } = model;\n    const { endRadians, startRadians } = slice;\n    const centerRadians = (endRadians + startRadians) / 2;\n    const widthPx = (endRadians - startRadians) * radiusPx;\n    const session = getSession(model);\n    const assembly = session.assemblyManager.get(region.assemblyName);\n    let color = assembly ? assembly.getRefNameColor(region.refName) : undefined;\n    if (color) {\n        try {\n            color = makeContrasting(color, theme.palette.background.paper);\n        }\n        catch (error) {\n            color = theme.palette.text.primary;\n        }\n    }\n    else {\n        color = theme.palette.text.primary;\n    }\n    return (_jsxs(_Fragment, { children: [_jsx(RulerLabel, { text: region.refName, view: model, maxWidthPx: widthPx, radians: centerRadians, radiusPx: radiusPx, color: color }), _jsx(\"path\", { d: sliceArcPath(slice, radiusPx + 1, region.start, region.end), stroke: color, strokeWidth: 2, fill: \"none\" })] }));\n});\nconst Ruler = observer(function ({ model, slice, }) {\n    return slice.region.elided ? (_jsx(ElisionRulerArc, { model: model, region: slice.region, slice: slice }, assembleLocString(slice.region.regions[0]))) : (_jsx(RegionRulerArc, { region: slice.region, model: model, slice: slice }, assembleLocString(slice.region)));\n});\nexport default Ruler;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 17c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2m6-9h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6h1.9c0-1.71 1.39-3.1 3.1-3.1s3.1 1.39 3.1 3.1v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2m0 12H6V10h12z\"\n}), 'LockOpen');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M7.11 8.53 5.7 7.11C4.8 8.27 4.24 9.61 4.07 11h2.02c.14-.87.49-1.72 1.02-2.47M6.09 13H4.07c.17 1.39.72 2.73 1.62 3.89l1.41-1.42c-.52-.75-.87-1.59-1.01-2.47m1.01 5.32c1.16.9 2.51 1.44 3.9 1.61V17.9c-.87-.15-1.71-.49-2.46-1.03zM13 4.07V1L8.45 5.55 13 10V6.09c2.84.48 5 2.94 5 5.91s-2.16 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93s-3.05-7.44-7-7.93\"\n}), 'RotateLeft');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.55 5.55 11 1v3.07C7.06 4.56 4 7.92 4 12s3.05 7.44 7 7.93v-2.02c-2.84-.48-5-2.94-5-5.91s2.16-5.43 5-5.91V10zM19.93 11c-.17-1.39-.72-2.73-1.62-3.89l-1.42 1.42c.54.75.88 1.6 1.02 2.47zM13 17.9v2.02c1.39-.17 2.74-.71 3.9-1.61l-1.44-1.44c-.75.54-1.59.89-2.46 1.03m3.89-2.42 1.42 1.41c.9-1.16 1.45-2.5 1.62-3.89h-2.02c-.14.87-.48 1.72-1.02 2.48\"\n}), 'RotateRight');","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { TrackSelector as TrackSelectorIcon } from '@jbrowse/core/ui/Icons';\nimport JBrowseMenu from '@jbrowse/core/ui/Menu';\nimport { getSession } from '@jbrowse/core/util';\nimport LockIcon from '@mui/icons-material/Lock';\nimport LockOpenIcon from '@mui/icons-material/LockOpen';\nimport MoreVert from '@mui/icons-material/MoreVert';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport RotateLeftIcon from '@mui/icons-material/RotateLeft';\nimport RotateRightIcon from '@mui/icons-material/RotateRight';\nimport ZoomInIcon from '@mui/icons-material/ZoomIn';\nimport ZoomOutIcon from '@mui/icons-material/ZoomOut';\nimport { IconButton } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport ExportSvgDialog from './ExportSvgDialog';\nconst useStyles = makeStyles()(theme => ({\n    controls: {\n        position: 'absolute',\n        borderRight: `1px solid ${theme.palette.divider}`,\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        left: 0,\n        top: 0,\n    },\n}));\nconst Controls = observer(function ({ model }) {\n    const { classes } = useStyles();\n    const [anchorEl, setAnchorEl] = useState(null);\n    return (_jsxs(\"div\", { className: classes.controls, children: [_jsx(IconButton, { onClick: model.zoomOutButton, title: model.lockedFitToWindow ? 'unlock to zoom out' : 'zoom out', disabled: model.atMaxBpPerPx || model.lockedFitToWindow, children: _jsx(ZoomOutIcon, {}) }), _jsx(IconButton, { onClick: model.zoomInButton, disabled: model.atMinBpPerPx, title: \"zoom in\", children: _jsx(ZoomInIcon, {}) }), _jsx(IconButton, { onClick: model.rotateCounterClockwiseButton, title: \"rotate counter-clockwise\", children: _jsx(RotateLeftIcon, {}) }), _jsx(IconButton, { onClick: model.rotateClockwiseButton, title: \"rotate clockwise\", children: _jsx(RotateRightIcon, {}) }), _jsx(IconButton, { onClick: model.toggleFitToWindowLock, title: model.lockedFitToWindow\n                    ? 'locked model to window size'\n                    : 'unlocked model to zoom further', disabled: model.tooSmallToLock, children: model.lockedFitToWindow ? _jsx(LockIcon, {}) : _jsx(LockOpenIcon, {}) }), _jsx(IconButton, { onClick: event => {\n                    setAnchorEl(event.currentTarget);\n                }, children: _jsx(MoreVert, {}) }), model.hideTrackSelectorButton ? null : (_jsx(IconButton, { onClick: model.activateTrackSelector, title: \"Open track selector\", \"data-testid\": \"circular_track_select\", children: _jsx(TrackSelectorIcon, {}) })), anchorEl ? (_jsx(JBrowseMenu, { anchorEl: anchorEl, menuItems: [\n                    {\n                        label: 'Export SVG',\n                        icon: PhotoCamera,\n                        onClick: () => {\n                            getSession(model).queueDialog(handleClose => [\n                                ExportSvgDialog,\n                                { model, handleClose },\n                            ]);\n                        },\n                    },\n                ], onMenuItemClick: (_event, callback) => {\n                    callback();\n                    setAnchorEl(null);\n                }, open: Boolean(anchorEl), onClose: () => {\n                    setAnchorEl(null);\n                } })) : null] }));\n});\nexport default Controls;\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { AssemblySelector, ErrorMessage } from '@jbrowse/core/ui';\nimport { getSession } from '@jbrowse/core/util';\nimport { Button, Container, Grid2 } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(theme => ({\n    importFormContainer: {\n        padding: theme.spacing(6),\n    },\n}));\nconst ImportForm = observer(function ({ model }) {\n    const { classes } = useStyles();\n    const session = getSession(model);\n    const { error } = model;\n    const { assemblyNames, assemblyManager } = session;\n    const [selectedAsm, setSelectedAsm] = useState(assemblyNames[0]);\n    const assembly = assemblyManager.get(selectedAsm);\n    const assemblyError = assemblyNames.length\n        ? assembly === null || assembly === void 0 ? void 0 : assembly.error\n        : 'No configured assemblies';\n    const regions = (assembly === null || assembly === void 0 ? void 0 : assembly.regions) || [];\n    const err = assemblyError || error;\n    return (_jsxs(Container, { className: classes.importFormContainer, children: [err ? (_jsx(Grid2, { container: true, spacing: 1, justifyContent: \"center\", alignItems: \"center\", children: _jsx(ErrorMessage, { error: err }) })) : null, _jsxs(Grid2, { container: true, spacing: 1, justifyContent: \"center\", alignItems: \"center\", children: [_jsx(AssemblySelector, { onChange: val => {\n                            model.setError(undefined);\n                            setSelectedAsm(val);\n                        }, session: session, selected: selectedAsm }), _jsx(Button, { disabled: !regions.length, onClick: () => {\n                            model.setError(undefined);\n                            model.setDisplayedRegions(regions);\n                        }, variant: \"contained\", color: \"primary\", children: regions.length || err ? 'Open' : 'Loading...' })] })] }));\n});\nexport default ImportForm;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { ResizeHandle } from '@jbrowse/core/ui';\nimport { assembleLocString } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport Controls from './Controls';\nimport ImportForm from './ImportForm';\nimport Ruler from './Ruler';\nconst dragHandleHeight = 3;\nconst useStyles = makeStyles()(theme => ({\n    root: {\n        position: 'relative',\n        marginBottom: theme.spacing(1),\n        overflow: 'hidden',\n    },\n    scroller: {\n        overflow: 'auto',\n    },\n}));\nconst Slices = observer(({ model }) => {\n    return (_jsxs(_Fragment, { children: [model.staticSlices.map(slice => (_jsx(Ruler, { model: model, slice: slice }, assembleLocString(slice.region.elided ? slice.region.regions[0] : slice.region)))), model.tracks.map(track => {\n                const display = track.displays[0];\n                return (_jsx(display.RenderingComponent, { display: display, view: model }, display.id));\n            })] }));\n});\nconst CircularView = observer(({ model }) => {\n    const initialized = !!model.displayedRegions.length &&\n        !!model.figureWidth &&\n        !!model.figureHeight &&\n        model.initialized;\n    const showImportForm = !initialized && !model.disableImportForm;\n    const showFigure = initialized && !showImportForm;\n    return showImportForm || model.error ? (_jsx(ImportForm, { model: model })) : showFigure ? (_jsx(CircularViewLoaded, { model: model })) : null;\n});\nconst CircularViewLoaded = observer(function ({ model, }) {\n    const { width, height, id, offsetRadians, centerXY, figureWidth, figureHeight, hideVerticalResizeHandle, } = model;\n    const { classes } = useStyles();\n    return (_jsxs(\"div\", { className: classes.root, style: { width, height }, \"data-testid\": id, children: [_jsx(\"div\", { className: classes.scroller, style: { width, height }, children: _jsx(\"svg\", { style: {\n                        transform: `rotate(${offsetRadians}rad)`,\n                        transition: 'transform 0.5s',\n                        transformOrigin: centerXY.map(x => `${x}px`).join(' '),\n                        position: 'absolute',\n                        left: 0,\n                        top: 0,\n                    }, width: figureWidth, height: figureHeight, children: _jsx(\"g\", { transform: `translate(${centerXY})`, children: _jsx(Slices, { model: model }) }) }) }), _jsx(Controls, { model: model }), hideVerticalResizeHandle ? null : (_jsx(ResizeHandle, { onDrag: model.resizeHeight, style: {\n                    height: dragHandleHeight,\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    background: '#ccc',\n                    boxSizing: 'border-box',\n                    borderTop: '1px solid #fafafa',\n                } }))] }));\n});\nexport default CircularView;\n"],"names":["createSvgIcon","_jsx","d"],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6,7,8]}
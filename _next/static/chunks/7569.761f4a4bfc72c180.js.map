{"version":3,"file":"static/chunks/7569.761f4a4bfc72c180.js","mappings":"8LAIO,cACP,cACA,gBACA,UAAsB,SAAa,IACnC,mBACA,WACA,IACA,KACA,YAEA,SACA,CACA,wBACA,6CAEA,QACA,CACe,gBAAgC,wBAAsB,CACrE,mBACA,aACA,MAAsB,oBAAc,cACpC,mBACA,CACA,oBACA,gCAEA,0BACA,2CACA,4BACA,2BACA,EAAS,CACT,CACA,eACA,IAAgB,yBAAsB,EACtC,MAAe,sBAAgB,WAE/B,aADA,yBAEA,kCACA,UAGA,YACA,CAAS,CACT,CACA,iBACA","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/FromConfigAdapter/FromConfigAdapter.js"],"sourcesContent":["import { readConfObject } from '@jbrowse/core/configuration';\nimport { BaseFeatureDataAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { ObservableCreate } from '@jbrowse/core/util/rxjs';\nimport SimpleFeature from '@jbrowse/core/util/simpleFeature';\nexport function makeFeatures(fdata) {\n    const features = new Map();\n    for (const entry of fdata) {\n        const f = new SimpleFeature(entry);\n        const refName = f.get('refName');\n        let bucket = features.get(refName);\n        if (!bucket) {\n            bucket = [];\n            features.set(refName, bucket);\n        }\n        bucket.push(f);\n    }\n    for (const refFeatures of features.values()) {\n        refFeatures.sort((a, b) => a.get('start') - b.get('start'));\n    }\n    return features;\n}\nexport default class FromConfigAdapter extends BaseFeatureDataAdapter {\n    constructor(conf, getSubAdapter, pluginManager) {\n        super(conf, getSubAdapter, pluginManager);\n        const feats = readConfObject(conf, 'features');\n        this.features = makeFeatures(feats);\n    }\n    async getRefNames() {\n        return [...this.features.keys()];\n    }\n    async getRefNameAliases() {\n        return [...this.features.values()].map(featureArray => ({\n            refName: featureArray[0].get('refName'),\n            aliases: featureArray[0].get('aliases'),\n        }));\n    }\n    getFeatures(region) {\n        const { refName, start, end } = region;\n        return ObservableCreate(async (observer) => {\n            const features = this.features.get(refName) || [];\n            for (const f of features) {\n                if (f.get('end') > start && f.get('start') < end) {\n                    observer.next(f);\n                }\n            }\n            observer.complete();\n        });\n    }\n    freeResources() { }\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
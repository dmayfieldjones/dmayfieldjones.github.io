{"version":3,"file":"static/chunks/7441.68735f0a1581815e.js","mappings":"oJAEe,iBAAkC,aAAW,CAC5D,0BACA,+BACA,iDACA,SAEA,YAA8B,kBAAY,wCAC1C,gCACA,SACA,OACA,oBACA,mCACA,QACA,mBACA,kBACA,OACA,UACA,+BACA,CACA,CAAS,CACT,CACA,uBACA","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/RefNameAliasAdapter/RefNameAliasAdapter.js"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nexport default class RefNameAliasAdapter extends BaseAdapter {\n    async getRefNameAliases() {\n        const loc = this.getConf('location');\n        if (loc.uri === '' || loc.uri === '/path/to/my/aliases.txt') {\n            return [];\n        }\n        const results = await openLocation(loc, this.pluginManager).readFile('utf8');\n        const refColumn = this.getConf('refNameColumn');\n        return results\n            .trim()\n            .split(/\\n|\\r\\n|\\r/)\n            .filter(f => !!f && !f.startsWith('#'))\n            .map(row => {\n            const aliases = row.split('\\t');\n            const [refName] = aliases.splice(refColumn, 1);\n            return {\n                refName: refName,\n                aliases: aliases.filter(f => !!f.trim()),\n            };\n        });\n    }\n    async freeResources() { }\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
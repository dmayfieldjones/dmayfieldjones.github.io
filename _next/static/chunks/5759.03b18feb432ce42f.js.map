{"version":3,"file":"static/chunks/5759.03b18feb432ce42f.js","mappings":"sKAGO,sBACP,UAyUA,IAxUA,OACA,QAAiB,gBAAU,IAC3B,qBAEA,cACA,iDACA,GACA,kBAEA,uEACA,qCACA,eAAY,GAAa,EACzB,oBACA,+CACA,qBAEA,OADA,iDAA6D,EAAgB,4EAC1D,kCAA4B,qBAC/C,CACA,OAsTA,EAtTA,EA8TA,CARA,EAtTA,GA8TA,SACA,yBACA,SARA,CADA,gBACA,QACA,oCAGA,OAFA,mBACA,cAAiC,SAAe,GAAG,QAAc,GAAG,MAAY,GAAG,WAAmB,EACtG,CACA,CAAK,CAIL,EACA,sBACA,CAlUA,CACA,SACA,aAAuC,EAAS,SAChD,qBAAmC,GACnC,qBAAmC,GAEnC,mBACA,MACA,uCACA,OACA,kBACA,aAA+B,iCAA+C,EAwB9E,OAtBA,iBACA,SACA,UACA,wBACA,0BACA,CACA,EAEA,iBACA,SACA,UACA,wBACA,0BACA,CAAqB,CACrB,eACA,EAGA,SACA,UAAgC,OAAQ,EAAY,iCAAoC,EAGxF,CACA,KACA,uBACA,SACA,CACA,CACA,wCACA,OACA,mBACA,cAAgC,iCAA+C,CAC/E,iBACA,EAUA,OATA,iCACA,CACA,yBACA,0BACA,EACA,CACA,OAA4B,EAAY,OACxC,0BACA,EACA,CACA,KACA,uBACA,SACA,CACA,CACA,yCACA,OACA,KACA,oBACA,SACA,qBACA,iBAAuC,iCAA+C,CAEtF,EAEA,0CACA,2BAOA,MANA,4DACA,4BAEA,8DACA,+BAEA,CACA,KACA,yBACA,SACA,qBACA,gBAAsC,iCACtC,CAAiB,EAGjB,4CACA,OACA,uBACA,eAAiC,iCAA+C,EAwBhF,OAtBA,iBACA,SACA,UACA,wBACA,0BACA,CAAqB,EAGrB,iBACA,SACA,UACA,wBACA,0BACA,CAAqB,CACrB,eACA,EAGA,SACA,UAAgC,OAAQ,EAAY,iCAAoC,EAGxF,CACA,KACA,oBACA,SACA,CACA,CACA,6CACA,MAAmB,kCAA4B,uBAAqC,EAAY,eAEhG,uCACA,OACA,KACA,oBACA,SACA,mBACA,aAAmC,iCAA+C,CACjE,EAGjB,yCACA,OACA,KACA,oBACA,SACA,qBACA,gBAAsC,iCAA+C,CACpE,EAGjB,6CACA,OACA,wBACA,eAAiC,iCAA+C,EAwBhF,OAtBA,iBACA,SACA,UACA,wBACA,0BACA,CAAqB,EAGrB,iBACA,SACA,UACA,wBACA,0BACA,CAAqB,CACrB,eACA,EAGA,SACA,UAAgC,OAAQ,EAAY,iCAAoC,EAGxF,CACA,KACA,oBACA,SACA,CACA,CACA,sCACA,MAAmB,kCAA4B,gBAA8B,EAAY,eAEzF,4CACA,OACA,uBACA,eAAiC,iCAA+C,EAwBhF,OAtBA,iBACA,SACA,UACA,wBACA,0BACA,CAAqB,EAGrB,iBACA,SACA,UACA,wBACA,0BACA,CAAqB,CACrB,eACA,EAGA,SACA,UAAgC,OAAQ,EAAY,iCAAoC,EAGxF,CACA,KACA,oBACA,SACA,CACA,CACA,sCACA,OACA,KACA,oBACA,SACA,kBACA,aAAmC,iCAA+C,CACjE,EAGjB,iDACA,2CACA,MAAmB,kCAA4B,0BAAwC,EAAY,eAEnG,iDACA,MAAmB,kCAA4B,2BAAyC,EAAY,eAEpG,gDACA,OACA,2BACA,eAAiC,iCAA+C,EAWhF,OATA,+BACA,CACA,wBACA,0BACA,EACA,CACA,OAA4B,EAAY,MACxC,0BACA,EACA,CACA,KACA,qBACA,SACA,CACA,CACA,qDACA,OACA,yBACA,eAAiC,iCAA+C,EAoBhF,OAlBA,+BACA,CACA,wBACA,0BACA,EACA,CACA,OAA4B,EAAY,MACxC,0BACA,EACA,+BACA,CACA,wBACA,0BACA,EACA,CACA,OAA4B,EAAY,MACxC,0BACA,EACA,CACA,KACA,8BACA,SACA,CACA,CACA,yCACA,OACA,KACA,8BACA,SACA,qBACA,gBAAsC,iCAA+C,CACpE,CAGjB,OAEA,CADA,UAA6B,kBAAY,EAAG,iCAA+C,WAC3F,iBAAwC,aAAW,EACpC,kCAA4B,sBAE3C,iBAAwC,SAAO,CAChC,8BAAwB,uBAEvC,OAA0B,oBAAc,iBACxC,+BACA,4DACA,4BAEA,8DACA,gCAGA,EACA","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-legacy-jbrowse/esm/JBrowse1Connection/jb1ToJb2.js"],"sourcesContent":["import { objectHash } from '@jbrowse/core/util';\nimport { openLocation } from '@jbrowse/core/util/io';\nimport { UNKNOWN, UNSUPPORTED, generateUnknownTrackConf, generateUnsupportedTrackConf, guessAdapter, guessTrackType, } from '@jbrowse/core/util/tracks';\nexport function convertTrackConfig(jb1TrackConfig, dataRoot, sequenceAdapter) {\n    var _a, _b, _c, _d, _e;\n    const jb2TrackConfig = {\n        trackId: objectHash(jb1TrackConfig),\n        name: jb1TrackConfig.key || jb1TrackConfig.label,\n    };\n    const description = jb1TrackConfig.metadata &&\n        (jb1TrackConfig.metadata.description || jb1TrackConfig.metadata.Description);\n    if (description) {\n        jb2TrackConfig.description = description;\n    }\n    const category = jb1TrackConfig.category || ((_a = jb1TrackConfig.metadata) === null || _a === void 0 ? void 0 : _a.category);\n    jb2TrackConfig.category = category ? category.split(/\\s*\\/\\s*/) : [];\n    const { storeClass } = jb1TrackConfig;\n    if (!jb1TrackConfig.urlTemplate) {\n        if (!(storeClass === null || storeClass === void 0 ? void 0 : storeClass.endsWith('FromConfig'))) {\n            const trackIdentifier = jb1TrackConfig.key || jb1TrackConfig.label;\n            console.warn(`Could not import JBrowse1 track \"${trackIdentifier}\" because it does not have a \"urlTemplate\" or is not a \"FromConfig\" track`);\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, trackIdentifier, jb2TrackConfig.category);\n        }\n        return generateFromConfigTrackConfig(jb1TrackConfig, jb2TrackConfig);\n    }\n    const resolveUrlTemplate = (urlTemplate) => {\n        return new URL(urlTemplate, `${dataRoot}/`).href\n            .replaceAll(/%7B/gi, '{')\n            .replaceAll(/%7D/gi, '}');\n    };\n    const urlTemplate = resolveUrlTemplate(jb1TrackConfig.urlTemplate);\n    if (storeClass) {\n        if (storeClass === 'JBrowse/Store/SeqFeature/BAM') {\n            const adapter = {\n                type: 'BamAdapter',\n                bamLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            if (jb1TrackConfig.baiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.baiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                };\n            }\n            else if (jb1TrackConfig.csiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                    indexType: 'CSI',\n                };\n            }\n            else {\n                adapter.index = {\n                    location: { uri: `${urlTemplate}.bai`, locationType: 'UriLocation' },\n                };\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'AlignmentsTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/CRAM') {\n            const adapter = {\n                type: 'CramAdapter',\n                cramLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                sequenceAdapter,\n            };\n            adapter.craiLocation = jb1TrackConfig.craiUrlTemplate\n                ? {\n                    uri: resolveUrlTemplate(jb1TrackConfig.craiUrlTemplate),\n                    locationType: 'UriLocation',\n                }\n                : {\n                    uri: `${urlTemplate}.crai`,\n                    locationType: 'UriLocation',\n                };\n            return {\n                ...jb2TrackConfig,\n                type: 'AlignmentsTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/NCList') {\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter: {\n                    type: 'NCListAdapter',\n                    rootUrlTemplate: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BigWig' ||\n            storeClass === 'JBrowse/Store/BigWig') {\n            if ((_b = jb1TrackConfig.type) === null || _b === void 0 ? void 0 : _b.endsWith('XYPlot')) {\n                jb2TrackConfig.defaultRendering = 'xyplot';\n            }\n            else if ((_c = jb1TrackConfig.type) === null || _c === void 0 ? void 0 : _c.endsWith('Density')) {\n                jb2TrackConfig.defaultRendering = 'density';\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'QuantitativeTrack',\n                adapter: {\n                    type: 'BigWigAdapter',\n                    bigWigLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/VCFTabix') {\n            const adapter = {\n                type: 'VcfTabixAdapter',\n                vcfGzLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            if (jb1TrackConfig.tbiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                };\n            }\n            else if (jb1TrackConfig.csiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                    indexType: 'CSI',\n                };\n            }\n            else {\n                adapter.index = {\n                    location: { uri: `${urlTemplate}.tbi`, locationType: 'UriLocation' },\n                };\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'VariantTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/VCFTribble') {\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, `VCFTribble (${urlTemplate})`, jb2TrackConfig.category);\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/GFF3') {\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter: {\n                    type: 'Gff3Adapter',\n                    gffLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BigBed') {\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter: {\n                    type: 'BigBedAdapter',\n                    bigBedLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/GFF3Tabix') {\n            const adapter = {\n                type: 'Gff3TabixAdapter',\n                gffGzLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            if (jb1TrackConfig.tbiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                };\n            }\n            else if (jb1TrackConfig.csiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                    indexType: 'CSI',\n                };\n            }\n            else {\n                adapter.index = {\n                    location: { uri: `${urlTemplate}.tbi`, locationType: 'UriLocation' },\n                };\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BED') {\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, `BED (${urlTemplate})`, jb2TrackConfig.category);\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BEDTabix') {\n            const adapter = {\n                type: 'BedTabixAdapter',\n                bedGzLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            if (jb1TrackConfig.tbiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.tbiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                };\n            }\n            else if (jb1TrackConfig.csiUrlTemplate) {\n                adapter.index = {\n                    location: {\n                        uri: resolveUrlTemplate(jb1TrackConfig.csiUrlTemplate),\n                        locationType: 'UriLocation',\n                    },\n                    indexType: 'CSI',\n                };\n            }\n            else {\n                adapter.index = {\n                    location: { uri: `${urlTemplate}.tbi`, locationType: 'UriLocation' },\n                };\n            }\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/GTF') {\n            return {\n                ...jb2TrackConfig,\n                type: 'FeatureTrack',\n                adapter: {\n                    type: 'GtfAdapter',\n                    gtfLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/StaticChunked' ||\n            storeClass === 'JBrowse/Store/Sequence/StaticChunked') {\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, `StaticChunked (${urlTemplate})`, jb2TrackConfig.category);\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/UnindexedFasta') {\n            return generateUnsupportedTrackConf(jb2TrackConfig.name, `UnindexedFasta (${urlTemplate})`, jb2TrackConfig.category);\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/IndexedFasta') {\n            const adapter = {\n                type: 'IndexedFastaAdapter',\n                fastaLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            adapter.faiLocation = jb1TrackConfig.faiUrlTemplate\n                ? {\n                    uri: resolveUrlTemplate(jb1TrackConfig.faiUrlTemplate),\n                    locationType: 'UriLocation',\n                }\n                : {\n                    uri: `${urlTemplate}.fai`,\n                    locationType: 'UriLocation',\n                };\n            return {\n                ...jb2TrackConfig,\n                type: 'SequenceTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/BgzipIndexedFasta') {\n            const adapter = {\n                type: 'BgzipFastaAdapter',\n                fastaLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n            };\n            adapter.faiLocation = jb1TrackConfig.faiUrlTemplate\n                ? {\n                    uri: resolveUrlTemplate(jb1TrackConfig.faiUrlTemplate),\n                    locationType: 'UriLocation',\n                }\n                : {\n                    uri: `${urlTemplate}.fai`,\n                    locationType: 'UriLocation',\n                };\n            adapter.gziLocation = jb1TrackConfig.gziUrlTemplate\n                ? {\n                    uri: resolveUrlTemplate(jb1TrackConfig.gziUrlTemplate),\n                    locationType: 'UriLocation',\n                }\n                : {\n                    uri: `${urlTemplate}.gzi`,\n                    locationType: 'UriLocation',\n                };\n            return {\n                ...jb2TrackConfig,\n                type: 'ReferenceSequenceTrack',\n                adapter,\n            };\n        }\n        if (storeClass === 'JBrowse/Store/SeqFeature/TwoBit') {\n            return {\n                ...jb2TrackConfig,\n                type: 'ReferenceSequenceTrack',\n                adapter: {\n                    type: 'TwoBitAdapter',\n                    twoBitLocation: { uri: urlTemplate, locationType: 'UriLocation' },\n                },\n            };\n        }\n    }\n    jb2TrackConfig.adapter = guessAdapter({ uri: urlTemplate, locationType: 'UriLocation' }, undefined, urlTemplate);\n    if (jb2TrackConfig.adapter.type === UNSUPPORTED) {\n        return generateUnsupportedTrackConf(jb2TrackConfig.name, urlTemplate, jb2TrackConfig.category);\n    }\n    if (jb2TrackConfig.adapter.type === UNKNOWN) {\n        return generateUnknownTrackConf(jb2TrackConfig.name, urlTemplate, jb2TrackConfig.category);\n    }\n    jb2TrackConfig.type = guessTrackType(jb2TrackConfig.adapter.type);\n    if (jb2TrackConfig.type === 'QuantitativeTrack') {\n        if ((_d = jb1TrackConfig.type) === null || _d === void 0 ? void 0 : _d.endsWith('XYPlot')) {\n            jb2TrackConfig.defaultRendering = 'xyplot';\n        }\n        else if ((_e = jb1TrackConfig.type) === null || _e === void 0 ? void 0 : _e.endsWith('Density')) {\n            jb2TrackConfig.defaultRendering = 'density';\n        }\n    }\n    return jb2TrackConfig;\n}\nfunction generateFromConfigTrackConfig(jb1TrackConfig, jb2TrackConfig) {\n    const jb1Features = jb1TrackConfig.features || [];\n    const jb2Features = jb1Features.map((feature) => {\n        const jb2Feature = JSON.parse(JSON.stringify(feature));\n        jb2Feature.refName = feature.seq_id;\n        jb2Feature.uniqueId = `${feature.seq_id}:${feature.start}-${feature.end}:${feature.name || ''}`;\n        return jb2Feature;\n    });\n    jb2TrackConfig.adapter = {\n        type: 'FromConfigAdapter',\n        features: jb2Features,\n    };\n    jb2TrackConfig.type = 'FeatureTrack';\n    return jb2TrackConfig;\n}\nexport async function createRefSeqsAdapter(refSeqs) {\n    if (typeof refSeqs === 'string') {\n        refSeqs = {\n            url: refSeqs,\n        };\n    }\n    if (refSeqs.url) {\n        if (/.fai$/.exec(refSeqs.url)) {\n            return {\n                type: 'IndexedFastaAdapter',\n                fastaLocation: {\n                    uri: refSeqs.url.slice(0, -4),\n                    locationType: 'UriLocation',\n                },\n                faiLocation: {\n                    uri: refSeqs.url,\n                    locationType: 'UriLocation',\n                },\n            };\n        }\n        if (/.2bit$/.exec(refSeqs.url)) {\n            return {\n                type: 'TwoBitAdapter',\n                twoBitLocation: { uri: refSeqs.url, locationType: 'UriLocation' },\n            };\n        }\n        if (/.fa$/.exec(refSeqs.url)) {\n            throw new Error('Unindexed FASTA adapter not available');\n        }\n        if (/.sizes/.exec(refSeqs.url)) {\n            throw new Error('chromosome SIZES adapter not available');\n        }\n        const refSeqsJson = await openLocation({\n            uri: refSeqs.url,\n            locationType: 'UriLocation',\n        }).readFile('utf8');\n        const refSeqsData = JSON.parse(refSeqsJson);\n        return refSeqAdapterFromConfig(refSeqsData);\n    }\n    if ('data' in refSeqs) {\n        return refSeqAdapterFromConfig(refSeqs.data || []);\n    }\n    throw new Error(`Could not determine adapter for JBrowse1 refSeqs: ${refSeqs.url || JSON.stringify(refSeqs)}`);\n}\nfunction refSeqAdapterFromConfig(refSeqsData) {\n    const features = refSeqsData.map((refSeq) => ({\n        refName: refSeq.name,\n        uniqueId: refSeq.name,\n        start: refSeq.start,\n        end: refSeq.end,\n    }));\n    return {\n        type: 'FromConfigAdapter',\n        features,\n    };\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
{"version":3,"file":"static/chunks/5432.d0d7b0e2d5a8cc2a.js","mappings":"sNAiBA,MAZyB,qBAAQ,OAYlB,GAZkB,OAAa,MAYf,EAAC,MAZc,EAAqB,EACnE,SAA0B,cAAQ,KAClC,kCACA,MAAY,SAAI,CAAC,QAAM,EAAI,gDAAmE,UAAK,CAAC,GAAa,EAAI,OAAS,mBAAqB,WAAa,SAAI,CAAC,GAAU,EAAI,mCAAqC,EAAG,SAAI,CAAC,GAAU,EAAI,0KAA8K,EAAG,SAAI,CAAC,GAAS,EAAI,qBACjb,iBACA,CAAqB,mIACrB,WAAqC,YAAc,CACnD,CAAuB,EAAG,UAAK,CAAC,GAAa,EAAI,UAAW,SAAI,CAAC,GAAM,EAAI,iDAC3E,kBAAuD,iBAAkB,EACzE,GACA,CAA6B,+BAA2C,EAAG,SAAI,CAAC,GAAM,EAAI,kEAAoF,GAAI,GAAI,EAAG,CACzL,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/LinearPileupDisplay/components/ColorByTagDialog.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst ColorByTagDialog = observer(function ({ model, handleClose, }) {\n    const [tag, setTag] = useState('');\n    const validTag = /^[A-Za-z][A-Za-z0-9]$/.exec(tag);\n    return (_jsx(Dialog, { open: true, onClose: handleClose, title: \"Color by tag\", children: _jsxs(DialogContent, { style: { overflowX: 'hidden' }, children: [_jsx(Typography, { children: \"Enter tag to color by: \" }), _jsx(Typography, { color: \"textSecondary\", children: \"Examples: XS or TS for RNA-seq inferred read strand, ts (lower-case) for minimap2 read strand, HP for haplotype, RG for read group, etc.\" }), _jsx(TextField, { value: tag, onChange: event => {\n                        setTag(event.target.value);\n                    }, placeholder: \"Enter tag name\", error: tag.length === 2 && !validTag, helperText: tag.length === 2 && !validTag ? 'Not a valid tag' : '', autoComplete: \"off\", slotProps: {\n                        htmlInput: { maxLength: 2 },\n                    } }), _jsxs(DialogActions, { children: [_jsx(Button, { variant: \"contained\", color: \"primary\", onClick: () => {\n                                model.setColorScheme({ type: 'tag', tag });\n                                handleClose();\n                            }, disabled: !validTag, children: \"Submit\" }), _jsx(Button, { variant: \"contained\", color: \"secondary\", onClick: handleClose, children: \"Cancel\" })] })] }) }));\n});\nexport default ColorByTagDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
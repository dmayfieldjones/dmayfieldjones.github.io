{"version":3,"file":"static/chunks/2989.d213400266573435.js","mappings":"oMAKO,cACH,iBAAW,GAAO,aAAO,WAC7B,IACA,MAAyB,uBAAiB,IAC1C,qDACA,OAEA,eAAoB,GAAa,CAAE,eAAU,IAC7C,SAAoB,gDAAqD,EACzE,MACA,MAAkC,qBAAe,IACjD,CAAwB,qCAAkC,oDAC1D,sCACA,UACA,6BACA,YACA,eACA,CAAiB,EACG,aAAO,MAC3B,kBACA,mBACA,2BAA2D,eAAa,MAExE,CACA,CACA,SACA,iBACA,CAAiB,sBAAgB,KAAO,aAAO,KAC/B,gBAAU,mBAAsB,EAAE,IAElD,CACA,CAAK,EAAI,UAAa,EACtB","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-variants/esm/getMultiVariantFeaturesAutorun.js"],"sourcesContent":["import { SimpleFeature, getContainingView, getSession, } from '@jbrowse/core/util';\nimport { isAbortException } from '@jbrowse/core/util/aborting';\nimport { getRpcSessionId } from '@jbrowse/core/util/tracks';\nimport { autorun } from 'mobx';\nimport { addDisposer, isAlive } from 'mobx-state-tree';\nexport function getMultiVariantFeaturesAutorun(self) {\n    addDisposer(self, autorun(async () => {\n        try {\n            const view = getContainingView(self);\n            if (!view.initialized || !self.statsReadyAndRegionNotTooLarge) {\n                return;\n            }\n            const { rpcManager } = getSession(self);\n            const { sources, minorAlleleFrequencyFilter, adapterConfig } = self;\n            if (sources) {\n                const sessionId = getRpcSessionId(self);\n                const { sampleInfo, hasPhased, features } = (await rpcManager.call(sessionId, 'MultiVariantGetSimplifiedFeatures', {\n                    regions: view.dynamicBlocks.contentBlocks,\n                    sources,\n                    minorAlleleFrequencyFilter,\n                    sessionId,\n                    adapterConfig,\n                }));\n                if (isAlive(self)) {\n                    self.setHasPhased(hasPhased);\n                    self.setSampleInfo(sampleInfo);\n                    self.setFeatures(features.map(f => new SimpleFeature(f)));\n                }\n            }\n        }\n        catch (e) {\n            console.error(e);\n            if (!isAbortException(e) && isAlive(self)) {\n                getSession(self).notifyError(`${e}`, e);\n            }\n        }\n    }, { delay: 1000 }));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
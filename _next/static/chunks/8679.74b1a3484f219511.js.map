{"version":3,"file":"static/chunks/8679.74b1a3484f219511.js","mappings":"oJAEe,iBAA6C,aAAW,CACvE,0BACA,+BACA,yDACA,SAEA,0CAEA,MADA,OAA8B,kBAAY,yCAE1C,oBACA,SACA,sBACA,qBACA,SACA,cACA,mCACA,UACA,EAAS,EACT,sBACA,CACA,uBACA","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/NcbiSequenceReportAliasAdapter/NcbiSequenceReportAliasAdapter.js"],"sourcesContent":["import { BaseAdapter } from '@jbrowse/core/data_adapters/BaseAdapter';\nimport { openLocation } from '@jbrowse/core/util/io';\nexport default class NcbiSequenceReportAliasAdapter extends BaseAdapter {\n    async getRefNameAliases() {\n        const loc = this.getConf('location');\n        if (loc.uri === '' || loc.uri === '/path/to/my/sequence_report.tsv') {\n            return [];\n        }\n        const override = this.getConf('useUcscNameOverride');\n        const results = await openLocation(loc, this.pluginManager).readFile('utf8');\n        return results\n            .split(/\\n|\\r\\n|\\r/)\n            .slice(1)\n            .filter(f => !!f.trim())\n            .map(row => row.split('\\t'))\n            .map(cols => ({\n            refName: cols[12],\n            aliases: [cols[9], cols[6]].filter((f) => !!f),\n            override,\n        }))\n            .filter(f => !!f.refName);\n    }\n    async freeResources() { }\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
{"version":3,"file":"static/chunks/8340.c1ccb9b8a77b42a7.js","mappings":"2UAIA,MAAeA,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,CAAC,CAAaC,EAAAA,EAAAA,GAAAA,CAAIA,CAAC,CAAP,MAAe,CACrDC,EAAG,4HACL,GAAI,uBAAuB,EAAC,sGCH5B,MAAsB,cAAQ,gBAAa,EAAO,EAClD,OAAY,eAAmB,CAAC,GAAW,MACnC,eAAmB,CAAC,GAAgB,EAAI,qBAA2B,eAAmB,CAAC,GAAQ,EAAI,6BAC3G,uBACA,EAAmB,EAAG,EACd,eAAmB,CAAC,GAAc,qBAC1C,CAAC,uCCDD,6NACA,EAAkB,gBAAU,QAC5B,gBACA,iBACA,0BAAmC,kBAAsB,EACzD,aACA,YACA,CAAK,CACL,cACA,YACA,CAAK,CACL,mBACA,aACA,gBACA,CAAK,CACL,OACA,YACA,gBACA,CAAK,CACJ,GACD,EAAuB,cAAQ,gBAAa,EAAO,EACnD,YAAY,GAAU,IACtB,MAA4B,cAAQ,UACpC,MAAkC,cAAQ,GAC1C,EAA0B,iBAAW,QAmBrC,MAlBI,eAAS,MACb,MACA,IACA,4BACA,EACA,QAA0B,EAAc,EACxC,eACA,kDAEY,4BAAsB,GAAgC,OAAhC,GAA0B,YAAM,8CAClE,SACA,SACA,CACA,SACA,eAA4B,EAAG,EAC/B,IACA,CACA,CAAK,QACO,eAAmB,CAAC,UAAc,MAC9C,EAAgB,eAAmB,MAAQ,kBAA0B,IAAK,EAAM,QACxE,eAAmB,QAAU,8BAAsC,CAC/D,eAAmB,CAAC,GAAS,EAAI,uGAC7C,iBACA,CAAiB,QAAW,2BAAwC,YACpE,OACA,SACA,qBACyB,CACJ,CACrB,CAAmB,EACP,eAAmB,yBACnB,eAAmB,CAAC,GAAO,EAAI,MAAO,eAAmB,YACrE,6DACoB,eAAmB,YACvC,sCACA,4BAAwD,CACxC,eAAmB,CAAC,GAAU,EAAI,6BAClD,qFACA,GACA,eAEA,EAAuB,CACH,eAAmB,CAAC,GAAQ,UAChD,CAAC,0BCxEM,UACP,UAAY,uCAA+C,aAAa,EACxE,MAAsC,cAAQ,KAC9C,OAAY,eAAmB,QAAU,OAAS,gBAAmB,CAC7D,eAAmB,CAAC,GAAS,EAAI,6BACzC,KACA,CAAa,cACb,iBACA,CAAa,MAAqB,EAC1B,eAAmB,QAAU,OAAS,cAAiB,CACnD,eAAmB,CAAC,UAAc,EAAI,cAAgB,CAClD,eAAmB,CAAC,IAAW,CAAI,iBAAJ,IAC/C,IACA,EAAuB,IACvB,EACA,EAAoB,cAAQ,aAC5B,SAAY,GAAO,EACnB,OAAY,eAAmB,IAAc,wCAC7C,QACA,CAAS,iBACT,yBACA,YACA,EAAW,CACX,CAAC,ECxBc,cACf,eAAY,GAAa,EACzB,OAAY,eAAmB,CAAC,GAAS,EAAI,gBAAsB,eAAmB,CAAC,eAAa,EAAI,WAAwB,0BAChI,gBACA,eACA,CACA,EAAW,CACX,gBCLA,IAAM,EAAU,uNACV,EAAY,gBAAU,EAAb,CAAa,KAC5B,OACA,YACA,gBACA,CAAK,CACL,gBACA,UAAkB,GAClB,SATA,OAUA,wCACA,UACA,iBACA,mCACA,CAAK,CACL,mBACA,aACA,gBACA,CAAK,CACL,cACA,UAAkB,EAClB,CAAK,CACL,CAAC,EACD,EAAmB,cAAQ,WAAuB,OAAO,EACzD,YAAY,GAAU,IACtB,MAAoC,UADH,GACG,CAAQ,iCAC5C,MAA8B,cAAQ,GAWtC,MAVI,eAAS,MACb,IACA,UACA,oBACA,CACA,SACA,eAA4B,EAAG,EAC/B,IACA,CACA,CAAK,QACO,eAAmB,CAAC,UAAc,MAC9C,EAAgB,eAAmB,MAAQ,kBAA0B,IAAK,EAAM,QACxE,eAAmB,QAAU,8BAAsC,CAC/D,eAAmB,CAAC,GAAU,EAAI,gCAAsC,SACxE,eAAmB,CAAC,GAAS,EAAI,uGAC7C,iBACA,CAAiB,QAAW,2BAAwC,YACpE,OACA,SACA,qBACyB,CACJ,CACrB,CAAmB,GACnB,CAAC,ECnDD,EAAqB,cAAQ,gBAAa,EAAO,EACjD,SAA0B,cAAQ,UAWlC,MAVI,eAAS,MACb,MACA,2BACA,gBACA,0CAGA,QAEA,CAAK,QACO,eAAmB,CAAC,EAAsB,CAAI,mBAAJ,KAAI,iDAC1D,iBACA,EAAW,CACX,CAAC,uECXD,IAAM,GAAY,gBAAU,MAAb,CAAa,CAC5B,MACA,sBACA,CAAK,CACL,CAAC,EACD,GAAwB,cAAQ,gBAAa,EAAO,EACpD,YAAY,GAAU,KACtB,MAA8B,cADG,CACK,IACtC,OAAY,eAAmB,CAAC,UAAc,MACtC,eAAmB,CAAC,GAAU,cACtC,0BAA6C,eAAmB,CAAC,GAAI,EAAI,iCAAiD,CAC9G,eAAmB,CAAC,GAAU,EAAI,eAAoB,eAAmB,CAAC,GAAU,EAAI,aACpG,WACA,EAAuB,CACH,eAAmB,CAAC,GAAU,QAAU,EAChD,eAAmB,CAAC,GAAW,MAC3B,eAAmB,CAAC,EAAY,CAAI,MACpD,GDL2B,EAAC,CCK5B,EACA,MAFgD,EAGhD,UACA,CAAyB,CACzB,CAAuB,KACf,eAAmB,CAAC,GAAI,EAAI,2BAAuC,CAC/D,eAAmB,CAAC,GAAU,EAAI,2BAAgC,eAAmB,CAAC,GAAS,EAAI,wDAC/G,iBACA,CAAqB,YACrB,OACA,aAA2C,eAAmB,CAAC,IAAc,EAAI,eAAiB,CAClE,eAAmB,CAAC,GAAU,EAAI,6BAClE,WACA,KACA,EAAuC,CACH,eAAmB,CAAC,GAAO,QAC/D,CAAyB,CACzB,CAAuB,EAAG,GAClB,eAAmB,CAAC,GAAc,qBAC1C,CAAC,0CCvCD,OAA0B,cAAQ,gBAAa,EAAO,EACtD,SAA8B,cAAQ,KACtC,MAAgC,cAAQ,KACxC,OAAY,eAAmB,CAAC,UAAc,MAC9C,OAAoB,eAAmB,CAAC,GAAU,mBAC1C,eAAmB,CAAC,IAAI,EAAI,kBAAsB,CAC1D,mBAA0C,eAAmB,CAAC,KAAQ,EAAI,OAAQ,kBAAoB,GAAG,EAAI,oBAAyB,CACtH,eAAmB,CAAC,GAAS,EAAI,qBACjD,8BACA,CAAqB,YACrB,OACA,aAA2C,eAAmB,CAAC,IAAc,EAAI,eAAiB,CAClE,eAAmB,CAAC,GAAU,EAAI,aAClE,kBACA,EAAuC,CACH,eAAmB,CAAC,GAAU,QAClE,CAAyB,CACzB,CAAuB,IACvB,EAAsB,eAAmB,CAAC,KAAQ,EAAI,kBAAsB,CAC5D,eAAmB,CAAC,GAAS,EAAI,2CACjD,iBACA,CAAqB,YACrB,OACA,aAA2C,eAAmB,CAAC,IAAc,EAAI,eAAiB,CAClE,eAAmB,CAAC,UAAc,MAC9B,eAAmB,CAAC,IAAM,EAAI,2CAAiD,SAAW,iCAAmC,OAAU,eAC3K,MACA,SACA,KACA,EAA2C,OACP,eAAmB,CAAC,IAAM,EAAI,2CAAiD,SAAW,cAC9H,MACA,KACA,EAA2C,YAC3C,CAAyB,CACzB,CAAuB,QACX,eAAmB,CAAC,IAAM,EAAI,2CAAiD,SAAW,yBACtG,KACA,EAAmB,cACX,eAAmB,CAAC,GAAc,qBAC1C,CAAC,ECrCK,GAAY,gBAAU,QAC5B,GADe,EACf,CACA,sBACA,CAAK,CACJ,GACD,GAA6B,cAAQ,WAAa,OAAO,EACzD,YAAY,GAAU,KACtB,MAA8B,cAAQ,KACtC,OAAY,eAAmB,CAAC,UAAc,MACtC,eAAmB,CAAC,GAAU,cACtC,0BAA6C,eAAmB,CAAC,GAAI,EAAI,iCAAiD,CAC9G,eAAmB,CAAC,GAAU,EAAI,eAAoB,eAAmB,CAAC,GAAU,EAAI,aACpG,WACA,EAAuB,CACH,eAAmB,CAAC,GAAU,QAAU,EAChD,eAAmB,CAAC,GAAW,MAC3B,eAAmB,CAAC,GAAiB,CAAI,MACzD,YACA,QACA,4CAAqE,EAAI,EACzE,mBACA,sBACA,CAAyB,CACzB,kBACA,uBACA,CAAyB,CACzB,QACA,eACA,CACA,EAAuB,KACf,eAAmB,CAAC,GAAI,EAAI,2BAAuC,CAC/D,eAAmB,CAAC,GAAU,EAAI,2BAAgC,eAAmB,CAAC,GAAS,EAAI,wDAC/G,iBACA,CAAqB,YACrB,OACA,aAA2C,eAAmB,CAAC,IAAc,EAAI,eAAiB,CAClE,eAAmB,CAAC,GAAU,EAAI,6BAClE,YACA,KACA,EAAuC,CACH,eAAmB,CAAC,GAAO,QAC/D,CAAyB,CACzB,CAAuB,EAAG,GAClB,eAAmB,CAAC,GAAc,qBAC1C,CAAC,EClDM,GAA4B,gBAAU,QAC7C,OACA,eACA,0BACA,mBACA,CAAK,CACL,cACA,YACA,CAAK,CACL,gBACA,SACA,qCACA,eACA,wBACA,mBACA,CAAK,CACL,CAAC,ECCD,GAAqB,cAAQ,gBAAa,EAAO,EACjD,OAAY,eAAmB,CAAC,EAAsB,CAAI,mBAAJ,KAAI,yCAC1D,qBACA,EAAW,CACX,CAAC,EACD,GAAmB,cAAQ,gBAAa,EAAO,EAC/C,OAAY,eAAmB,CAAC,GAAS,EAAI,8EAC7C,qBACA,EAAW,CACX,CAAC,EACD,OAA2B,eAAmB,CAAC,GAAO,MAClD,eAAmB,SAAW,wYAA0Y,GAC5a,GAAsB,cAAQ,gBAAa,EAAO,EAClD,SAA0B,cAAQ,UAOlC,MANI,eAAS,MACb,4BACA,iBACA,QAEA,CAAK,QACO,eAAmB,CAAC,EAAsB,CAAI,mBAAJ,KAAI,iDAC1D,iBACA,EAAW,CACX,CAAC,EACD,GAAyB,cAAQ,gBAAa,eAAmB,EACjE,MAAc,wBAAkB,CAAC,gBAAU,KAC3C,EAAoB,sBAAgB,CAAC,sBAAgB,CAAC,gBAAU,0CAChE,OAAY,eAAmB,CAAC,EAAsB,CAAI,mBAAJ,CAAI,uDAC1D,qBACA,EAAW,UAAsB,eAAmB,CAAC,GAAQ,EAAI,cAAsB,KACvF,CAAC,EAOD,IACA,UACA,QACA,aAT4B,cAAQ,gBAAa,EAAO,EACxD,MACA,OAAY,eAAmB,CAAC,cAAY,EAAI,iCAChD,QACA,CAAS,2DAAmE,YAAM,kDAAyE,CAC3J,CAAC,EAKD,YHde,CGcE,EACjB,cHfgC,CCOjB,CDPkB,EGgBjC,QAFkC,EJfnB,CIiBA,EACf,IFVmC,EAAC,EEUxB,CACZ,GJnB8B,EAAC,EIgBS,CAGxC,GACA,IAH8B,ERjCf,CQoCJ,CACX,GAHwB,MRlCE,EAAC,GQsC3B,OAFsB,CVtDP,CUwDF,CACb,QAAY,CACZ,EV1D4B,EAAC,UUwDH,MACJ,CAEtB,EACA,GAAmB,INfM,CMeN,CNfO,OMeP,CAAQ,EAFQ,QAER,MAAa,eAAmB,EAC3D,YAAY,GAAU,KACtB,MAAY,GAAO,EACnB,GAF2C,CAE3C,WTIe,ESDf,MAQA,MTP6B,CSA7B,CTA8B,GSC9B,2CAAmD,EAAK,sBACxD,MAEA,SACA,8CAAsD,EAAK,GAE/C,eAAmB,CAAC,GAAK,EAAI,kBAA0B,CAC3D,eAAmB,QAAU,yBAAiC,CAC1D,eAAmB,IAAmB,oBAAoC,GAC9E,eAAmB,QAAU,2BAAmC,0BAAiC,eAAmB,CAAC,GAAU,EAAI,sFAAwG,wCAA+C,EAAG,cAAoB,eAAmB,UAAsB,eAAmB,CAAC,EAAwB,aAC9Y,CAAC,ECpFD,EDmF8Y,CCnFzX,cAAQ,2BAAa,+BAA4C,EACtF,IAAY,WAAU,KACtB,OAAY,OAD+B,QACZ,CAAC,GAAK,EAAI,kBAA0B,CAC3D,eAAmB,QAAU,yBAAiC,CAC1D,eAAmB,CAAC,GAAS,EAAI,0DAAsE,GAAU,gCAA8C,UAA8B,eAAmB,CAAC,GAAQ,EAAI,cAAsB,OAC/P,CAAC,ECEK,GAAY,gBAAU,QAC5B,EADe,GACf,CACA,6CACA,CAAK,CACL,uBACA,gBACA,oBACA,CAAK,CACL,WACA,oBAA6B,uBAA2B,EACnD,CACL,YACA,aACA,gBACA,CAAK,CACL,CAAC,EACD,GAAe,cAAQ,aACvB,YAAY,GAAU,KACtB,UAAY,+CAAoE,EAChF,GAAQ,+BAAyB,KACjC,YACA,qBACA,aACA,GAAyB,cAAQ,KAAY,EAAE,OAAa,EAC5D,GAAyB,cAAQ,KAAY,EAAE,IAAc,EAC7D,OAAuB,eAAmB,KAAW,6BAAkD,CACvG,CAAa,EAEb,MAAgC,0CAAoC,IACpE,OAAgB,eAAmB,CAAC,GAAS,EAAI,yCAAqD,CAC1F,eAAmB,CAAC,GAAgB,EAAI,WAAY,eAAmB,CAAC,GAAc,EAAI,iBAAyB,EAAG,CAClH,eAAmB,CAAC,GAAU,2BAClC,eAAmB,CAAC,GAAgB,EAAI,kCAA0C,CAC9F,SAA0C,eAAmB,CAAC,GAAY,CAAI,QDlCnD,EAAC,MCkCkD,GAAJ,QAAI,sBAC9E,yBACA,kBAA4D,oBAAwB,CAEpF,EAAuB,OACP,eAAmB,CAAC,GAAS,EAAI,uBAA+B,CAC5D,eAAmB,KAAW,uBAAyC,IAC3F,OACA,CAAa,4BAAuB,IACrB,eAAmB,CAAC,GAAU,CAAI,QFoCvB,GEpCuB,MAAJ,OAAI,EAAmD,EAGpG,IAEA,CAAC,EACD,GAAe,cAAQ,kBAAa,YAAoB,EACxD,MAAuB,gBAAU,eACjC,OAAY,eAAmB,CAAC,UAAc,qCAAoE,eAAmB,KAAW,8CAAuF,GACvO,CAAC,EAaD,GAZ4B,cAAQ,iBAAa,EAAQ,EACzD,YAAY,GAAU,EAWa,GAVnC,QAAY,GAAS,EACrB,EAAgB,SAFiB,UAEjB,CAAc,cAC9B,EAAiB,oBAAc,WAC/B,OAAY,eAAmB,CAAC,GAAS,EAAI,+CAA+D,CACpG,eAAmB,CAAC,GAAgB,EAAI,WAAY,eAAmB,CAAC,GAAc,EAAI,iBAAyB,EAAG,CAClH,eAAmB,CAAC,GAAU,MAC1B,eAAmB,CAAC,IAAa,CAAI,mBAAJ,WAAI,CAAiE,IAC9G,eAAmB,CAAC,GAAgB,EAAI,+DAAyE,CAC7G,eAAmB,KAAW,SAAgB,GAC1D,CAAC,yECtED,MAAeF,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,CAAC,CAAaC,EAAAA,EAAAA,GAAAA,CAAIA,CAAC,CAAP,MAAe,CACrDC,EAAG,0EACL,GAAI,SAAS,EAAC,wECFd,MAAeF,CAAAA,EAAAA,EAAAA,CAAAA,CAAaA,CAAcC,CAAAA,EAAAA,EAAAA,GAAAA,CAAIA,CAAC,CAAP,MAAe,CACrDC,EAAG,8CACL,GAAI,aAAa,EAAC,sBCJlB,IAcC,WAGD,SACA,KACA,KACA,KACA,KAQA,oBACA,mBACA,sBAGA,CACA,CAUA,uBAEA,QAGA,oCAGA,oCAGA,0BACA,oDAIA,eACA,CA0CA,kBAEA,kCACA,SAMA,IAHA,eAGA,MACA,WAEA,uBAhCA,cACA,oCACA,IAfA,IAeA,GAfA,EAeA,KAfA,EAeA,UAdA,iBAA8B,IAAI,kBAClC,eACA,CAAK,SAcL,OACA,YAGA,MACA,CAAK,CACL,EAsBA,IACA,CAEA,QACA,CAUA,kBACA,mBAEA,6BAGA,oBACA,OAIA,oBACA,UAIA,QACA,CACA,CAKA,oBACA,mBACA,4BAEA,wBACA,qBAEA,YACA,CACA,CAUA,kBACA,YACA,0BAEA,oBACA,CAkUA,OA3TA,WACA,OAQA,aACA,OAQA,aACA,OAQA,eACA,OASA,8BACA,gBACA,EAQA,gCACA,gBACA,EAOA,iCACA,uBACA,sBACA,MACA,CAGA,wBACA,yBACA,EAQA,iCACA,kBAGA,EAFA,kBAEA,GACA,MACA,EAKA,CAEA,WACA,YACA,cACA,eACA,gBACA,uBACA,0BACA,wBACA,yBACA,yBACA,0BACA,aACA,eACA,eACA,iBACA,iBAEA,kBACA,oBACA,wBACA,wBACA,wBAEA,mBACA,qBAEA,sBACA,oBACA,oBACA,oBACA,sBACA,0BAEA,cACA,eACA,eACA,gBACA,gBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,oBACA,qBACA,uBACA,yBACA,qBACA,oCACA,CAAG,EAKH,CACA,aACA,4BACA,yBACA,yBACA,8CACA,uBACA,gDACA,oGACA,yCACA,oCACA,2BACA,gIACA,6GACA,gBACA,uDACA,8BACA,iCACA,6BACA,2DACA,0CACA,iCACA,8BACA,gBACA,mBACA,eACA,qBACA,iCACA,CAAG,EAKH,CACA,WACA,gBACA,yEACA,0CACA,cACA,gGACA,6BACA,kCACA,6BACA,kGACA,+EACA,wCACA,6BACA,qGACA,kHACA,uGACA,kCACA,wCACA,+BACA,+BACA,sBACA,mBACA,gBACA,qBACA,mCACA,CAAG,EAKH,CAEA,YACA,SACA,SACA,MACA,WACA,UACA,OACA,YACA,QACA,YACA,QACA,QACA,QACA,QACA,UACA,SACA,OACA,OACA,UACA,QACA,WACA,MACA,WACA,cACA,QACA,SACA,WACA,YACA,MACA,SACA,YACA,YACA,YACA,WACA,WACA,MACA,UACA,UACA,WACA,WACA,eACA,SACA,SACA,YACA,WACA,YACA,cACA,QACA,UACA,QACA,SACA,aACA,YACA,WACA,OACA,QACA,OACA,QACA,QACA,MACA,QACA,OACA,OACA,YACA,OACA,WACA,SACA,SACA,YACA,WACA,OACA,WACA,OACA,SACA,WACA,SACA,SACA,WACA,SACA,WACA,UACA,QACA,QACA,SACA,UACA,iBACA,QACA,OACA,SACA,UACA,UACA,aACA,WACA,MACA,eAEA,gBACA,SACA,SACA,YACA,WACA,QACA,UACA,+BAEA,CACA,CAAC,CAhfD","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/RadioButtonUnchecked.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/BooleanEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/CallbackEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/ColorEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/ConfigurationTextField.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/JsonEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/NumberEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/NumberMapEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/StringArrayEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/StringArrayMapEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/useSlotEditorStyles.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/SlotEditor.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/TypeSelector.js","webpack://_N_E/./node_modules/@jbrowse/plugin-config/esm/ConfigurationEditorWidget/components/ConfigurationEditor.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/Delete.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/ExpandMore.js","webpack://_N_E/./node_modules/pluralize/pluralize.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8\"\n}), 'RadioButtonUnchecked');","import React from 'react';\nimport { Checkbox, FormControl, FormControlLabel, FormHelperText, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst BooleanEditor = observer(function ({ slot, }) {\n    return (React.createElement(FormControl, null,\n        React.createElement(FormControlLabel, { label: slot.name, control: React.createElement(Checkbox, { checked: slot.value, onChange: evt => {\n                    slot.set(evt.target.checked);\n                } }) }),\n        React.createElement(FormHelperText, null, slot.description)));\n});\nexport default BooleanEditor;\n","import React, { useEffect, useState } from 'react';\nimport { useDebounce } from '@jbrowse/core/util';\nimport { stringToJexlExpression } from '@jbrowse/core/util/jexlStrings';\nimport HelpIcon from '@mui/icons-material/Help';\nimport { IconButton, TextField, Tooltip } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { getEnv } from 'mobx-state-tree';\nimport { makeStyles } from 'tss-react/mui';\nconst fontFamily = 'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace';\nconst useStyles = makeStyles()(theme => ({\n    callbackEditor: {\n        marginTop: '16px',\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        width: '100%',\n        fontFamily,\n    },\n    textAreaFont: {\n        fontFamily,\n    },\n    callbackContainer: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    error: {\n        color: 'red',\n        fontSize: '0.8em',\n    },\n}));\nconst CallbackEditor = observer(function ({ slot, }) {\n    const { classes } = useStyles();\n    const [code, setCode] = useState(slot.value);\n    const [error, setCodeError] = useState();\n    const debouncedCode = useDebounce(code, 400);\n    useEffect(() => {\n        var _a;\n        try {\n            const jexlDebouncedCode = debouncedCode.startsWith('jexl:')\n                ? debouncedCode\n                : `jexl:${debouncedCode}`;\n            if (jexlDebouncedCode === 'jexl:') {\n                throw new Error('Empty jexl expression is not valid');\n            }\n            stringToJexlExpression(jexlDebouncedCode, (_a = getEnv(slot).pluginManager) === null || _a === void 0 ? void 0 : _a.jexl);\n            slot.set(jexlDebouncedCode);\n            setCodeError(undefined);\n        }\n        catch (e) {\n            console.error({ e });\n            setCodeError(e);\n        }\n    }, [debouncedCode, slot]);\n    return (React.createElement(React.Fragment, null,\n        error ? React.createElement(\"p\", { className: classes.error }, `${error}`) : null,\n        React.createElement(\"div\", { className: classes.callbackContainer },\n            React.createElement(TextField, { multiline: true, className: classes.callbackEditor, value: code.startsWith('jexl:') ? code.split('jexl:')[1] : code, onChange: event => {\n                    setCode(event.target.value);\n                }, style: { background: error ? '#fdd' : undefined }, slotProps: {\n                    input: {\n                        classes: {\n                            input: classes.textAreaFont,\n                        },\n                    },\n                } }),\n            React.createElement(\"p\", null, slot.description),\n            React.createElement(Tooltip, { title: React.createElement(\"div\", null,\n                    \"Callbacks are written in Jexl format. Click to learn more.\",\n                    React.createElement(\"br\", null),\n                    \" Names of available context items: \",\n                    slot.contextVariable), arrow: true },\n                React.createElement(IconButton, { color: \"primary\", onClick: () => {\n                        const newWindow = window.open('https://github.com/TomFrost/Jexl', '_blank', 'noopener,noreferrer');\n                        if (newWindow) {\n                            newWindow.opener = null;\n                        }\n                    } },\n                    React.createElement(HelpIcon, null))))));\n});\nexport default CallbackEditor;\n","import React, { useState } from 'react';\nimport ColorPicker from '@jbrowse/core/ui/ColorPicker';\nimport { TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nexport const ColorSlot = (props) => {\n    const { value = '#000', label = '', TextFieldProps = {}, onChange } = props;\n    const [displayed, setDisplayed] = useState(false);\n    return (React.createElement(\"div\", { style: { display: 'flex' } },\n        React.createElement(TextField, { value: value, label: label, onClick: () => {\n                setDisplayed(!displayed);\n            }, onChange: event => {\n                onChange(event.target.value);\n            }, ...TextFieldProps }),\n        React.createElement(\"div\", { style: { marginTop: 10 } },\n            React.createElement(React.Suspense, { fallback: null },\n                React.createElement(ColorPicker, { color: value, onChange: event => {\n                        onChange(event);\n                    } })))));\n};\nconst ColorEditor = observer(function (props) {\n    const { slot } = props;\n    return (React.createElement(ColorSlot, { label: slot.name, value: slot.value, onChange: color => {\n            slot.set(color);\n        }, TextFieldProps: {\n            helperText: slot.description,\n            fullWidth: true,\n        } }));\n});\nexport default ColorEditor;\n","import React from 'react';\nimport { SanitizedHTML } from '@jbrowse/core/ui';\nimport { TextField } from '@mui/material';\nexport default function ConfigurationTextField(props) {\n    const { helperText } = props;\n    return (React.createElement(TextField, { ...props, helperText: React.createElement(SanitizedHTML, { html: helperText || '' }), fullWidth: true, slotProps: {\n            formHelperText: {\n                component: 'div',\n            },\n        } }));\n}\n","import React, { useEffect, useState } from 'react';\nimport { InputLabel, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst fontSize = '12px';\nconst fontFamily = 'Consolas, \"Andale Mono WT\", \"Andale Mono\", \"Lucida Console\", \"Lucida Sans Typewriter\", \"DejaVu Sans Mono\", \"Bitstream Vera Sans Mono\", \"Liberation Mono\", \"Nimbus Mono L\", Monaco, \"Courier New\", Courier, monospace';\nconst useStyles = makeStyles()(theme => ({\n    error: {\n        color: 'red',\n        fontSize: '0.8em',\n    },\n    callbackEditor: {\n        fontFamily,\n        fontSize,\n        background: theme.palette.background.default,\n        width: 800,\n        marginTop: '16px',\n        border: '1px solid rgba(0,0,0,0.42)',\n    },\n    callbackContainer: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n    textAreaFont: {\n        fontFamily,\n    },\n}));\nconst JsonEditor = observer(function JsonEditor({ slot, }) {\n    const { classes } = useStyles();\n    const [contents, setContents] = useState(JSON.stringify(slot.value, null, 2));\n    const [error, setError] = useState();\n    useEffect(() => {\n        try {\n            setError(undefined);\n            slot.set(JSON.parse(contents));\n        }\n        catch (e) {\n            console.error({ e });\n            setError(e);\n        }\n    }, [contents, slot]);\n    return (React.createElement(React.Fragment, null,\n        error ? React.createElement(\"p\", { className: classes.error }, `${error}`) : null,\n        React.createElement(\"div\", { className: classes.callbackContainer },\n            React.createElement(InputLabel, { shrink: true, htmlFor: \"json-editor\" }, slot.name),\n            React.createElement(TextField, { id: \"json-editor\", className: classes.callbackEditor, value: contents, helperText: slot.description, multiline: true, onChange: event => {\n                    setContents(event.target.value);\n                }, style: { background: error ? '#fdd' : undefined }, slotProps: {\n                    input: {\n                        classes: {\n                            input: classes.textAreaFont,\n                        },\n                    },\n                } }))));\n});\nexport default JsonEditor;\n","import React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport ConfigurationTextField from './ConfigurationTextField';\nconst NumberEditor = observer(function ({ slot, }) {\n    const [val, setVal] = useState(slot.value);\n    useEffect(() => {\n        var _a;\n        const num = Number.parseFloat(val);\n        if (Number.isNaN(num)) {\n            (_a = slot.reset) === null || _a === void 0 ? void 0 : _a.call(slot);\n        }\n        else {\n            slot.set(num);\n        }\n    }, [slot, val]);\n    return (React.createElement(ConfigurationTextField, { label: slot.name, helperText: slot.description, value: val, type: \"number\", onChange: evt => {\n            setVal(evt.target.value);\n        } }));\n});\nexport default NumberEditor;\n","import React, { useState } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Card, CardContent, CardHeader, FormHelperText, IconButton, InputAdornment, InputLabel, TextField, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport NumberEditor from './NumberEditor';\nconst useStyles = makeStyles()(theme => ({\n    card: {\n        marginTop: theme.spacing(1),\n    },\n}));\nconst NumberMapEditor = observer(function ({ slot, }) {\n    const { classes } = useStyles();\n    const [value, setValue] = useState('');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(InputLabel, null, slot.name),\n        [...slot.value].map(([key, val]) => (React.createElement(Card, { raised: true, key: key, className: classes.card },\n            React.createElement(CardHeader, { title: key, action: React.createElement(IconButton, { onClick: () => {\n                        slot.remove(key);\n                    } },\n                    React.createElement(DeleteIcon, null)) }),\n            React.createElement(CardContent, null,\n                React.createElement(NumberEditor, { slot: {\n                        value: val,\n                        set: (val) => {\n                            slot.add(key, val);\n                        },\n                    } }))))),\n        React.createElement(Card, { raised: true, className: classes.card },\n            React.createElement(CardHeader, { disableTypography: true, title: React.createElement(TextField, { fullWidth: true, value: value, placeholder: \"add new\", onChange: event => {\n                        setValue(event.target.value);\n                    }, slotProps: {\n                        input: {\n                            endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                                React.createElement(IconButton, { disabled: value === '', onClick: () => {\n                                        slot.add(value, 0);\n                                        setValue('');\n                                    } },\n                                    React.createElement(AddIcon, null)))),\n                        },\n                    } }) })),\n        React.createElement(FormHelperText, null, slot.description)));\n});\nexport default NumberMapEditor;\n","import React, { useState } from 'react';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Button, FormHelperText, IconButton, InputAdornment, InputLabel, List, ListItem, TextField, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst StringArrayEditor = observer(function ({ slot, }) {\n    const [value, setValue] = useState('');\n    const [addNew, setAddNew] = useState(false);\n    return (React.createElement(React.Fragment, null,\n        slot.name ? React.createElement(InputLabel, null, slot.name) : null,\n        React.createElement(List, { disablePadding: true },\n            slot.value.map((val, idx) => (React.createElement(ListItem, { key: `${JSON.stringify(val)}-${idx}`, disableGutters: true },\n                React.createElement(TextField, { value: val, onChange: evt => {\n                        slot.setAtIndex(idx, evt.target.value);\n                    }, slotProps: {\n                        input: {\n                            endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                                React.createElement(IconButton, { onClick: () => {\n                                        slot.removeAtIndex(idx);\n                                    } },\n                                    React.createElement(DeleteIcon, null)))),\n                        },\n                    } })))),\n            addNew ? (React.createElement(ListItem, { disableGutters: true },\n                React.createElement(TextField, { value: value, placeholder: \"add new\", onChange: event => {\n                        setValue(event.target.value);\n                    }, slotProps: {\n                        input: {\n                            endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                                React.createElement(React.Fragment, null,\n                                    React.createElement(Button, { color: \"primary\", variant: \"contained\", style: { margin: 2 }, \"data-testid\": `stringArrayAdd-${slot.name}`, onClick: () => {\n                                            setAddNew(false);\n                                            slot.add(value);\n                                            setValue('');\n                                        } }, \"OK\"),\n                                    React.createElement(Button, { color: \"primary\", variant: \"contained\", style: { margin: 2 }, onClick: () => {\n                                            setAddNew(false);\n                                            setValue('');\n                                        } }, \"Cancel\")))),\n                        },\n                    } }))) : null,\n            React.createElement(Button, { color: \"primary\", variant: \"contained\", style: { margin: 4 }, disabled: addNew, onClick: () => {\n                    setAddNew(true);\n                } }, \"Add item\")),\n        React.createElement(FormHelperText, null, slot.description)));\n});\nexport default StringArrayEditor;\n","import React, { useState } from 'react';\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Card, CardContent, CardHeader, FormHelperText, IconButton, InputAdornment, InputLabel, TextField, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nimport StringArrayEditor from './StringArrayEditor';\nconst useStyles = makeStyles()(theme => ({\n    card: {\n        marginTop: theme.spacing(1),\n    },\n}));\nconst StringArrayMapEditor = observer(function ({ slot, }) {\n    const { classes } = useStyles();\n    const [value, setValue] = useState('');\n    return (React.createElement(React.Fragment, null,\n        React.createElement(InputLabel, null, slot.name),\n        [...slot.value].map(([key, val]) => (React.createElement(Card, { raised: true, key: key, className: classes.card },\n            React.createElement(CardHeader, { title: key, action: React.createElement(IconButton, { onClick: () => {\n                        slot.remove(key);\n                    } },\n                    React.createElement(DeleteIcon, null)) }),\n            React.createElement(CardContent, null,\n                React.createElement(StringArrayEditor, { slot: {\n                        name: slot.name,\n                        value: val,\n                        description: `Values associated with entry ${key}`,\n                        setAtIndex: (idx, val) => {\n                            slot.setAtKeyIndex(key, idx, val);\n                        },\n                        removeAtIndex: (idx) => {\n                            slot.removeAtKeyIndex(key, idx);\n                        },\n                        add: (val) => {\n                            slot.addToKey(key, val);\n                        },\n                    } }))))),\n        React.createElement(Card, { raised: true, className: classes.card },\n            React.createElement(CardHeader, { disableTypography: true, title: React.createElement(TextField, { fullWidth: true, value: value, placeholder: \"add new\", onChange: event => {\n                        setValue(event.target.value);\n                    }, slotProps: {\n                        input: {\n                            endAdornment: (React.createElement(InputAdornment, { position: \"end\" },\n                                React.createElement(IconButton, { disabled: value === '', onClick: () => {\n                                        slot.add(value, []);\n                                        setValue('');\n                                    } },\n                                    React.createElement(AddIcon, null)))),\n                        },\n                    } }) })),\n        React.createElement(FormHelperText, null, slot.description)));\n});\nexport default StringArrayMapEditor;\n","import { makeStyles } from 'tss-react/mui';\nexport const useSlotEditorStyles = makeStyles()(theme => ({\n    paper: {\n        display: 'flex',\n        marginBottom: theme.spacing(2),\n        position: 'relative',\n    },\n    paperContent: {\n        width: '100%',\n    },\n    slotModeSwitch: {\n        width: 24,\n        background: theme.palette.secondary.light,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n}));\n","import React, { useEffect, useState } from 'react';\nimport { FileSelector } from '@jbrowse/core/ui';\nimport { getEnv } from '@jbrowse/core/util';\nimport { getSubType, getUnionSubTypes } from '@jbrowse/core/util/mst-reflection';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport { IconButton, MenuItem, Paper, SvgIcon, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { getPropertyMembers } from 'mobx-state-tree';\nimport BooleanEditor from './BooleanEditor';\nimport CallbackEditor from './CallbackEditor';\nimport ColorEditor from './ColorEditor';\nimport ConfigurationTextField from './ConfigurationTextField';\nimport JsonEditor from './JsonEditor';\nimport NumberEditor from './NumberEditor';\nimport NumberMapEditor from './NumberMapEditor';\nimport StringArrayEditor from './StringArrayEditor';\nimport StringArrayMapEditor from './StringArrayMapEditor';\nimport { useSlotEditorStyles } from './useSlotEditorStyles';\nconst StringEditor = observer(function ({ slot, }) {\n    return (React.createElement(ConfigurationTextField, { label: slot.name, helperText: slot.description, value: slot.value, onChange: evt => {\n            slot.set(evt.target.value);\n        } }));\n});\nconst TextEditor = observer(function ({ slot, }) {\n    return (React.createElement(TextField, { label: slot.name, helperText: slot.description, multiline: true, value: slot.value, onChange: evt => {\n            slot.set(evt.target.value);\n        } }));\n});\nconst SvgCheckbox = () => (React.createElement(SvgIcon, null,\n    React.createElement(\"path\", { d: \"M20.41,3C21.8,5.71 22.35,8.84 22,12C21.8,15.16 20.7,18.29 18.83,21L17.3,20C18.91,17.57 19.85,14.8 20,12C20.34,9.2 19.89,6.43 18.7,4L20.41,3M5.17,3L6.7,4C5.09,6.43 4.15,9.2 4,12C3.66,14.8 4.12,17.57 5.3,20L3.61,21C2.21,18.29 1.65,15.17 2,12C2.2,8.84 3.3,5.71 5.17,3M12.08,10.68L14.4,7.45H16.93L13.15,12.45L15.35,17.37H13.09L11.71,14L9.28,17.33H6.76L10.66,12.21L8.53,7.45H10.8L12.08,10.68Z\" })));\nconst IntegerEditor = observer(function ({ slot, }) {\n    const [val, setVal] = useState(slot.value);\n    useEffect(() => {\n        const num = Number.parseInt(val, 10);\n        if (!Number.isNaN(num)) {\n            slot.set(num);\n        }\n    }, [slot, val]);\n    return (React.createElement(ConfigurationTextField, { label: slot.name, helperText: slot.description, value: val, type: \"number\", onChange: evt => {\n            setVal(evt.target.value);\n        } }));\n});\nconst StringEnumEditor = observer(function ({ slot, slotSchema, }) {\n    const p = getPropertyMembers(getSubType(slotSchema));\n    const choices = getUnionSubTypes(getUnionSubTypes(getSubType(p.properties.value))[1]).map(t => t.value);\n    return (React.createElement(ConfigurationTextField, { value: slot.value, label: slot.name, select: true, helperText: slot.description, onChange: evt => {\n            slot.set(evt.target.value);\n        } }, choices.map(str => (React.createElement(MenuItem, { key: str, value: str }, str)))));\n});\nconst FileSelectorWrapper = observer(function ({ slot, }) {\n    var _a;\n    return (React.createElement(FileSelector, { location: slot.value, setLocation: location => {\n            slot.set(location);\n        }, name: slot.name, description: slot.description, rootModel: (_a = getEnv(slot).pluginManager) === null || _a === void 0 ? void 0 : _a.rootModel }));\n});\nconst valueComponents = {\n    string: StringEditor,\n    text: TextEditor,\n    fileLocation: FileSelectorWrapper,\n    stringArray: StringArrayEditor,\n    stringArrayMap: StringArrayMapEditor,\n    numberMap: NumberMapEditor,\n    number: NumberEditor,\n    integer: IntegerEditor,\n    color: ColorEditor,\n    stringEnum: StringEnumEditor,\n    boolean: BooleanEditor,\n    frozen: JsonEditor,\n    configRelationships: JsonEditor,\n};\nconst SlotEditor = observer(function ({ slot, slotSchema, }) {\n    const { classes } = useSlotEditorStyles();\n    const { type } = slot;\n    let ValueComponent = slot.isCallback\n        ? CallbackEditor\n        :\n            valueComponents[type];\n    if (!ValueComponent) {\n        console.warn(`no slot editor defined for ${type}, editing as string`);\n        ValueComponent = StringEditor;\n    }\n    if (!(type in valueComponents)) {\n        console.warn(`SlotEditor needs to implement ${type}`);\n    }\n    return (React.createElement(Paper, { className: classes.paper },\n        React.createElement(\"div\", { className: classes.paperContent },\n            React.createElement(ValueComponent, { slot: slot, slotSchema: slotSchema })),\n        React.createElement(\"div\", { className: classes.slotModeSwitch }, slot.contextVariable.length ? (React.createElement(IconButton, { onClick: () => slot.isCallback ? slot.convertToValue() : slot.convertToCallback(), title: `convert to ${slot.isCallback ? 'regular value' : 'callback'}` }, slot.isCallback ? React.createElement(SvgCheckbox, null) : React.createElement(RadioButtonUncheckedIcon, null))) : null)));\n});\nexport default SlotEditor;\n","import React from 'react';\nimport { MenuItem, Paper, TextField } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { useSlotEditorStyles } from './useSlotEditorStyles';\nconst TypeSelector = observer(function ({ typeNameChoices, slot, slotName, onChange, }) {\n    const { classes } = useSlotEditorStyles();\n    return (React.createElement(Paper, { className: classes.paper },\n        React.createElement(\"div\", { className: classes.paperContent },\n            React.createElement(TextField, { value: slot.type, label: \"Type\", select: true, helperText: `Type of ${slotName} to use`, fullWidth: true, onChange: onChange }, typeNameChoices.map(str => (React.createElement(MenuItem, { key: str, value: str }, str)))))));\n});\nexport default TypeSelector;\n","import React from 'react';\nimport { getTypeNamesFromExplicitlyTypedUnion, isConfigurationSchemaType, isConfigurationSlotType, readConfObject, } from '@jbrowse/core/configuration';\nimport SanitizedHTML from '@jbrowse/core/ui/SanitizedHTML';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Accordion, AccordionDetails, AccordionSummary, FormGroup, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { getMembers } from 'mobx-state-tree';\nimport { singular } from 'pluralize';\nimport { makeStyles } from 'tss-react/mui';\nimport SlotEditor from './SlotEditor';\nimport TypeSelector from './TypeSelector';\nconst useStyles = makeStyles()(theme => ({\n    icon: {\n        color: theme.palette.tertiary.contrastText || '#fff',\n    },\n    expansionPanelDetails: {\n        display: 'block',\n        padding: theme.spacing(1),\n    },\n    accordion: {\n        border: `1px solid ${theme.palette.text.primary}`,\n    },\n    noOverflow: {\n        width: '100%',\n        overflowX: 'auto',\n    },\n}));\nconst Member = observer(function (props) {\n    const { classes } = useStyles();\n    const { slotName, slotSchema, schema, slot = schema[slotName], path = [], } = props;\n    if (isConfigurationSchemaType(slotSchema)) {\n        if (slot.length) {\n            return slot.map((subslot, slotIndex) => {\n                const key = subslot.type\n                    ? `${singular(slotName)} ${subslot.type}`\n                    : `${singular(slotName)} ${slotIndex + 1}`;\n                return React.createElement(Member, { key: key, ...props, slot: subslot, slotName: key });\n            });\n        }\n        const typeNameChoices = getTypeNamesFromExplicitlyTypedUnion(slotSchema);\n        return (React.createElement(Accordion, { defaultExpanded: true, className: classes.accordion },\n            React.createElement(AccordionSummary, { expandIcon: React.createElement(ExpandMoreIcon, { className: classes.icon }) },\n                React.createElement(Typography, null, [...path, slotName].join('➔'))),\n            React.createElement(AccordionDetails, { className: classes.expansionPanelDetails },\n                typeNameChoices.length ? (React.createElement(TypeSelector, { typeNameChoices: typeNameChoices, slotName: slotName, slot: slot, onChange: evt => {\n                        if (evt.target.value !== slot.type) {\n                            schema.setSubschema(slotName, { type: evt.target.value });\n                        }\n                    } })) : null,\n                React.createElement(FormGroup, { className: classes.noOverflow },\n                    React.createElement(Schema, { schema: slot, path: [...path, slotName] })))));\n    }\n    else if (isConfigurationSlotType(slotSchema)) {\n        return React.createElement(SlotEditor, { key: slotName, slot: slot, slotSchema: slotSchema });\n    }\n    else {\n        return null;\n    }\n});\nconst Schema = observer(function ({ schema, path = [], }) {\n    const properties = getMembers(schema).properties;\n    return (React.createElement(React.Fragment, null, Object.entries(properties).map(([slotName, slotSchema]) => (React.createElement(Member, { key: slotName, slotName: slotName, slotSchema: slotSchema, path: path, schema: schema })))));\n});\nconst ConfigurationEditor = observer(function ({ model, }) {\n    const { classes } = useStyles();\n    const { target } = model;\n    const key = readConfObject(target, 'trackId');\n    const name = readConfObject(target, 'name');\n    return (React.createElement(Accordion, { key: key, defaultExpanded: true, className: classes.accordion },\n        React.createElement(AccordionSummary, { expandIcon: React.createElement(ExpandMoreIcon, { className: classes.icon }) },\n            React.createElement(Typography, null,\n                React.createElement(SanitizedHTML, { html: name !== null && name !== void 0 ? name : 'Configuration' }))),\n        React.createElement(AccordionDetails, { className: classes.expansionPanelDetails, \"data-testid\": \"configEditor\" },\n            React.createElement(Schema, { schema: target }))));\n});\nexport default ConfigurationEditor;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","/* global define */\n\n(function (root, pluralize) {\n  /* istanbul ignore else */\n  if (typeof require === 'function' && typeof exports === 'object' && typeof module === 'object') {\n    // Node.\n    module.exports = pluralize();\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD, registers as an anonymous module.\n    define(function () {\n      return pluralize();\n    });\n  } else {\n    // Browser global.\n    root.pluralize = pluralize();\n  }\n})(this, function () {\n  // Rule storage - pluralize and singularize need to be run sequentially,\n  // while other rules can be optimized using an object for instant lookups.\n  var pluralRules = [];\n  var singularRules = [];\n  var uncountables = {};\n  var irregularPlurals = {};\n  var irregularSingles = {};\n\n  /**\n   * Sanitize a pluralization rule to a usable regular expression.\n   *\n   * @param  {(RegExp|string)} rule\n   * @return {RegExp}\n   */\n  function sanitizeRule (rule) {\n    if (typeof rule === 'string') {\n      return new RegExp('^' + rule + '$', 'i');\n    }\n\n    return rule;\n  }\n\n  /**\n   * Pass in a word token to produce a function that can replicate the case on\n   * another word.\n   *\n   * @param  {string}   word\n   * @param  {string}   token\n   * @return {Function}\n   */\n  function restoreCase (word, token) {\n    // Tokens are an exact match.\n    if (word === token) return token;\n\n    // Lower cased words. E.g. \"hello\".\n    if (word === word.toLowerCase()) return token.toLowerCase();\n\n    // Upper cased words. E.g. \"WHISKY\".\n    if (word === word.toUpperCase()) return token.toUpperCase();\n\n    // Title cased words. E.g. \"Title\".\n    if (word[0] === word[0].toUpperCase()) {\n      return token.charAt(0).toUpperCase() + token.substr(1).toLowerCase();\n    }\n\n    // Lower cased words. E.g. \"test\".\n    return token.toLowerCase();\n  }\n\n  /**\n   * Interpolate a regexp string.\n   *\n   * @param  {string} str\n   * @param  {Array}  args\n   * @return {string}\n   */\n  function interpolate (str, args) {\n    return str.replace(/\\$(\\d{1,2})/g, function (match, index) {\n      return args[index] || '';\n    });\n  }\n\n  /**\n   * Replace a word using a rule.\n   *\n   * @param  {string} word\n   * @param  {Array}  rule\n   * @return {string}\n   */\n  function replace (word, rule) {\n    return word.replace(rule[0], function (match, index) {\n      var result = interpolate(rule[1], arguments);\n\n      if (match === '') {\n        return restoreCase(word[index - 1], result);\n      }\n\n      return restoreCase(match, result);\n    });\n  }\n\n  /**\n   * Sanitize a word by passing in the word and sanitization rules.\n   *\n   * @param  {string}   token\n   * @param  {string}   word\n   * @param  {Array}    rules\n   * @return {string}\n   */\n  function sanitizeWord (token, word, rules) {\n    // Empty string or doesn't need fixing.\n    if (!token.length || uncountables.hasOwnProperty(token)) {\n      return word;\n    }\n\n    var len = rules.length;\n\n    // Iterate over the sanitization rules and use the first one to match.\n    while (len--) {\n      var rule = rules[len];\n\n      if (rule[0].test(word)) return replace(word, rule);\n    }\n\n    return word;\n  }\n\n  /**\n   * Replace a word with the updated word.\n   *\n   * @param  {Object}   replaceMap\n   * @param  {Object}   keepMap\n   * @param  {Array}    rules\n   * @return {Function}\n   */\n  function replaceWord (replaceMap, keepMap, rules) {\n    return function (word) {\n      // Get the correct token and case restoration functions.\n      var token = word.toLowerCase();\n\n      // Check against the keep object map.\n      if (keepMap.hasOwnProperty(token)) {\n        return restoreCase(word, token);\n      }\n\n      // Check against the replacement map for a direct word replacement.\n      if (replaceMap.hasOwnProperty(token)) {\n        return restoreCase(word, replaceMap[token]);\n      }\n\n      // Run all the rules against the word.\n      return sanitizeWord(token, word, rules);\n    };\n  }\n\n  /**\n   * Check if a word is part of the map.\n   */\n  function checkWord (replaceMap, keepMap, rules, bool) {\n    return function (word) {\n      var token = word.toLowerCase();\n\n      if (keepMap.hasOwnProperty(token)) return true;\n      if (replaceMap.hasOwnProperty(token)) return false;\n\n      return sanitizeWord(token, token, rules) === token;\n    };\n  }\n\n  /**\n   * Pluralize or singularize a word based on the passed in count.\n   *\n   * @param  {string}  word      The word to pluralize\n   * @param  {number}  count     How many of the word exist\n   * @param  {boolean} inclusive Whether to prefix with the number (e.g. 3 ducks)\n   * @return {string}\n   */\n  function pluralize (word, count, inclusive) {\n    var pluralized = count === 1\n      ? pluralize.singular(word) : pluralize.plural(word);\n\n    return (inclusive ? count + ' ' : '') + pluralized;\n  }\n\n  /**\n   * Pluralize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.plural = replaceWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Check if a word is plural.\n   *\n   * @type {Function}\n   */\n  pluralize.isPlural = checkWord(\n    irregularSingles, irregularPlurals, pluralRules\n  );\n\n  /**\n   * Singularize a word.\n   *\n   * @type {Function}\n   */\n  pluralize.singular = replaceWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Check if a word is singular.\n   *\n   * @type {Function}\n   */\n  pluralize.isSingular = checkWord(\n    irregularPlurals, irregularSingles, singularRules\n  );\n\n  /**\n   * Add a pluralization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addPluralRule = function (rule, replacement) {\n    pluralRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add a singularization rule to the collection.\n   *\n   * @param {(string|RegExp)} rule\n   * @param {string}          replacement\n   */\n  pluralize.addSingularRule = function (rule, replacement) {\n    singularRules.push([sanitizeRule(rule), replacement]);\n  };\n\n  /**\n   * Add an uncountable word rule.\n   *\n   * @param {(string|RegExp)} word\n   */\n  pluralize.addUncountableRule = function (word) {\n    if (typeof word === 'string') {\n      uncountables[word.toLowerCase()] = true;\n      return;\n    }\n\n    // Set singular and plural references for the word.\n    pluralize.addPluralRule(word, '$0');\n    pluralize.addSingularRule(word, '$0');\n  };\n\n  /**\n   * Add an irregular word definition.\n   *\n   * @param {string} single\n   * @param {string} plural\n   */\n  pluralize.addIrregularRule = function (single, plural) {\n    plural = plural.toLowerCase();\n    single = single.toLowerCase();\n\n    irregularSingles[single] = plural;\n    irregularPlurals[plural] = single;\n  };\n\n  /**\n   * Irregular rules.\n   */\n  [\n    // Pronouns.\n    ['I', 'we'],\n    ['me', 'us'],\n    ['he', 'they'],\n    ['she', 'they'],\n    ['them', 'them'],\n    ['myself', 'ourselves'],\n    ['yourself', 'yourselves'],\n    ['itself', 'themselves'],\n    ['herself', 'themselves'],\n    ['himself', 'themselves'],\n    ['themself', 'themselves'],\n    ['is', 'are'],\n    ['was', 'were'],\n    ['has', 'have'],\n    ['this', 'these'],\n    ['that', 'those'],\n    // Words ending in with a consonant and `o`.\n    ['echo', 'echoes'],\n    ['dingo', 'dingoes'],\n    ['volcano', 'volcanoes'],\n    ['tornado', 'tornadoes'],\n    ['torpedo', 'torpedoes'],\n    // Ends with `us`.\n    ['genus', 'genera'],\n    ['viscus', 'viscera'],\n    // Ends with `ma`.\n    ['stigma', 'stigmata'],\n    ['stoma', 'stomata'],\n    ['dogma', 'dogmata'],\n    ['lemma', 'lemmata'],\n    ['schema', 'schemata'],\n    ['anathema', 'anathemata'],\n    // Other irregular rules.\n    ['ox', 'oxen'],\n    ['axe', 'axes'],\n    ['die', 'dice'],\n    ['yes', 'yeses'],\n    ['foot', 'feet'],\n    ['eave', 'eaves'],\n    ['goose', 'geese'],\n    ['tooth', 'teeth'],\n    ['quiz', 'quizzes'],\n    ['human', 'humans'],\n    ['proof', 'proofs'],\n    ['carve', 'carves'],\n    ['valve', 'valves'],\n    ['looey', 'looies'],\n    ['thief', 'thieves'],\n    ['groove', 'grooves'],\n    ['pickaxe', 'pickaxes'],\n    ['passerby', 'passersby']\n  ].forEach(function (rule) {\n    return pluralize.addIrregularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Pluralization rules.\n   */\n  [\n    [/s?$/i, 's'],\n    [/[^\\u0000-\\u007F]$/i, '$0'],\n    [/([^aeiou]ese)$/i, '$1'],\n    [/(ax|test)is$/i, '$1es'],\n    [/(alias|[^aou]us|t[lm]as|gas|ris)$/i, '$1es'],\n    [/(e[mn]u)s?$/i, '$1s'],\n    [/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i, '$1'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1i'],\n    [/(alumn|alg|vertebr)(?:a|ae)$/i, '$1ae'],\n    [/(seraph|cherub)(?:im)?$/i, '$1im'],\n    [/(her|at|gr)o$/i, '$1oes'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i, '$1a'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i, '$1a'],\n    [/sis$/i, 'ses'],\n    [/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i, '$1$2ves'],\n    [/([^aeiouy]|qu)y$/i, '$1ies'],\n    [/([^ch][ieo][ln])ey$/i, '$1ies'],\n    [/(x|ch|ss|sh|zz)$/i, '$1es'],\n    [/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i, '$1ices'],\n    [/\\b((?:tit)?m|l)(?:ice|ouse)$/i, '$1ice'],\n    [/(pe)(?:rson|ople)$/i, '$1ople'],\n    [/(child)(?:ren)?$/i, '$1ren'],\n    [/eaux$/i, '$0'],\n    [/m[ae]n$/i, 'men'],\n    ['thou', 'you']\n  ].forEach(function (rule) {\n    return pluralize.addPluralRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Singularization rules.\n   */\n  [\n    [/s$/i, ''],\n    [/(ss)$/i, '$1'],\n    [/(wi|kni|(?:after|half|high|low|mid|non|night|[^\\w]|^)li)ves$/i, '$1fe'],\n    [/(ar|(?:wo|[ae])l|[eo][ao])ves$/i, '$1f'],\n    [/ies$/i, 'y'],\n    [/\\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i, '$1ie'],\n    [/\\b(mon|smil)ies$/i, '$1ey'],\n    [/\\b((?:tit)?m|l)ice$/i, '$1ouse'],\n    [/(seraph|cherub)im$/i, '$1'],\n    [/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i, '$1'],\n    [/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i, '$1sis'],\n    [/(movie|twelve|abuse|e[mn]u)s$/i, '$1'],\n    [/(test)(?:is|es)$/i, '$1is'],\n    [/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i, '$1us'],\n    [/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i, '$1um'],\n    [/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i, '$1on'],\n    [/(alumn|alg|vertebr)ae$/i, '$1a'],\n    [/(cod|mur|sil|vert|ind)ices$/i, '$1ex'],\n    [/(matr|append)ices$/i, '$1ix'],\n    [/(pe)(rson|ople)$/i, '$1rson'],\n    [/(child)ren$/i, '$1'],\n    [/(eau)x?$/i, '$1'],\n    [/men$/i, 'man']\n  ].forEach(function (rule) {\n    return pluralize.addSingularRule(rule[0], rule[1]);\n  });\n\n  /**\n   * Uncountable rules.\n   */\n  [\n    // Singular words with no plurals.\n    'adulthood',\n    'advice',\n    'agenda',\n    'aid',\n    'aircraft',\n    'alcohol',\n    'ammo',\n    'analytics',\n    'anime',\n    'athletics',\n    'audio',\n    'bison',\n    'blood',\n    'bream',\n    'buffalo',\n    'butter',\n    'carp',\n    'cash',\n    'chassis',\n    'chess',\n    'clothing',\n    'cod',\n    'commerce',\n    'cooperation',\n    'corps',\n    'debris',\n    'diabetes',\n    'digestion',\n    'elk',\n    'energy',\n    'equipment',\n    'excretion',\n    'expertise',\n    'firmware',\n    'flounder',\n    'fun',\n    'gallows',\n    'garbage',\n    'graffiti',\n    'hardware',\n    'headquarters',\n    'health',\n    'herpes',\n    'highjinks',\n    'homework',\n    'housework',\n    'information',\n    'jeans',\n    'justice',\n    'kudos',\n    'labour',\n    'literature',\n    'machinery',\n    'mackerel',\n    'mail',\n    'media',\n    'mews',\n    'moose',\n    'music',\n    'mud',\n    'manga',\n    'news',\n    'only',\n    'personnel',\n    'pike',\n    'plankton',\n    'pliers',\n    'police',\n    'pollution',\n    'premises',\n    'rain',\n    'research',\n    'rice',\n    'salmon',\n    'scissors',\n    'series',\n    'sewage',\n    'shambles',\n    'shrimp',\n    'software',\n    'species',\n    'staff',\n    'swine',\n    'tennis',\n    'traffic',\n    'transportation',\n    'trout',\n    'tuna',\n    'wealth',\n    'welfare',\n    'whiting',\n    'wildebeest',\n    'wildlife',\n    'you',\n    /pok[eé]mon$/i,\n    // Regexes.\n    /[^aeiou]ese$/i, // \"chinese\", \"japanese\"\n    /deer$/i, // \"deer\", \"reindeer\"\n    /fish$/i, // \"fish\", \"blowfish\", \"angelfish\"\n    /measles$/i,\n    /o[iu]s$/i, // \"carnivorous\"\n    /pox$/i, // \"chickpox\", \"smallpox\"\n    /sheep$/i\n  ].forEach(pluralize.addUncountableRule);\n\n  return pluralize;\n});\n"],"names":["createSvgIcon","_jsx","d"],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]}
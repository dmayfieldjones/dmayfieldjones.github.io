{"version":3,"file":"static/chunks/3661.621f65ac9d6160db.js","mappings":"yMAGe,kBAAyB,mBAAuB,EAC/D,MAAkB,OAAQ,GAC1B,MAAY,SAAI,SAAW,0BAAgD,gBAAU,+BAAoC,CACzH,gBCEO,sBACP,KACA,OAAU,UAAI,oBACd,cAAY,iCAAoC,EAAU,MAAgB,EAC1E,EAAoB,gBAAU,IAC9B,yDACA,OAAY,qBAAwB,EAEpC,oCACA,oBAEA,OADA,MAAc,UAAI,gCAClB,OAAiB,4BAAyC,aAAgB,EAC1E,CAAK,GACL,cAAY,8BAAwC,EACpD,EAAgB,cAAQ,IACxB,MAAW,0BAAoB,CAAC,SAAI,CAAC,GAAa,EAAI,MAAO,wBAAkB,aAAmB,SAAI,IAAY,SAAU,UAAK,QAAU,yIAAiL,SAAI,CAAC,EAAa,CAAI,UAAJ,KAAI,QARlV,EAQkV,CAA4C,EAAG,UAAK,MAAQ,uBAAwB,EAAS,WAAW,EAAI,0BAA+C,SAAI,CAAC,GAAK,EAAI,gBAA4B,oBAA8B,EAAQ,KAAS,SAAI,CAAC,UAAQ,EAAI,WAAkB,MAAS,GAAI,EAAG,EAAG,EAC5nB,+FClBA,MAAkB,uBAAU,IAC5B,YACA,kBACA,eACA,eACA,wBACA,CAAK,CACJ,EAsBD,EAAwB,cAAQ,iBAAa,mBAAuB,EACpE,MAAkB,OAAQ,GAC1B,CAAY,YAA0B,EACtC,MACA,YAAY,kBAA2B,EACvC,EAAoB,sBAAgB,MACpC,EAAkB,sBAAgB,MAClC,UACA,sBAEA,MAA4B,0CAA+C,GAC3E,MAAY,UAAK,CAAC,UAAS,EAAI,UAAW,SAAI,IAAe,mCAF7D,QAE6D,oBAA2G,GAAa,2CAAkD,EAAG,SAAI,SAAW,GACzP,OACA,EACA,IACA,EACA,EACA,IACA,EACA,OACA,EACA,cAAgC,oBAAc,2EAAsF,GAAI,CACxI,CAAC,EACD,EAAmB,cAAQ,gBAAa,2DAA0D,EAClG,YAAY,GAAU,IACtB,EAAmB,sBAAgB,eACnC,EAGA,eACgB,UAAK,SAAW,sGAAuH,EAAO,WAAW,cAAQ,OAAe,MAAO,kBAAY,gBAA0B,SAAI,UAAY,cAAyB,GAAI,EAE1R,IACgC,cAAQ,+BACxC,IACoB,UAAK,SAAW,mGAAoH,EAAO,WAAW,cAAQ,IAAU,sBAAkC,SAAI,UAAY,cAAyB,GAAI,EAE3P,UAAK,SAAW,iGAAkH,EAAO,WAAW,cAAQ,QAAgB,sBAAkC,SAAI,UAAY,cAAyB,GAAI,EAE3Q,KAZA,IAaA,CAAC,EACD,EAAuB,cAAQ,iBAAa,mBAAuB,EACnE,MAAkB,OAAQ,GAC1B,UAAY,GAAW,EACvB,YAAY,kBAA2B,EAIvC,EADoB,gBAAU,IAC9B,oCACA,wCACA,KACA,IACA,EAAoB,qBAAe,8BACnC,CACA,SACA,8BAIA,yBAEA,MAAY,UAAK,CAAC,UAAS,EAAI,UAAW,SAAI,IAAe,iCAf7D,QAe6D,QAhB7D,QAgB6D,mBAAkH,EAAG,SAAI,SAAW,WAlFjM,SACA,WAEA,cAEA,oBACA,gBAGA,OACA,OACA,EACA,IACA,EACA,EACA,IARA,4CACA,OAUA,EACA,UACA,EA8DiM,wDAA6G,GAAI,CAClT,CAAC,EAID,EAHc,cAAQ,cAGP,GAHoB,IAGd,IAHc,EAAe,EAClD,uBAAkC,SAAI,IAAoB,gCAAkD,CAAE,uBAAiB,uBAA+B,SAAI,IAAmB,gCAAkD,CAAE,uBAAiB,WAC1P,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/svgcomponents/SVGBackground.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/svgcomponents/SVGCircularView.js","webpack://_N_E/./node_modules/@jbrowse/plugin-circular-view/esm/CircularView/components/Ruler.js"],"sourcesContent":["import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { stripAlpha } from '@jbrowse/core/util';\nimport { useTheme } from '@mui/material';\nexport default function SVGBackground({ width, height, shift, }) {\n    const theme = useTheme();\n    return (_jsx(\"rect\", { width: width + shift * 2, height: height, fill: stripAlpha(theme.palette.background.default) }));\n}\n","import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from 'react';\nimport { createJBrowseTheme } from '@jbrowse/core/ui';\nimport { getSession, radToDeg, renderToStaticMarkup } from '@jbrowse/core/util';\nimport { ThemeProvider } from '@mui/material';\nimport { when } from 'mobx';\nimport SVGBackground from './SVGBackground';\nimport Ruler from '../components/Ruler';\nexport async function renderToSvg(model, opts) {\n    var _a;\n    await when(() => model.initialized);\n    const { themeName = 'default', Wrapper = ({ children }) => children } = opts;\n    const session = getSession(model);\n    const theme = (_a = session.allThemes) === null || _a === void 0 ? void 0 : _a.call(session)[themeName];\n    const { width, tracks, height } = model;\n    const shift = 50;\n    const displayResults = await Promise.all(tracks.map(async (track) => {\n        const display = track.displays[0];\n        await when(() => (display.ready !== undefined ? display.ready : true));\n        return { track, result: await display.renderSvg({ ...opts, theme }) };\n    }));\n    const { staticSlices, offsetRadians, centerXY } = model;\n    const deg = radToDeg(offsetRadians);\n    return renderToStaticMarkup(_jsx(ThemeProvider, { theme: createJBrowseTheme(theme), children: _jsx(Wrapper, { children: _jsxs(\"svg\", { width: width, height: height, xmlns: \"http://www.w3.org/2000/svg\", xmlnsXlink: \"http://www.w3.org/1999/xlink\", viewBox: [0, 0, width + shift * 2, height].toString(), children: [_jsx(SVGBackground, { width: width, height: height, shift: shift }), _jsxs(\"g\", { transform: `translate(${centerXY}) rotate(${deg})`, children: [staticSlices.map((slice, i) => (_jsx(Ruler, { model: model, slice: slice }, i))), displayResults.map(({ result }, i) => (_jsx(Fragment, { children: result }, i)))] })] }) }) }));\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { assembleLocString, getFillProps, getSession, getStrokeProps, polarToCartesian, radToDeg, } from '@jbrowse/core/util';\nimport { makeContrasting } from '@jbrowse/core/util/color';\nimport { useTheme } from '@mui/material/styles';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    rulerLabel: {\n        fontSize: '0.8rem',\n        fontWeight: 500,\n        lineHeight: 1.6,\n        letterSpacing: '0.0075em',\n    },\n});\nfunction sliceArcPath(slice, radiusPx, startBase, endBase) {\n    if (slice.flipped) {\n        ;\n        [startBase, endBase] = [endBase, startBase];\n    }\n    const startXY = slice.bpToXY(startBase, radiusPx);\n    const endXY = slice.bpToXY(endBase, radiusPx);\n    const largeArc = Math.abs(endBase - startBase) / slice.bpPerRadian > Math.PI ? '1' : '0';\n    const sweepFlag = '1';\n    return [\n        'M',\n        ...startXY,\n        'A',\n        radiusPx,\n        radiusPx,\n        '0',\n        largeArc,\n        sweepFlag,\n        ...endXY,\n    ].join(' ');\n}\nconst ElisionRulerArc = observer(function ({ model, slice, region, }) {\n    const theme = useTheme();\n    const { radiusPx: modelRadiusPx } = model;\n    const radiusPx = modelRadiusPx + 1;\n    const { endRadians, startRadians } = slice;\n    const startXY = polarToCartesian(radiusPx, startRadians);\n    const endXY = polarToCartesian(radiusPx, endRadians);\n    const widthPx = (endRadians - startRadians) * radiusPx;\n    const largeArc = endRadians - startRadians > Math.PI ? '1' : '0';\n    const centerRadians = (endRadians + startRadians) / 2;\n    const regionCount = `[${Number(region.regions.length).toLocaleString()}]`;\n    return (_jsxs(_Fragment, { children: [_jsx(RulerLabel, { text: regionCount, view: model, maxWidthPx: widthPx, radians: centerRadians, radiusPx: radiusPx, title: `${regionCount} more regions`, color: theme.palette.text.primary }), _jsx(\"path\", { d: [\n                    'M',\n                    ...startXY,\n                    'A',\n                    radiusPx,\n                    radiusPx,\n                    '0',\n                    largeArc,\n                    '1',\n                    ...endXY,\n                ].join(' '), ...getStrokeProps(theme.palette.text.secondary), strokeWidth: 2, strokeDasharray: \"2,2\", fill: \"none\" })] }));\n});\nconst RulerLabel = observer(function ({ view, text, maxWidthPx, radians, radiusPx, title, color, }) {\n    const { classes } = useStyles();\n    const textXY = polarToCartesian(radiusPx + 5, radians);\n    if (!text) {\n        return null;\n    }\n    if (text.length * 6.5 < maxWidthPx) {\n        return (_jsxs(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"middle\", dominantBaseline: \"baseline\", transform: `translate(${textXY}) rotate(${radToDeg(radians) + 90})`, ...getFillProps(color), children: [text, _jsx(\"title\", { children: title || text })] }));\n    }\n    if (maxWidthPx > 4) {\n        const overallRotation = radToDeg(radians + view.offsetRadians - Math.PI / 2);\n        if (overallRotation >= 180) {\n            return (_jsxs(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"start\", dominantBaseline: \"middle\", transform: `translate(${textXY}) rotate(${radToDeg(radians)})`, fill: color, children: [text, _jsx(\"title\", { children: title || text })] }));\n        }\n        return (_jsxs(\"text\", { x: 0, y: 0, className: classes.rulerLabel, textAnchor: \"end\", dominantBaseline: \"middle\", transform: `translate(${textXY}) rotate(${radToDeg(radians) + 180})`, fill: color, children: [text, _jsx(\"title\", { children: title || text })] }));\n    }\n    return null;\n});\nconst RegionRulerArc = observer(function ({ model, slice, region, }) {\n    const theme = useTheme();\n    const { radiusPx } = model;\n    const { endRadians, startRadians } = slice;\n    const centerRadians = (endRadians + startRadians) / 2;\n    const widthPx = (endRadians - startRadians) * radiusPx;\n    const session = getSession(model);\n    const assembly = session.assemblyManager.get(region.assemblyName);\n    let color = assembly ? assembly.getRefNameColor(region.refName) : undefined;\n    if (color) {\n        try {\n            color = makeContrasting(color, theme.palette.background.paper);\n        }\n        catch (error) {\n            color = theme.palette.text.primary;\n        }\n    }\n    else {\n        color = theme.palette.text.primary;\n    }\n    return (_jsxs(_Fragment, { children: [_jsx(RulerLabel, { text: region.refName, view: model, maxWidthPx: widthPx, radians: centerRadians, radiusPx: radiusPx, color: color }), _jsx(\"path\", { d: sliceArcPath(slice, radiusPx + 1, region.start, region.end), stroke: color, strokeWidth: 2, fill: \"none\" })] }));\n});\nconst Ruler = observer(function ({ model, slice, }) {\n    return slice.region.elided ? (_jsx(ElisionRulerArc, { model: model, region: slice.region, slice: slice }, assembleLocString(slice.region.regions[0]))) : (_jsx(RegionRulerArc, { region: slice.region, model: model, slice: slice }, assembleLocString(slice.region)));\n});\nexport default Ruler;\n"],"names":[],"sourceRoot":"","ignoreList":[0,1,2]}
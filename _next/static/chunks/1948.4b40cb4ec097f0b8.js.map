{"version":3,"file":"static/chunks/1948.4b40cb4ec097f0b8.js","mappings":"oLAEO,oBACP,YAOA,EANA,QAAsB,OAAa,WACnC,iBACA,eACA,kBACA,gBACA,mBAEA,IACA,IACA,IACA,IAEA,GADA,4CACA,yCACA,oBACA,qFACA,sFACA,IACA,MACA,KACA,MACA,kCACA,gCACA,gCACA,uBACA,QACA,UACA,OAEA,OACA,IACA,UACA,QACA,MACA,SACA,eACA,CAAS,CACT,cACA,qBACA,MACA,QACA,eACA,CACA,CACA,CCzCA,MAAmB,UAAI,KAAO,+BAA0B,EACxD,EAAY,cAAQ,iBAAa,oCAAsC,EACvE,QACA,SAA0C,cAAQ,KAClD,CAAY,UAAS,EACrB,IAAY,QAAS,EAAiB,KACtC,EAAgB,MADsB,KACtB,CAAM,OACtB,EAAc,aAAO,oBAAmB,QAAc,EACtD,8CACA,8CACA,UACA,UACA,sBAAmC,mBAAyB,gCAC5D,sBAAmC,mBAAyB,gCAC5D,2BAEA,eADA,SAEA,gBACA,eACA,eAGA,cAEA,WAA6B,UAAK,CAAC,UAAS,EAAI,UAAW,SAAI,SAAW,OAJ1E,EAIkF,CAAM,MAAM,GAAM,EAAE,EAAM,IAH5G,EAGgH,CAAO,EAAE,EAAM,IAH/H,EAGmI,CAAO,YAAiB,oBAAc,gBADzK,EACyK,gBACzK,KACA,CAAqB,kBACrB,KACA,CAAqB,cACrB,kBACA,CAAqB,oCAAyC,kBAAuB,SAAI,SAAW,GAAG,oBAAc,gBAPrH,EAOqH,gBACrH,KACA,CAAqB,kBACrB,KACA,CAAqB,cACrB,kBACA,CAAqB,IAhBrB,EAgBqB,sCAAgE,uBAA+B,SAAI,SAAW,GAAG,oBAAc,gBAbpJ,EAaoJ,gBACpJ,KACA,CAAqB,kBACrB,KACA,CAAqB,cACrB,kBACA,CAAqB,IArBrB,EAqBqB,GArBrB,EAqBqB,iCAAkE,SAA0B,SAAI,CAAC,UAAQ,EAAI,uBAA0B,SAAI,IAAe,SAAU,SDAlL,ECA6L,CDA7L,EACP,MACA,OAAY,QAAS,OACrB,OACA,cACA,YACQ,uBAAiB,IACjB,uBAAiB,IACzB,qDACA,EACA,CACA,eACA,aACA,ECboM,KAAgB,EAAG,QAAY,MACnO,CACA,WACA,CAAC,EACD,EAAgB,cAAQ,iBAAa,yBAA6B,EAClE,WAAY,GAAS,EAErB,aADiB,uBAAiB,IAClC,4BACA,WAAqC,SAAI,QAAU,4BAAkD,CACrG,CAAC,EAaD,EAZa,cAAQ,GAYN,IAAI,EAAC,CAZC,OAAa,cAAmB,EACrD,MAAiB,uBAAiB,IAClC,EAAoB,gBAAU,IAC9B,iBAAY,GAAkB,EAC9B,UAAY,GAAW,EACvB,4BACA,SAAuB,SAAI,IAAY,sDACvC,MACA,mBACA,yCAAqF,SAAI,IAAQ,oDAAoF,IAAK,OAAO,GAAG,EAAE,mBAAwC,SAAI,IAAQ,8CAA4E,QACtU,CAAS,EAAG,MACZ,CAAC,oFClEM,sBACP,MAAU,UAAI,iBAEd,MADiB,uBAAiB,IAClC,2BACA,WACA,SAA0B,KAAS,EACnC,MAAY,UAAK,CAAC,UAAS,EAAI,UAAW,SAAI,SAAW,SAAU,SAAI,aAAe,cAAsB,SAAI,SAAW,yBAA0C,EAAG,EAAG,EAAG,SAAI,MAAQ,iBAAkB,EAAO,YAAc,SAAI,CAAC,GAAI,EAAI,qBAA+B,EAAG,GAAI,CACpR","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-arc/esm/LinearPairedArcDisplay/components/util.js","webpack://_N_E/./node_modules/@jbrowse/plugin-arc/esm/LinearPairedArcDisplay/components/Arcs.js","webpack://_N_E/./node_modules/@jbrowse/plugin-arc/esm/LinearPairedArcDisplay/renderSvg.js"],"sourcesContent":["import { parseBreakend } from '@gmod/vcf';\nimport { assembleLocString } from '@jbrowse/core/util';\nexport function makeFeaturePair(feature, alt) {\n    var _a, _b, _c, _d;\n    const bnd = alt ? parseBreakend(alt) : undefined;\n    const start = feature.get('start');\n    let end = feature.get('end');\n    const strand = feature.get('strand');\n    const mate = feature.get('mate');\n    const refName = feature.get('refName');\n    let mateRefName;\n    let mateEnd = 0;\n    let mateStart = 0;\n    let joinDirection = 0;\n    let mateDirection = 0;\n    const symbolicAlleles = ['<TRA', '<DEL', '<INV', '<INS', '<DUP', '<CNV'];\n    if (symbolicAlleles.some(a => alt === null || alt === void 0 ? void 0 : alt.startsWith(a))) {\n        const info = feature.get('INFO');\n        const e = (_b = (_a = info === null || info === void 0 ? void 0 : info.END) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : end;\n        mateRefName = (_d = (_c = info === null || info === void 0 ? void 0 : info.CHR2) === null || _c === void 0 ? void 0 : _c[0]) !== null && _d !== void 0 ? _d : refName;\n        mateEnd = e;\n        mateStart = e - 1;\n        end = start + 1;\n    }\n    else if (bnd === null || bnd === void 0 ? void 0 : bnd.MatePosition) {\n        const matePosition = bnd.MatePosition.split(':');\n        mateDirection = bnd.MateDirection === 'left' ? 1 : -1;\n        joinDirection = bnd.Join === 'left' ? -1 : 1;\n        mateEnd = +matePosition[1];\n        mateStart = +matePosition[1] - 1;\n        mateRefName = matePosition[0];\n    }\n    return {\n        k1: {\n            refName,\n            start,\n            end,\n            strand,\n            mateDirection,\n        },\n        k2: mate !== null && mate !== void 0 ? mate : {\n            refName: mateRefName || 'unknown',\n            end: mateEnd,\n            start: mateStart,\n            mateDirection: joinDirection,\n        },\n    };\n}\nexport function makeSummary(feature, alt) {\n    var _a;\n    const { k1, k2 } = makeFeaturePair(feature, alt);\n    return [\n        feature.get('name'),\n        feature.get('id'),\n        assembleLocString(k1),\n        assembleLocString(k2),\n        (_a = feature.get('INFO')) === null || _a === void 0 ? void 0 : _a.SVTYPE,\n        alt,\n    ]\n        .filter(f => !!f)\n        .join('<br/>');\n}\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Suspense, lazy, useRef, useState } from 'react';\nimport { getConf } from '@jbrowse/core/configuration';\nimport { getContainingView, getSession, getStrokeProps, } from '@jbrowse/core/util';\nimport { observer } from 'mobx-react';\nimport { makeFeaturePair, makeSummary } from './util';\nconst ArcTooltip = lazy(() => import('../../ArcTooltip'));\nconst Arc = observer(function ({ model, feature, alt, assembly, view, }) {\n    var _a, _b;\n    const [mouseOvered, setMouseOvered] = useState(false);\n    const { height } = model;\n    const { k1, k2 } = makeFeaturePair(feature, alt);\n    const ref = useRef(null);\n    const c = getConf(model, 'color', { feature, alt });\n    const ra1 = assembly.getCanonicalRefName(k1.refName) || k1.refName;\n    const ra2 = assembly.getCanonicalRefName(k2.refName) || k2.refName;\n    const p1 = k1.start;\n    const p2 = k2.start;\n    const r1 = (_a = view.bpToPx({ refName: ra1, coord: p1 })) === null || _a === void 0 ? void 0 : _a.offsetPx;\n    const r2 = (_b = view.bpToPx({ refName: ra2, coord: p2 })) === null || _b === void 0 ? void 0 : _b.offsetPx;\n    if (r1 !== undefined && r2 !== undefined) {\n        const radius = (r2 - r1) / 2;\n        const absrad = Math.abs(radius);\n        const destY = Math.min(height, absrad);\n        const p1 = r1 - view.offsetPx;\n        const p2 = r2 - view.offsetPx;\n        const left = p1;\n        const right = p2;\n        const col = mouseOvered ? 'black' : c;\n        const sw = 3;\n        return absrad > 1 ? (_jsxs(_Fragment, { children: [_jsx(\"path\", { d: `M ${left} 0 C ${left} ${destY}, ${right} ${destY}, ${right} 0`, ref: ref, ...getStrokeProps(col), strokeWidth: sw, onMouseOut: () => {\n                        setMouseOvered(false);\n                    }, onMouseOver: () => {\n                        setMouseOvered(true);\n                    }, onClick: () => {\n                        model.selectFeature(feature);\n                    }, fill: \"none\", pointerEvents: \"stroke\" }), k1.mateDirection ? (_jsx(\"line\", { ...getStrokeProps(col), strokeWidth: sw, onMouseOut: () => {\n                        setMouseOvered(false);\n                    }, onMouseOver: () => {\n                        setMouseOvered(true);\n                    }, onClick: () => {\n                        model.selectFeature(feature);\n                    }, x1: left, x2: left + k1.mateDirection * 20, y1: 1.5, y2: 1.5 })) : null, k2.mateDirection ? (_jsx(\"line\", { ...getStrokeProps(col), strokeWidth: sw, onMouseOut: () => {\n                        setMouseOvered(false);\n                    }, onMouseOver: () => {\n                        setMouseOvered(true);\n                    }, onClick: () => {\n                        model.selectFeature(feature);\n                    }, x1: right, x2: right + k2.mateDirection * 20, y1: 1.5, y2: 1.5 })) : null, mouseOvered ? (_jsx(Suspense, { fallback: null, children: _jsx(ArcTooltip, { contents: makeSummary(feature, alt) }) })) : null] })) : null;\n    }\n    return null;\n});\nconst Wrapper = observer(function ({ model, exportSVG, children, }) {\n    const { height } = model;\n    const view = getContainingView(model);\n    const width = Math.round(view.dynamicBlocks.totalWidthPx);\n    return exportSVG ? (children) : (_jsx(\"svg\", { width: width, height: height, children: children }));\n});\nconst Arcs = observer(function ({ model, exportSVG, }) {\n    const view = getContainingView(model);\n    const session = getSession(model);\n    const { assemblyManager } = session;\n    const { features } = model;\n    const assembly = assemblyManager.get(view.assemblyNames[0]);\n    return assembly ? (_jsx(Wrapper, { model: model, exportSVG: exportSVG, children: features === null || features === void 0 ? void 0 : features.map(f => {\n            var _a;\n            const alts = f.get('ALT');\n            return ((_a = alts === null || alts === void 0 ? void 0 : alts.map(a => (_jsx(Arc, { session: session, feature: f, alt: a, view: view, model: model, assembly: assembly }, `${f.id()}-${a}`)))) !== null && _a !== void 0 ? _a : (_jsx(Arc, { session: session, feature: f, view: view, model: model, assembly: assembly }, f.id())));\n        }) })) : null;\n});\nexport default Arcs;\n","import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { getContainingView, when } from '@jbrowse/core/util';\nimport Arcs from './components/Arcs';\nexport async function renderArcSvg(model, _opts) {\n    await when(() => !model.loading);\n    const view = getContainingView(model);\n    const width = view.dynamicBlocks.totalWidthPx;\n    const height = model.height;\n    const clipid = `arc-${model.id}`;\n    return (_jsxs(_Fragment, { children: [_jsx(\"defs\", { children: _jsx(\"clipPath\", { id: clipid, children: _jsx(\"rect\", { x: 0, y: 0, width: width, height: height }) }) }), _jsx(\"g\", { clipPath: `url(#${clipid})`, children: _jsx(Arcs, { model: model, exportSVG: true }) })] }));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0,1,2]}
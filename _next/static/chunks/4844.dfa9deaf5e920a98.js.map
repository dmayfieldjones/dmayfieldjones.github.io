{"version":3,"file":"static/chunks/4844.dfa9deaf5e920a98.js","mappings":"8LAGA,MAAuC,UAAI,KAAO,8BAA0C,CAC5F,EAAwC,UAAI,KAAO,+BAA2C,EAC/E,kBAAmD,YAAiB,EACnF,MAAoB,gBAAU,IAC9B,GACA,oBACA,kBACA,cACA,UACA,iBAEA,GACA,YAAqB,KAAW,OAChC,mBACA,iBACA,iBACA,iBAEA,OAAY,eAAmB,YACvB,eAAmB,CAAC,GAAU,2BAC9B,eAAmB,WACf,eAAmB,WAC/B,UACA,IACgB,cAAQ,UACxB,OACA,UACA,IACgB,cAAQ,UACxB,IACgB,eAAmB,CAAC,GAAI,EAAI,qBAC5C,mBACA,kBACA,EACA,CACA,cACA,UACA,YAA6C,eAAa,EAAG,YAAiB,EAC9E,YACA,qDAC6B,CAC7B,CACA,EAAuB,iBACvB,IACgB,eAAmB,CAAC,GAAI,EAAI,qBAC5C,mBACA,kBACA,EACA,CACA,cACA,UACA,YAA6C,eAAa,EAAG,YAAiB,EAC9E,YACA,qDAC6B,CAC7B,CACA,EAAuB,mBACvB,CCxDe,cACf,UAAY,aAAiB,EAC7B,EAAoB,gBAAU,IAC9B,eAAY,GAAkB,YAAM,IACpC,KACA,IACA,wCACA,CACA,SACA,CACA,OAAY,eAAmB,CAAC,IAAQ,CAAI,cAAJ,gBAAI,CAAsC,GAA0B,eAAmB,CAAC,EAAuC,CAAI,kBAAgC,OAC3M","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/LaunchPairedEndBreakpointSplitViewPanel.js","webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/AlignmentsFeatureDetail/LinkedPairedAlignments.js"],"sourcesContent":["import React, { lazy } from 'react';\nimport { SimpleFeature, getSession, toLocale } from '@jbrowse/core/util';\nimport { Link, Typography } from '@mui/material';\nconst BreakendMultiLevelOptionDialog = lazy(() => import('./BreakendMultiLevelOptionDialog'));\nconst BreakendSingleLevelOptionDialog = lazy(() => import('./BreakendSingleLevelOptionDialog'));\nexport default function LaunchPairedEndBreakpointSplitViewPanel({ model, feature, }) {\n    const session = getSession(model);\n    const f1 = {\n        uniqueId: feature.uniqueId,\n        refName: feature.refName,\n        start: feature.start,\n        end: feature.end,\n        strand: feature.strand,\n    };\n    const f2 = {\n        uniqueId: `${feature.id}-mate`,\n        refName: feature.next_ref,\n        start: feature.next_pos,\n        end: feature.next_pos + 1,\n        strand: feature.strand,\n    };\n    return (React.createElement(\"div\", null,\n        React.createElement(Typography, null, \"Launch split view\"),\n        React.createElement(\"ul\", null,\n            React.createElement(\"li\", null,\n                f1.refName,\n                \":\",\n                toLocale(f1.start),\n                \" -> \",\n                f2.refName,\n                \":\",\n                toLocale(f2.start),\n                ' ',\n                React.createElement(Link, { href: \"#\", onClick: event => {\n                        event.preventDefault();\n                        session.queueDialog(handleClose => [\n                            BreakendMultiLevelOptionDialog,\n                            {\n                                handleClose,\n                                session,\n                                feature: new SimpleFeature({ ...f1, mate: f2 }),\n                                view: model.view,\n                                assemblyName: model.view.displayedRegions[0].assemblyName,\n                            },\n                        ]);\n                    } }, \"(top/bottom)\"),\n                ' ',\n                React.createElement(Link, { href: \"#\", onClick: event => {\n                        event.preventDefault();\n                        session.queueDialog(handleClose => [\n                            BreakendSingleLevelOptionDialog,\n                            {\n                                handleClose,\n                                session,\n                                feature: new SimpleFeature({ ...f1, mate: f2 }),\n                                view: model.view,\n                                assemblyName: model.view.displayedRegions[0].assemblyName,\n                            },\n                        ]);\n                    } }, \"(single row)\")))));\n}\n","import React from 'react';\nimport BaseCard from '@jbrowse/core/BaseFeatureWidget/BaseFeatureDetail/BaseCard';\nimport { getEnv, getSession } from '@jbrowse/core/util';\nimport LaunchPairedEndBreakpointSplitViewPanel from './LaunchPairedEndBreakpointSplitViewPanel';\nexport default function SuppAlignments(props) {\n    const { model, feature } = props;\n    const session = getSession(model);\n    const { pluginManager } = getEnv(session);\n    let hasBreakendSplitView = false;\n    try {\n        hasBreakendSplitView = !!pluginManager.getViewType('BreakpointSplitView');\n    }\n    catch (e) {\n    }\n    return (React.createElement(BaseCard, { ...props, title: \"Paired alignments\" }, hasBreakendSplitView ? (React.createElement(LaunchPairedEndBreakpointSplitViewPanel, { model: model, feature: feature })) : null));\n}\n"],"names":[],"sourceRoot":"","ignoreList":[0,1]}
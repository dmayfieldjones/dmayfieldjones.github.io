{"version":3,"file":"static/chunks/605.3864b520c7a5856f.js","mappings":"qNAKA,MAAkB,uBAAU,IAC5B,MACA,SACA,CAAK,CACJ,EAsBD,EArB2B,cAAQ,cAqBpB,GArBiC,gBAAqB,CAqBnC,CApBlC,YAAY,GAAU,IACtB,WAAY,MAAiB,EAC7B,MAA0B,cAAQ,IAAI,EAAU,GAChD,4BACA,OAAY,eAAmB,CAAC,QAAM,EAAI,yCAA2D,CAC7F,eAAmB,CAAC,GAAa,EAAI,iBAAyB,CAC1D,eAAmB,CAAC,GAAU,kHAC9B,eAAmB,CAAC,GAAS,EAAI,qBAC7C,iBACA,CAAiB,+BAAkC,EACnD,EAAwE,KAAtD,eAAmB,QAAU,OAAS,aAAgB,oBAChE,eAAmB,CAAC,GAAa,MAC7B,eAAmB,CAAC,GAAM,EAAI,wFAC1C,mBACA,GACA,EAAmB,WACP,eAAmB,CAAC,GAAM,EAAI,mDAC1C,GACA,EAAmB,YACnB,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-linear-genome-view/esm/LinearBasicDisplay/components/SetMaxHeightDialog.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { Button, DialogActions, DialogContent, TextField, Typography, } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    root: {\n        width: 500,\n    },\n});\nconst SetMaxHeightDialog = observer(function ({ model, handleClose, }) {\n    const { classes } = useStyles();\n    const { maxHeight = '' } = model;\n    const [max, setMax] = useState(`${maxHeight}`);\n    const ok = max !== '' && !Number.isNaN(+max);\n    return (React.createElement(Dialog, { open: true, onClose: handleClose, title: \"Set max height\" },\n        React.createElement(DialogContent, { className: classes.root },\n            React.createElement(Typography, null, \"Set max height for the track. For example, you can increase this if the layout says \\\"Max height reached\\\"\"),\n            React.createElement(TextField, { value: max, onChange: event => {\n                    setMax(event.target.value);\n                }, placeholder: \"Enter max score\" }),\n            !ok ? React.createElement(\"div\", { style: { color: 'red' } }, \"Invalid number\") : null),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", type: \"submit\", autoFocus: true, disabled: !ok, onClick: () => {\n                    model.setMaxHeight(+max);\n                    handleClose();\n                } }, \"Submit\"),\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    handleClose();\n                } }, \"Cancel\"))));\n});\nexport default SetMaxHeightDialog;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}
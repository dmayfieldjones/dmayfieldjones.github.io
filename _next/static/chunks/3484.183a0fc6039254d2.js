"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3484],{83484:(e,t,a)=>{a.r(t),a.d(t,{default:()=>u});var n=a(98434),i=a(86168),r=a(29269),s=a(15715),o=a(64446),c=a(31232),l=a(14974);class u extends r.BaseFeatureDataAdapter{async configurePre(e){let t=this.getConf("vcfGzLocation"),a=this.getConf(["index","location"]),r=this.getConf(["index","indexType"]),s=(0,o.openLocation)(t,this.pluginManager),c="CSI"===r,l=new n.wD({filehandle:s,csiFilehandle:c?(0,o.openLocation)(a,this.pluginManager):void 0,tbiFilehandle:c?void 0:(0,o.openLocation)(a,this.pluginManager),chunkCacheSize:0x3200000});return{vcf:l,parser:new i.A({header:await l.getHeader()})}}async configurePre2(){return this.configured||(this.configured=this.configurePre().catch(e=>{throw this.configured=void 0,e})),this.configured}async configure(e){let{statusCallback:t=()=>{}}=e||{};return(0,s.updateStatus)("Downloading index",t,()=>this.configurePre2())}async getRefNames(e={}){let{vcf:t}=await this.configure(e);return t.getReferenceSequenceNames(e)}async getHeader(e){let{vcf:t}=await this.configure(e);return t.getHeader()}async getMetadata(e){let{parser:t}=await this.configure(e);return t.getMetadata()}getFeatures(e,t={}){return(0,c.ObservableCreate)(async a=>{let{refName:n,start:i,end:r}=e,{statusCallback:o=()=>{}}=t,{vcf:c,parser:u}=await this.configure(t);await (0,s.updateStatus)("Downloading variants",o,()=>c.getLines(n,i,r,{lineCallback:(e,t)=>{a.next(new l.A({variant:u.parseLine(e),parser:u,id:`${this.id}-vcf-${t}`}))},...t})),a.complete()},t.stopToken)}async getSources(){let e=this.getConf("samplesTsvLocation");if(""===e.uri||"/path/to/samples.tsv"===e.uri){let{parser:e}=await this.configure();return e.samples.map(e=>({name:e}))}{let t=(await (0,s.fetchAndMaybeUnzipText)((0,o.openLocation)(e,this.pluginManager))).split(/\n|\r\n|\r/),a=t[0].split("	"),{parser:n}=await this.configure(),i=new Set(n.samples),r=t.slice(1).filter(e=>!!e).map(e=>{let[t,...n]=e.split("	");return{...Object.fromEntries(n.map((e,t)=>[a[t+1],e])),name:t}});return r.filter(e=>!i.has(e.name)).length&&console.warn("Samples in metadata file not in VCF:",r.filter(e=>!i.has(e.name))),r.filter(e=>i.has(e.name))}}freeResources(){}}}}]);
//# sourceMappingURL=3484.183a0fc6039254d2.js.map
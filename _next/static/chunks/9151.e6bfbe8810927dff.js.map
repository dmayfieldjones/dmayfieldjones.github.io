{"version":3,"file":"static/chunks/9151.e6bfbe8810927dff.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/AssemblyAddForm.js","webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/AssemblyEditor.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/Create.js","webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/AssemblyTable.js","webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/AssemblyManager.js","webpack://_N_E/./node_modules/@jbrowse/plugin-data-management/esm/AssemblyManager/index.js","webpack://_N_E/./node_modules/@mui/icons-material/esm/Delete.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { FileSelector } from '@jbrowse/core/ui';\nimport { Alert, Button, DialogActions, DialogContent, MenuItem, TextField, } from '@mui/material';\nimport { observer } from 'mobx-react';\nconst AdapterSelector = observer(function ({ adapterSelection, setAdapterSelection, adapterTypes, }) {\n    return (React.createElement(TextField, { value: adapterSelection, variant: \"outlined\", select: true, helperText: \"Type of adapter to use\", fullWidth: true, onChange: event => {\n            setAdapterSelection(event.target.value);\n        } }, adapterTypes.map(str => (React.createElement(MenuItem, { key: str, value: str }, str)))));\n});\nconst UnindexedFastaAdapterInput = observer(function ({ fastaLocation, setFastaLocation, }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Alert, { severity: \"warning\", style: { margin: 30 } }, \"Note: use only relatively small files for this type, it is loaded into memory\"),\n        React.createElement(\"div\", null,\n            React.createElement(FileSelector, { inline: true, name: \"fastaLocation\", location: fastaLocation, setLocation: loc => {\n                    setFastaLocation(loc);\n                } }))));\n});\nconst IndexedFastaAdapterInput = observer(function ({ fastaLocation, faiLocation, setFaiLocation, setFastaLocation, }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", null,\n            React.createElement(FileSelector, { inline: true, name: \"fastaLocation\", location: fastaLocation, setLocation: loc => {\n                    setFastaLocation(loc);\n                } })),\n        React.createElement(\"div\", null,\n            React.createElement(FileSelector, { inline: true, name: \"faiLocation\", location: faiLocation, setLocation: loc => {\n                    setFaiLocation(loc);\n                } }))));\n});\nconst BgzipFastaAdapterInput = observer(function ({ fastaLocation, faiLocation, gziLocation, setFaiLocation, setGziLocation, setFastaLocation, }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", null,\n            React.createElement(FileSelector, { inline: true, name: \"fastaLocation\", location: fastaLocation, setLocation: loc => {\n                    setFastaLocation(loc);\n                } })),\n        React.createElement(\"div\", null,\n            React.createElement(FileSelector, { inline: true, name: \"faiLocation\", location: faiLocation, setLocation: loc => {\n                    setFaiLocation(loc);\n                } })),\n        React.createElement(\"div\", null,\n            React.createElement(FileSelector, { inline: true, name: \"gziLocation\", location: gziLocation, setLocation: loc => {\n                    setGziLocation(loc);\n                } }))));\n});\nconst TwoBitAdapterInput = observer(function ({ twoBitLocation, chromSizesLocation, setTwoBitLocation, setChromSizesLocation, }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", null,\n            React.createElement(FileSelector, { inline: true, name: \"twoBitLocation\", location: twoBitLocation, setLocation: loc => {\n                    setTwoBitLocation(loc);\n                } })),\n        React.createElement(\"div\", null,\n            React.createElement(FileSelector, { inline: true, name: \"chromSizesLocation (optional, can be added to speed up loading 2bit files with many contigs)\", location: chromSizesLocation, setLocation: loc => {\n                    setChromSizesLocation(loc);\n                } }))));\n});\nconst blank = { uri: '' };\nconst adapterTypes = [\n    'IndexedFastaAdapter',\n    'BgzipFastaAdapter',\n    'UnindexedFastaAdapter',\n    'TwoBitAdapter',\n];\nconst AssemblyAddForm = observer(function ({ session, onClose, }) {\n    const [assemblyName, setAssemblyName] = useState('');\n    const [assemblyDisplayName, setAssemblyDisplayName] = useState('');\n    const [adapterSelection, setAdapterSelection] = useState(adapterTypes[0]);\n    const [fastaLocation, setFastaLocation] = useState(blank);\n    const [faiLocation, setFaiLocation] = useState(blank);\n    const [gziLocation, setGziLocation] = useState(blank);\n    const [twoBitLocation, setTwoBitLocation] = useState(blank);\n    const [chromSizesLocation, setChromSizesLocation] = useState(blank);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DialogContent, null,\n            React.createElement(TextField, { id: \"assembly-name\", label: \"Assembly name\", helperText: \"The assembly name e.g. hg38\", variant: \"outlined\", value: assemblyName, onChange: event => {\n                    setAssemblyName(event.target.value);\n                }, slotProps: {\n                    htmlInput: { 'data-testid': 'assembly-name' },\n                } }),\n            React.createElement(TextField, { id: \"assembly-name\", label: \"Assembly display name\", helperText: '(optional) A human readable display name for the assembly e.g. \"Homo sapiens (hg38)\"', variant: \"outlined\", value: assemblyDisplayName, onChange: event => {\n                    setAssemblyDisplayName(event.target.value);\n                }, slotProps: {\n                    htmlInput: {\n                        'data-testid': 'assembly-display-name',\n                    },\n                } }),\n            React.createElement(AdapterSelector, { adapterSelection: adapterSelection, adapterTypes: adapterTypes, setAdapterSelection: setAdapterSelection }),\n            adapterSelection === 'IndexedFastaAdapter' ? (React.createElement(IndexedFastaAdapterInput, { fastaLocation: fastaLocation, faiLocation: faiLocation, setFaiLocation: setFaiLocation, setFastaLocation: setFastaLocation })) : adapterSelection === 'UnindexedFastaAdapter' ? (React.createElement(UnindexedFastaAdapterInput, { fastaLocation: fastaLocation, setFastaLocation: setFastaLocation })) : adapterSelection === 'TwoBitAdapter' ? (React.createElement(TwoBitAdapterInput, { twoBitLocation: twoBitLocation, chromSizesLocation: chromSizesLocation, setTwoBitLocation: setTwoBitLocation, setChromSizesLocation: setChromSizesLocation })) : (React.createElement(BgzipFastaAdapterInput, { fastaLocation: fastaLocation, gziLocation: gziLocation, faiLocation: faiLocation, setFaiLocation: setFaiLocation, setGziLocation: setGziLocation, setFastaLocation: setFastaLocation }))),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", color: \"primary\", onClick: () => {\n                    if (assemblyName === '') {\n                        session.notify(\"Can't create an assembly without a name\");\n                    }\n                    else {\n                        onClose();\n                        session.addAssembly({\n                            name: assemblyName,\n                            displayName: assemblyDisplayName,\n                            sequence: {\n                                type: 'ReferenceSequenceTrack',\n                                trackId: `${assemblyName}-${performance.now()}`,\n                                adapter: adapterSelection === 'IndexedFastaAdapter'\n                                    ? {\n                                        type: 'IndexedFastaAdapter',\n                                        fastaLocation,\n                                        faiLocation,\n                                    }\n                                    : adapterSelection === 'BgzipFastaAdapter'\n                                        ? {\n                                            type: 'BgzipFastaAdapter',\n                                            fastaLocation,\n                                            faiLocation,\n                                            gziLocation,\n                                        }\n                                        : adapterSelection === 'UnindexedFastaAdapter'\n                                            ? {\n                                                type: 'UnindexedFastaAdapter',\n                                                fastaLocation,\n                                            }\n                                            : {\n                                                type: 'TwoBitAdapter',\n                                                twoBitLocation,\n                                                chromSizesLocation,\n                                            },\n                            },\n                        });\n                        session.notify(`Added \"${assemblyName}\"`, 'success');\n                    }\n                } }, \"Submit\"),\n            React.createElement(Button, { variant: \"contained\", color: \"secondary\", onClick: () => {\n                    onClose();\n                } }, \"Cancel\"))));\n});\nexport default AssemblyAddForm;\n","import React from 'react';\nimport { ConfigurationEditor } from '@jbrowse/plugin-config';\nimport { Button, DialogActions, DialogContent } from '@mui/material';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()({\n    container: {\n        overflow: 'auto',\n        maxHeight: 600,\n    },\n});\nconst AssemblyEditor = observer(function ({ assembly, onClose, }) {\n    const { classes } = useStyles();\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DialogContent, null,\n            React.createElement(\"div\", { className: classes.container }, assembly ? (React.createElement(ConfigurationEditor, { model: { target: assembly } })) : (React.createElement(\"div\", null, \"No assembly\")))),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { variant: \"contained\", onClick: () => {\n                    onClose();\n                } }, \"Back\"))));\n});\nexport default AssemblyEditor;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Create');","import React from 'react';\nimport { readConfObject } from '@jbrowse/core/configuration';\nimport AddIcon from '@mui/icons-material/Add';\nimport CreateIcon from '@mui/icons-material/Create';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { Button, DialogActions, DialogContent, IconButton } from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { observer } from 'mobx-react';\nconst AssemblyTable = observer(function ({ onEditAssembly, onAddAssembly, onClose, session, }) {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(DialogContent, null,\n            React.createElement(\"div\", { style: { display: 'flex', flexDirection: 'column' } },\n                React.createElement(DataGrid, { rowHeight: 25, columnHeaderHeight: 35, hideFooter: session.assemblies.length < 25, rows: session.assemblies.map(assembly => {\n                        return {\n                            id: readConfObject(assembly, 'name'),\n                            name: readConfObject(assembly, 'name'),\n                            displayName: readConfObject(assembly, 'displayName'),\n                            aliases: readConfObject(assembly, 'aliases'),\n                            assembly,\n                        };\n                    }), columns: [\n                        { field: 'name' },\n                        { field: 'displayName' },\n                        { field: 'aliases' },\n                        {\n                            field: 'actions',\n                            renderCell: ({ row }) => {\n                                const { assembly, name } = row;\n                                const editable = session.sessionAssemblies.includes(assembly)\n                                    ? true\n                                    : session.adminMode;\n                                return (React.createElement(React.Fragment, null,\n                                    React.createElement(IconButton, { onClick: () => {\n                                            onEditAssembly(assembly);\n                                        } },\n                                        React.createElement(CreateIcon, null)),\n                                    React.createElement(IconButton, { \"data-testid\": `${name}-delete`, disabled: !editable, onClick: () => {\n                                            if (editable) {\n                                                if (!session.removeAssembly) {\n                                                    session.notify('Unable to find removeAssembly function');\n                                                }\n                                                else {\n                                                    session.removeAssembly(name);\n                                                }\n                                            }\n                                        } },\n                                        React.createElement(DeleteIcon, null))));\n                            },\n                        },\n                    ] }))),\n        React.createElement(DialogActions, null,\n            React.createElement(Button, { color: \"secondary\", variant: \"contained\", onClick: () => {\n                    onClose();\n                } }, \"Close\"),\n            React.createElement(Button, { variant: \"contained\", startIcon: React.createElement(AddIcon, null), onClick: () => {\n                    onAddAssembly();\n                } }, \"Add new assembly\"))));\n});\nexport default AssemblyTable;\n","import React, { useState } from 'react';\nimport { Dialog } from '@jbrowse/core/ui';\nimport { observer } from 'mobx-react';\nimport AssemblyAddForm from './AssemblyAddForm';\nimport AssemblyEditor from './AssemblyEditor';\nimport AssemblyTable from './AssemblyTable';\nconst AssemblyManager = observer(function ({ session, onClose, }) {\n    const [isFormOpen, setFormOpen] = useState(false);\n    const [editingAssembly, setEditingAssembly] = useState();\n    return (React.createElement(Dialog, { open: true, title: \"Assembly manager\", onClose: () => {\n            onClose();\n        } }, editingAssembly ? (React.createElement(AssemblyEditor, { assembly: editingAssembly, onClose: () => {\n            setEditingAssembly(undefined);\n        } })) : isFormOpen ? (React.createElement(AssemblyAddForm, { session: session, onClose: () => {\n            setFormOpen(false);\n        } })) : (React.createElement(AssemblyTable, { session: session, onClose: () => {\n            onClose();\n        }, onAddAssembly: () => {\n            setFormOpen(true);\n        }, onEditAssembly: arg => {\n            setEditingAssembly(arg);\n        } }))));\n});\nexport default AssemblyManager;\n","export { default } from './AssemblyManager';\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');"],"names":["createSvgIcon","_jsx","d"],"sourceRoot":"","ignoreList":[0,1,2,3,4,5,6]}
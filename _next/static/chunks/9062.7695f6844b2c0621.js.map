{"version":3,"file":"static/chunks/9062.7695f6844b2c0621.js","mappings":"sLAMA,MAAkB,uBAAU,SAC5B,IACA,mBACA,CAAK,CACL,CAAC,EACD,0BACA,cAAiC,gBAA8B,GAC/D,EAAwB,gBAAU,eAClC,IAAY,mBAAiB,EAC7B,SAAY,GAAU,IACtB,mBACA,eACA,mBACA,CAAY,6CAA6C,iBACzD,GACA,EACA,MAAwB,cAAQ,OAAa,cAAQ,IAAQ,IAAI,cAAQ,IAAM,EAC/E,CACA,eACA,UACA,MAAY,SAAI,QAAU,eAAyB,UAAK,UAAY,UAAW,SAAI,YAAc,WAAe,EAAG,SAAI,UAAY,SAAU,UAAK,OAAS,UAAW,SAAI,QAAS,EAAG,SAAI,OAAS,gBAAkB,EAAG,SAAI,OAAS,iBAAmB,EAAG,SAAI,OAAS,sBAAwB,EAAG,SAAI,OAAS,mBAAqB,GAAI,EAAG,EAAG,UAAK,UAAY,UAAW,UAAK,OAAS,UAAW,SAAI,QAAS,EAAG,SAAI,OAAS,iBAAmB,EAAG,SAAI,OAAS,WAAwB,EAAG,SAAI,OAAS,aAAe,EAAG,SAAI,OAAS,aAAe,GAAI,EAAG,UAAK,OAAS,UAAW,SAAI,QAAS,EAAG,UAAK,OAAS,uBAAiC,gBAAsB,OAAU,EAAG,SAAI,OAAS,sBAA0B,EAAG,SAAI,OAAS,2BAA6C,EAAG,UAAK,OAAS,qBAA0B,QAAU,kBAAyB,OAAS,SAAY,GAAI,gEAA4F,UAAK,OAAS,UAAW,SAAI,OAAS,SAAU,SAAI,IAAgB,eAA0B,EAAG,EAAG,UAAK,OAAS,+BAAqC,EAAG,SAAI,OAAS,yBAC1mC,aACA,0BACA,SAAuD,qBAA2B,QAClF,GACA,CACA,eACA,UAAoD,EAAG,SAAI,OAAS,iCACpE,MACA,kBAA+E,EAAG,UAAK,OAAS,qBAA4B,QAAY,kBAA2B,OAAW,SAAY,GAAI,IAAK,EAAI,GAAG,EAAK,MAAQ,GAAI,EAAG,CAC9N,CAAC,EACD,YAAuB,eAAc,EACrC,MACA,yBAAY,GAAuB,EACnC,4BAAsC,SAAI,QAAU,OACpD,SACA,UACA,6EACA,CAAW,MACX,CAMA,MAL2B,cAAQ,aACnC,CAIe,EAJf,OAAY,GAAQ,EACpB,CAAY,GAGqB,EAAC,aAHtB,GAA0B,EACtC,sCAAyD,SAAI,CAAC,IAAO,EAAI,uBAA4C,CACrH,CAAC","sources":["webpack://_N_E/./node_modules/@jbrowse/plugin-alignments/esm/LinearSNPCoverageDisplay/components/Tooltip.js"],"sourcesContent":["import { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from 'react';\nimport { toLocale } from '@jbrowse/core/util';\nimport { Tooltip } from '@jbrowse/plugin-wiggle';\nimport { observer } from 'mobx-react';\nimport { makeStyles } from 'tss-react/mui';\nconst useStyles = makeStyles()(() => ({\n    td: {\n        whiteSpace: 'nowrap',\n    },\n}));\nconst toP = (s = 0) => +(+s).toFixed(1);\nconst pct = (n, total = 1) => `${toP((n / (total || 1)) * 100)}%`;\nconst TooltipContents = forwardRef(function TooltipContents2(props, reactRef) {\n    const { feature, model } = props;\n    const { classes } = useStyles();\n    const start = feature.get('start') + 1;\n    const end = feature.get('end');\n    const name = feature.get('refName');\n    const { refbase, readsCounted, depth, ref, ...info } = feature.get('snpinfo');\n    const loc = [\n        name,\n        start === end ? toLocale(start) : `${toLocale(start)}..${toLocale(end)}`,\n    ]\n        .filter(f => !!f)\n        .join(':');\n    return (_jsx(\"div\", { ref: reactRef, children: _jsxs(\"table\", { children: [_jsx(\"caption\", { children: loc }), _jsx(\"thead\", { children: _jsxs(\"tr\", { children: [_jsx(\"th\", {}), _jsx(\"th\", { children: \"Base\" }), _jsx(\"th\", { children: \"Count\" }), _jsx(\"th\", { children: \"% of Total\" }), _jsx(\"th\", { children: \"Strands\" })] }) }), _jsxs(\"tbody\", { children: [_jsxs(\"tr\", { children: [_jsx(\"td\", {}), _jsx(\"td\", { children: \"Total\" }), _jsx(\"td\", { children: readsCounted }), _jsx(\"td\", { children: \" \" }), _jsx(\"td\", { children: \" \" })] }), _jsxs(\"tr\", { children: [_jsx(\"td\", {}), _jsxs(\"td\", { children: [\"REF \", refbase ? `(${refbase.toUpperCase()})` : ''] }), _jsx(\"td\", { children: ref.entryDepth }), _jsx(\"td\", { children: pct(ref.entryDepth, readsCounted) }), _jsxs(\"td\", { children: [ref['-1'] ? `${ref['-1']}(-)` : '', ref['1'] ? `${ref['1']}(+)` : ''] })] }), Object.entries(info).map(([key, entry]) => Object.entries(entry).map(([base, score]) => (_jsxs(\"tr\", { children: [_jsx(\"td\", { children: _jsx(ColorSquare, { model: model, base: base }) }), _jsxs(\"td\", { children: [base.toUpperCase(), \" \"] }), _jsx(\"td\", { className: classes.td, children: [\n                                        score.entryDepth,\n                                        score.avgProbability !== undefined\n                                            ? `(avg. ${pct(score.avgProbability)} prob.)`\n                                            : '',\n                                    ]\n                                        .filter(f => !!f)\n                                        .join(' ') }), _jsx(\"td\", { children: base === 'depth' || base === 'skip'\n                                        ? '---'\n                                        : pct(score.entryDepth, readsCounted) }), _jsxs(\"td\", { children: [score['-1'] ? `${score['-1']}(-)` : '', score['1'] ? `${score['1']}(+)` : ''] })] }, `${key}_${base}`))))] })] }) }));\n});\nfunction ColorSquare({ base, model, }) {\n    var _a;\n    const { visibleModifications } = model;\n    return base.startsWith('mod_') ? (_jsx(\"div\", { style: {\n            width: 10,\n            height: 10,\n            background: (_a = visibleModifications.get(base.replace('mod_', ''))) === null || _a === void 0 ? void 0 : _a.color,\n        } })) : null;\n}\nconst SNPCoverageTooltip = observer(function (props) {\n    const { model } = props;\n    const { featureUnderMouse: feat } = model;\n    return feat && feat.get('type') === 'skip' ? null : (_jsx(Tooltip, { TooltipContents: TooltipContents, ...props }));\n});\nexport default SNPCoverageTooltip;\n"],"names":[],"sourceRoot":"","ignoreList":[0]}